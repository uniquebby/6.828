!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
$(OBJDIR)/.deps	GNUmakefile	/^$(OBJDIR)\/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)\/$(dir)\/*.d))$/;"	t
$(OBJDIR)/.vars.%	GNUmakefile	/^$(OBJDIR)\/.vars.%: FORCE$/;"	t
.bss	kern/kernel.ld	/^	.bss : {$/;"	S
.data	kern/kernel.ld	/^	.data : {$/;"	S
.gdbinit	GNUmakefile	/^.gdbinit: .gdbinit.tmpl$/;"	t
.rodata	kern/kernel.ld	/^	.rodata : {$/;"	S
.stab	kern/kernel.ld	/^	.stab : {$/;"	S
.stabstr	kern/kernel.ld	/^	.stabstr : {$/;"	S
.text	kern/kernel.ld	/^	.text : AT(0x100000) {$/;"	S
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anond42707880103
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAY_SIZE	inc/types.h	/^#define ARRAY_SIZE(/;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM /;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM /;"	d	file:
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PE_ON	boot/boot.S	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PE_ON	obj/boot/boot.asm	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3824070e0103
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3824070e0103
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3824070e0103
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3824070e0103
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3824070e0103
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3824070e0103
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
IO_RTC	kern/kclock.h	/^#define	IO_RTC	/;"	d
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	/^#define JOS_KERN_KCLOCK_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_KERN_PMAP_H	kern/pmap.h	/^#define JOS_KERN_PMAP_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KADDR	kern/pmap.h	/^#define KADDR(/;"	d
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=2$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3824070e0103
MC_NVRAM_SIZE	kern/kclock.h	/^#define	MC_NVRAM_SIZE	/;"	d
MC_NVRAM_START	kern/kclock.h	/^#define	MC_NVRAM_START	/;"	d
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS /;"	d	file:
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC /;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
NVRAM_BASEHI	kern/kclock.h	/^#define NVRAM_BASEHI	/;"	d
NVRAM_BASELO	kern/kclock.h	/^#define NVRAM_BASELO	/;"	d
NVRAM_EXT16HI	kern/kclock.h	/^#define NVRAM_EXT16HI	/;"	d
NVRAM_EXT16LO	kern/kclock.h	/^#define NVRAM_EXT16LO	/;"	d
NVRAM_EXTHI	kern/kclock.h	/^#define NVRAM_EXTHI	/;"	d
NVRAM_EXTLO	kern/kclock.h	/^#define NVRAM_EXTLO	/;"	d
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018$/;"	m
PADDR	kern/pmap.h	/^#define PADDR(/;"	d
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PROT_MODE_CSEG	boot/boot.S	/^.set PROT_MODE_CSEG, 0x8         # kernel code segment selector$/;"	d
PROT_MODE_DSEG	boot/boot.S	/^.set PROT_MODE_DSEG, 0x10        # kernel data segment selector$/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:std/;"	m
RELOC	kern/entry.S	/^#define	RELOC(/;"	d	file:
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SRL	kern/entry.S	/^#define SRL(/;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | aw/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
V	conf/env.mk	/^V = @$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
_Bool	inc/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__STABSTR_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STABSTR_BEGIN__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_END__	kern/kernel.ld	/^		PROVIDE(__STABSTR_END__ = .);$/;"	s	section:.stabstr	assignment:provide
__STAB_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STAB_BEGIN__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_END__	kern/kernel.ld	/^		PROVIDE(__STAB_END__ = .);$/;"	s	section:.stab	assignment:provide
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3824070e0103	inc/error.h	/^enum {$/;"	g
__anon9d6ad5280108	kern/console.c	/^static struct {$/;"	s	file:
__anoncaf80a390103	inc/types.h	/^enum { false, true };$/;"	g
__anond42707880103	kern/pmap.h	/^enum {$/;"	g
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	typeref:typename:void *
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	typeref:typename:physaddr_t
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	typeref:typename:unsigned	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
all	GNUmakefile	/^all:$/;"	t
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
always	GNUmakefile	/^always:$/;"	t
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	typeref:typename:void *	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	typeref:typename:void	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f	typeref:typename:void
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	typeref:typename:void
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint8_t[]	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	typeref:typename:char[]	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	typeref:typename:void	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	typeref:typename:void	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	typeref:typename:uint8_t * [4]	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	typeref:typename:void	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	typeref:typename:void	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	typeref:typename:void	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	typeref:typename:void	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	typeref:typename:void	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	typeref:typename:physaddr_t	file:
clean	GNUmakefile	/^clean:$/;"	t
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	typeref:typename:int	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command[]	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9d6ad5280108
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	typeref:typename:int
cons_init	kern/console.c	/^cons_init(void)$/;"	f	typeref:typename:void
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	typeref:typename:void	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	typeref:typename:void	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	typeref:typename:void
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	typeref:typename:void
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	typeref:typename:uint16_t *	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	typeref:typename:uint16_t	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	typeref:typename:int
delay	kern/console.c	/^delay(void)$/;"	f	typeref:typename:void	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	typeref:typename:const char *	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
distclean	GNUmakefile	/^distclean: realclean$/;"	t
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	typeref:typename:uint8_t[12]
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	typeref:typename:uint32_t
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	typeref:typename:uint32_t
ebp	obj/kern/kernel.asm	/^		ebp = *ptr_ebp;$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
edata	kern/kernel.ld	/^		PROVIDE(edata = .);$/;"	s	section:.bss	assignment:provide
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	typeref:typename:uintptr_t
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:int
end	kern/kernel.ld	/^		PROVIDE(end = .);$/;"	s	section:.bss	assignment:provide
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v	typeref:typename:pde_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v	typeref:typename:pte_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v	typeref:typename:pte_t[]
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	typeref:typename:const char * const[]	file:
etext	kern/kernel.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 50 11 00       	mov    $0x115000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 30 11 f0       	mov    $0xf0113000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 68 00 00 00       	call   f01000a6 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	e8 77 01 00 00       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	81 c3 1e 60 01 00    	add    $0x1601e,%ebx$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100053	obj/kern/kernel.asm	/^f0100053:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100056	obj/kern/kernel.asm	/^f0100056:	56                   	push   %esi$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	8d 83 98 c7 fe ff    	lea    -0x13868(%ebx),%eax$/;"	l
f010005d	obj/kern/kernel.asm	/^f010005d:	50                   	push   %eax$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	e8 36 17 00 00       	call   f0101799 <cprintf>$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	85 f6                	test   %esi,%esi$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	7e 29                	jle    f0100093 <test_backtrace+0x53>$/;"	l
f010006a	obj/kern/kernel.asm	/^f010006a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	50                   	push   %eax$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	e8 ca ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100079	obj/kern/kernel.asm	/^f0100079:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	56                   	push   %esi$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	8d 83 b4 c7 fe ff    	lea    -0x1384c(%ebx),%eax$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	50                   	push   %eax$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	e8 10 17 00 00       	call   f0101799 <cprintf>$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	5b                   	pop    %ebx$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	5e                   	pop    %esi$/;"	l
f0100091	obj/kern/kernel.asm	/^f0100091:	5d                   	pop    %ebp$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c3                   	ret    $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100096	obj/kern/kernel.asm	/^f0100096:	6a 00                	push   $0x0$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	6a 00                	push   $0x0$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	6a 00                	push   $0x0$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	e8 cd 07 00 00       	call   f010086e <mon_backtrace>$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	eb d3                	jmp    f0100079 <test_backtrace+0x39>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6 <i386_init>:$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	55                   	push   %ebp$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	53                   	push   %ebx$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	e8 0f 01 00 00       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	81 c3 b6 5f 01 00    	add    $0x15fb6,%ebx$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	c7 c2 80 60 11 f0    	mov    $0xf0116080,%edx$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 c0 c0 66 11 f0    	mov    $0xf01166c0,%eax$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	29 d0                	sub    %edx,%eax$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	50                   	push   %eax$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	6a 00                	push   $0x0$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	52                   	push   %edx$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	e8 eb 22 00 00       	call   f01023ba <memset>$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 15 05 00 00       	call   f01005e9 <cons_init>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	8d 83 cf c7 fe ff    	lea    -0x13831(%ebx),%eax$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	50                   	push   %eax$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	e8 b1 16 00 00       	call   f0101799 <cprintf>$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 4c ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 d2 0b 00 00       	call   f0100ccb <mem_init>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	6a 00                	push   $0x0$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 0a 08 00 00       	call   f0100910 <monitor>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	eb f1                	jmp    f01000fc <i386_init+0x56>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b <_panic>:$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	55                   	push   %ebp$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	89 e5                	mov    %esp,%ebp$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	57                   	push   %edi$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	56                   	push   %esi$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	53                   	push   %ebx$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	e8 a8 00 00 00       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	81 c3 4f 5f 01 00    	add    $0x15f4f,%ebx$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	c7 c0 c4 66 11 f0    	mov    $0xf01166c4,%eax$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	74 0f                	je     f010013c <_panic+0x31>$/;"	l
f010012d	obj/kern/kernel.asm	/^f010012d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	6a 00                	push   $0x0$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	e8 d9 07 00 00       	call   f0100910 <monitor>$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	83 c4 10             	add    $0x10,%esp$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	eb f1                	jmp    f010012d <_panic+0x22>$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	89 38                	mov    %edi,(%eax)$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	fa                   	cli    $/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	fc                   	cld    $/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100146	obj/kern/kernel.asm	/^f0100146:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	8d 83 ea c7 fe ff    	lea    -0x13816(%ebx),%eax$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	50                   	push   %eax$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	e8 41 16 00 00       	call   f0101799 <cprintf>$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	83 c4 08             	add    $0x8,%esp$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	56                   	push   %esi$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	57                   	push   %edi$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	e8 00 16 00 00       	call   f0101762 <vcprintf>$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	8d 83 26 c8 fe ff    	lea    -0x137da(%ebx),%eax$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 29 16 00 00       	call   f0101799 <cprintf>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	eb b8                	jmp    f010012d <_panic+0x22>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175 <_warn>:$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	55                   	push   %ebp$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	89 e5                	mov    %esp,%ebp$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	56                   	push   %esi$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	53                   	push   %ebx$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 42 00 00 00       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	81 c3 e9 5e 01 00    	add    $0x15ee9,%ebx$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	8d 83 02 c8 fe ff    	lea    -0x137fe(%ebx),%eax$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	50                   	push   %eax$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	e8 fc 15 00 00       	call   f0101799 <cprintf>$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	56                   	push   %esi$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	e8 b9 15 00 00       	call   f0101762 <vcprintf>$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	8d 83 26 c8 fe ff    	lea    -0x137da(%ebx),%eax$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	e8 e2 15 00 00       	call   f0101799 <cprintf>$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	5b                   	pop    %ebx$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	5e                   	pop    %esi$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	5d                   	pop    %ebp$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	c3                   	ret    $/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1 <__x86.get_pc_thunk.bx>:$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	c3                   	ret    $/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5 <serial_proc_data>:$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	ec                   	in     (%dx),%al$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	a8 01                	test   $0x1,%al$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	74 0a                	je     f01001d9 <serial_proc_data+0x14>$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	ec                   	in     (%dx),%al$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	c3                   	ret    $/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	c3                   	ret    $/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df <cons_intr>:$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	55                   	push   %ebp$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	56                   	push   %esi$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	53                   	push   %ebx$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	e8 d8 ff ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	81 c3 7f 5e 01 00    	add    $0x15e7f,%ebx$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	89 c6                	mov    %eax,%esi$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	ff d6                	call   *%esi$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	74 2a                	je     f0100222 <cons_intr+0x43>$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	85 c0                	test   %eax,%eax$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	74 f5                	je     f01001f1 <cons_intr+0x12>$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	8b 8b 3c 02 00 00    	mov    0x23c(%ebx),%ecx$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	88 84 0b 38 00 00 00 	mov    %al,0x38(%ebx,%ecx,1)$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	89 93 3c 02 00 00    	mov    %edx,0x23c(%ebx)$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	eb cf                	jmp    f01001f1 <cons_intr+0x12>$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	5b                   	pop    %ebx$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	5e                   	pop    %esi$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	5d                   	pop    %ebp$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	c3                   	ret    $/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226 <kbd_proc_data>:$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	55                   	push   %ebp$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	89 e5                	mov    %esp,%ebp$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	56                   	push   %esi$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	53                   	push   %ebx$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	e8 91 ff ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	81 c3 38 5e 01 00    	add    $0x15e38,%ebx$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	ec                   	in     (%dx),%al$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	a8 01                	test   $0x1,%al$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	0f 84 fb 00 00 00    	je     f010033f <kbd_proc_data+0x119>$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	a8 20                	test   $0x20,%al$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	0f 85 fa 00 00 00    	jne    f0100346 <kbd_proc_data+0x120>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	ec                   	in     (%dx),%al$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	89 c2                	mov    %eax,%edx$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	74 64                	je     f01002bc <kbd_proc_data+0x96>$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	84 c0                	test   %al,%al$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	78 75                	js     f01002d1 <kbd_proc_data+0xab>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	8b 8b 18 00 00 00    	mov    0x18(%ebx),%ecx$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	74 0e                	je     f0100275 <kbd_proc_data+0x4f>$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	89 c2                	mov    %eax,%edx$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	89 8b 18 00 00 00    	mov    %ecx,0x18(%ebx)$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	0f b6 84 13 58 c9 fe 	movzbl -0x136a8(%ebx,%edx,1),%eax$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	ff $/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	0b 83 18 00 00 00    	or     0x18(%ebx),%eax$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	0f b6 8c 13 58 c8 fe 	movzbl -0x137a8(%ebx,%edx,1),%ecx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	ff $/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	31 c8                	xor    %ecx,%eax$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	89 83 18 00 00 00    	mov    %eax,0x18(%ebx)$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	89 c1                	mov    %eax,%ecx$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	8b 8c 8b 98 ff ff ff 	mov    -0x68(%ebx,%ecx,4),%ecx$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	a8 08                	test   $0x8,%al$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	74 65                	je     f0100312 <kbd_proc_data+0xec>$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	89 f2                	mov    %esi,%edx$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	8d 4e 9f             	lea    -0x61(%esi),%ecx$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	77 4f                	ja     f0100306 <kbd_proc_data+0xe0>$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	83 ee 20             	sub    $0x20,%esi$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	eb 0c                	jmp    f01002c8 <kbd_proc_data+0xa2>$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	83 8b 18 00 00 00 40 	orl    $0x40,0x18(%ebx)$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	89 f0                	mov    %esi,%eax$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	5b                   	pop    %ebx$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	5e                   	pop    %esi$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	5d                   	pop    %ebp$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	c3                   	ret    $/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	8b 8b 18 00 00 00    	mov    0x18(%ebx),%ecx$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	89 ce                	mov    %ecx,%esi$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	83 e6 40             	and    $0x40,%esi$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	85 f6                	test   %esi,%esi$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	0f b6 84 13 58 c9 fe 	movzbl -0x136a8(%ebx,%edx,1),%eax$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	ff $/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	83 c8 40             	or     $0x40,%eax$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	f7 d0                	not    %eax$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	21 c8                	and    %ecx,%eax$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	89 83 18 00 00 00    	mov    %eax,0x18(%ebx)$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	eb c2                	jmp    f01002c8 <kbd_proc_data+0xa2>$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	8d 4e 20             	lea    0x20(%esi),%ecx$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	0f 42 f1             	cmovb  %ecx,%esi$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	f7 d0                	not    %eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	a8 06                	test   $0x6,%al$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	75 b0                	jne    f01002c8 <kbd_proc_data+0xa2>$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	81 fe e9 00 00 00    	cmp    $0xe9,%esi$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	75 a8                	jne    f01002c8 <kbd_proc_data+0xa2>$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	8d 83 1c c8 fe ff    	lea    -0x137e4(%ebx),%eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	50                   	push   %eax$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	e8 6a 14 00 00       	call   f0101799 <cprintf>$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	ee                   	out    %al,(%dx)$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	eb 89                	jmp    f01002c8 <kbd_proc_data+0xa2>$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	eb 82                	jmp    f01002c8 <kbd_proc_data+0xa2>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	e9 78 ff ff ff       	jmp    f01002c8 <kbd_proc_data+0xa2>$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350 <cons_putc>:$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	55                   	push   %ebp$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	89 e5                	mov    %esp,%ebp$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	57                   	push   %edi$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	56                   	push   %esi$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	53                   	push   %ebx$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	e8 63 fe ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	81 c3 0a 5d 01 00    	add    $0x15d0a,%ebx$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	89 c7                	mov    %eax,%edi$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	ec                   	in     (%dx),%al$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	a8 20                	test   $0x20,%al$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	75 13                	jne    f010038d <cons_putc+0x3d>$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	7f 0b                	jg     f010038d <cons_putc+0x3d>$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	89 ca                	mov    %ecx,%edx$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	ec                   	in     (%dx),%al$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	ec                   	in     (%dx),%al$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	ec                   	in     (%dx),%al$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	ec                   	in     (%dx),%al$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	83 c6 01             	add    $0x1,%esi$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	eb e3                	jmp    f0100370 <cons_putc+0x20>$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	89 f8                	mov    %edi,%eax$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	ee                   	out    %al,(%dx)$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	ec                   	in     (%dx),%al$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	7f 0f                	jg     f01003bf <cons_putc+0x6f>$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	84 c0                	test   %al,%al$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	78 0b                	js     f01003bf <cons_putc+0x6f>$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	89 ca                	mov    %ecx,%edx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	ec                   	in     (%dx),%al$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	ec                   	in     (%dx),%al$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	ec                   	in     (%dx),%al$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	ec                   	in     (%dx),%al$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	83 c6 01             	add    $0x1,%esi$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	eb e3                	jmp    f01003a2 <cons_putc+0x52>$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	ee                   	out    %al,(%dx)$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	ee                   	out    %al,(%dx)$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	ee                   	out    %al,(%dx)$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	89 fa                	mov    %edi,%edx$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	89 f8                	mov    %edi,%eax$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	80 cc 07             	or     $0x7,%ah$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	85 d2                	test   %edx,%edx$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	89 f8                	mov    %edi,%eax$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	0f 84 b4 00 00 00    	je     f01004ae <cons_putc+0x15e>$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	7e 74                	jle    f0100470 <cons_putc+0x120>$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	0f 84 9c 00 00 00    	je     f01004a1 <cons_putc+0x151>$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	0f 85 d7 00 00 00    	jne    f01004e5 <cons_putc+0x195>$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	0f b7 83 40 02 00 00 	movzwl 0x240(%ebx),%eax$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	66 89 83 40 02 00 00 	mov    %ax,0x240(%ebx)$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	66 81 bb 40 02 00 00 	cmpw   $0x7cf,0x240(%ebx)$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	cf 07 $/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	0f 87 ce 00 00 00    	ja     f0100508 <cons_putc+0x1b8>$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	8b 8b 48 02 00 00    	mov    0x248(%ebx),%ecx$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	89 ca                	mov    %ecx,%edx$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	ee                   	out    %al,(%dx)$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	0f b7 9b 40 02 00 00 	movzwl 0x240(%ebx),%ebx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	89 d8                	mov    %ebx,%eax$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	89 f2                	mov    %esi,%edx$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	ee                   	out    %al,(%dx)$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	89 ca                	mov    %ecx,%edx$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	ee                   	out    %al,(%dx)$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	89 d8                	mov    %ebx,%eax$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	89 f2                	mov    %esi,%edx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	ee                   	out    %al,(%dx)$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	5b                   	pop    %ebx$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	5e                   	pop    %esi$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	5f                   	pop    %edi$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	5d                   	pop    %ebp$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	c3                   	ret    $/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	75 70                	jne    f01004e5 <cons_putc+0x195>$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	0f b7 83 40 02 00 00 	movzwl 0x240(%ebx),%eax$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	66 85 c0             	test   %ax,%ax$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	74 b9                	je     f010043a <cons_putc+0xea>$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	66 89 83 40 02 00 00 	mov    %ax,0x240(%ebx)$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	89 fa                	mov    %edi,%edx$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	b2 00                	mov    $0x0,%dl$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	83 ca 20             	or     $0x20,%edx$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	8b 8b 44 02 00 00    	mov    0x244(%ebx),%ecx$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	eb 8a                	jmp    f010042b <cons_putc+0xdb>$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	66 83 83 40 02 00 00 	addw   $0x50,0x240(%ebx)$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	50 $/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	e9 60 ff ff ff       	jmp    f010040e <cons_putc+0xbe>$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	e8 98 fe ff ff       	call   f0100350 <cons_putc>$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	e8 8e fe ff ff       	call   f0100350 <cons_putc>$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	e8 84 fe ff ff       	call   f0100350 <cons_putc>$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	e8 7a fe ff ff       	call   f0100350 <cons_putc>$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	e8 70 fe ff ff       	call   f0100350 <cons_putc>$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	e9 46 ff ff ff       	jmp    f010042b <cons_putc+0xdb>$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	0f b7 83 40 02 00 00 	movzwl 0x240(%ebx),%eax$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	66 89 93 40 02 00 00 	mov    %dx,0x240(%ebx)$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	8b 93 44 02 00 00    	mov    0x244(%ebx),%edx$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	e9 23 ff ff ff       	jmp    f010042b <cons_putc+0xdb>$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	8b 83 44 02 00 00    	mov    0x244(%ebx),%eax$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	52                   	push   %edx$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	50                   	push   %eax$/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	e8 df 1e 00 00       	call   f0102402 <memmove>$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	8b 93 44 02 00 00    	mov    0x244(%ebx),%edx$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	39 d0                	cmp    %edx,%eax$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	75 f4                	jne    f0100538 <cons_putc+0x1e8>$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	66 83 ab 40 02 00 00 	subw   $0x50,0x240(%ebx)$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	50 $/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	e9 e9 fe ff ff       	jmp    f010043a <cons_putc+0xea>$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551 <serial_intr>:$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	e8 dc 01 00 00       	call   f0100732 <__x86.get_pc_thunk.ax>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	05 12 5b 01 00       	add    $0x15b12,%eax$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	80 b8 4c 02 00 00 00 	cmpb   $0x0,0x24c(%eax)$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	75 01                	jne    f0100565 <serial_intr+0x14>$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	c3                   	ret    $/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	55                   	push   %ebp$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	89 e5                	mov    %esp,%ebp$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	8d 80 5d a1 fe ff    	lea    -0x15ea3(%eax),%eax$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	e8 69 fc ff ff       	call   f01001df <cons_intr>$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	c9                   	leave  $/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	c3                   	ret    $/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578 <kbd_intr>:$/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578:	55                   	push   %ebp$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	89 e5                	mov    %esp,%ebp$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	e8 af 01 00 00       	call   f0100732 <__x86.get_pc_thunk.ax>$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	05 e5 5a 01 00       	add    $0x15ae5,%eax$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	8d 80 be a1 fe ff    	lea    -0x15e42(%eax),%eax$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	e8 4c fc ff ff       	call   f01001df <cons_intr>$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	c9                   	leave  $/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	c3                   	ret    $/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595 <cons_getc>:$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	55                   	push   %ebp$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	89 e5                	mov    %esp,%ebp$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	53                   	push   %ebx$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	e8 20 fc ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	81 c3 c7 5a 01 00    	add    $0x15ac7,%ebx$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	e8 a5 ff ff ff       	call   f0100551 <serial_intr>$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	e8 c7 ff ff ff       	call   f0100578 <kbd_intr>$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	8b 8b 38 02 00 00    	mov    0x238(%ebx),%ecx$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	3b 8b 3c 02 00 00    	cmp    0x23c(%ebx),%ecx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	74 1f                	je     f01005e3 <cons_getc+0x4e>$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	0f b6 84 0b 38 00 00 	movzbl 0x38(%ebx,%ecx,1),%eax$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	00 $/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	89 93 38 02 00 00    	mov    %edx,0x238(%ebx)$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	83 c4 04             	add    $0x4,%esp$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	5b                   	pop    %ebx$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	5d                   	pop    %ebp$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	c3                   	ret    $/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9 <cons_init>:$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	55                   	push   %ebp$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	57                   	push   %edi$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	56                   	push   %esi$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	53                   	push   %ebx$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	e8 ca fb ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	81 c3 71 5a 01 00    	add    $0x15a71,%ebx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	5a a5 $/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	0f 84 bc 00 00 00    	je     f01006da <cons_init+0xf1>$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	c7 83 48 02 00 00 b4 	movl   $0x3b4,0x248(%ebx)$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	03 00 00 $/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	8b bb 48 02 00 00    	mov    0x248(%ebx),%edi$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	89 fa                	mov    %edi,%edx$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	ee                   	out    %al,(%dx)$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	89 ca                	mov    %ecx,%edx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	ec                   	in     (%dx),%al$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	89 fa                	mov    %edi,%edx$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	ee                   	out    %al,(%dx)$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	89 ca                	mov    %ecx,%edx$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	ec                   	in     (%dx),%al$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	89 bb 44 02 00 00    	mov    %edi,0x244(%ebx)$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	09 c6                	or     %eax,%esi$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	66 89 b3 40 02 00 00 	mov    %si,0x240(%ebx)$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	89 c8                	mov    %ecx,%eax$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	ee                   	out    %al,(%dx)$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	89 fa                	mov    %edi,%edx$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	ee                   	out    %al,(%dx)$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	ee                   	out    %al,(%dx)$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	89 c8                	mov    %ecx,%eax$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	89 f2                	mov    %esi,%edx$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	ee                   	out    %al,(%dx)$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	89 fa                	mov    %edi,%edx$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	ee                   	out    %al,(%dx)$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	89 c8                	mov    %ecx,%eax$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	ee                   	out    %al,(%dx)$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	89 f2                	mov    %esi,%edx$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	ee                   	out    %al,(%dx)$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	ec                   	in     (%dx),%al$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	89 c1                	mov    %eax,%ecx$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	3c ff                	cmp    $0xff,%al$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	0f 95 83 4c 02 00 00 	setne  0x24c(%ebx)$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	ec                   	in     (%dx),%al$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	ec                   	in     (%dx),%al$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	74 25                	je     f01006f7 <cons_init+0x10e>$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	5b                   	pop    %ebx$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	5e                   	pop    %esi$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	5f                   	pop    %edi$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	5d                   	pop    %ebp$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	c3                   	ret    $/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	c7 83 48 02 00 00 d4 	movl   $0x3d4,0x248(%ebx)$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	03 00 00 $/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	e9 38 ff ff ff       	jmp    f010062f <cons_init+0x46>$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	8d 83 28 c8 fe ff    	lea    -0x137d8(%ebx),%eax$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	50                   	push   %eax$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	e8 93 10 00 00       	call   f0101799 <cprintf>$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	eb c7                	jmp    f01006d2 <cons_init+0xe9>$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b <cputchar>:$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	55                   	push   %ebp$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	89 e5                	mov    %esp,%ebp$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	e8 37 fc ff ff       	call   f0100350 <cons_putc>$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	c9                   	leave  $/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	c3                   	ret    $/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b <getchar>:$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	55                   	push   %ebp$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	89 e5                	mov    %esp,%ebp$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	e8 6f fe ff ff       	call   f0100595 <cons_getc>$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	85 c0                	test   %eax,%eax$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	74 f7                	je     f0100721 <getchar+0x6>$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	c9                   	leave  $/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	c3                   	ret    $/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c <iscons>:$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	c3                   	ret    $/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732 <__x86.get_pc_thunk.ax>:$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	c3                   	ret    $/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736 <mon_help>:$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	55                   	push   %ebp$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	89 e5                	mov    %esp,%ebp$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	56                   	push   %esi$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	53                   	push   %ebx$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	e8 81 fa ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	81 c3 28 59 01 00    	add    $0x15928,%ebx$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	8d 83 58 ca fe ff    	lea    -0x135a8(%ebx),%eax$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	50                   	push   %eax$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	8d 83 76 ca fe ff    	lea    -0x1358a(%ebx),%eax$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	50                   	push   %eax$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	8d b3 7b ca fe ff    	lea    -0x13585(%ebx),%esi$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	56                   	push   %esi$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	e8 36 10 00 00       	call   f0101799 <cprintf>$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	8d 83 28 cb fe ff    	lea    -0x134d8(%ebx),%eax$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	50                   	push   %eax$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	8d 83 84 ca fe ff    	lea    -0x1357c(%ebx),%eax$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	50                   	push   %eax$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	56                   	push   %esi$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	e8 1f 10 00 00       	call   f0101799 <cprintf>$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	8d 83 8d ca fe ff    	lea    -0x13573(%ebx),%eax$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	50                   	push   %eax$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	8d 83 a4 ca fe ff    	lea    -0x1355c(%ebx),%eax$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	50                   	push   %eax$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	56                   	push   %esi$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	e8 08 10 00 00       	call   f0101799 <cprintf>$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	5b                   	pop    %ebx$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	5e                   	pop    %esi$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	5d                   	pop    %ebp$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	c3                   	ret    $/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d <mon_kerninfo>:$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	55                   	push   %ebp$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	57                   	push   %edi$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	56                   	push   %esi$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	53                   	push   %ebx$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	e8 16 fa ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	81 c3 bd 58 01 00    	add    $0x158bd,%ebx$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	8d 83 ae ca fe ff    	lea    -0x13552(%ebx),%eax$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	50                   	push   %eax$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	e8 dc 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	8d 83 50 cb fe ff    	lea    -0x134b0(%ebx),%eax$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	50                   	push   %eax$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	e8 c7 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edi$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eax$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	50                   	push   %eax$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	57                   	push   %edi$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	8d 83 78 cb fe ff    	lea    -0x13488(%ebx),%eax$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	50                   	push   %eax$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	e8 aa 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	c7 c0 ff 27 10 f0    	mov    $0xf01027ff,%eax$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	52                   	push   %edx$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	50                   	push   %eax$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	8d 83 9c cb fe ff    	lea    -0x13464(%ebx),%eax$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	50                   	push   %eax$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	e8 8d 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	c7 c0 80 60 11 f0    	mov    $0xf0116080,%eax$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	52                   	push   %edx$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	50                   	push   %eax$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	8d 83 c0 cb fe ff    	lea    -0x13440(%ebx),%eax$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	50                   	push   %eax$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	e8 70 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	c7 c6 c0 66 11 f0    	mov    $0xf01166c0,%esi$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	50                   	push   %eax$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	56                   	push   %esi$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	8d 83 e4 cb fe ff    	lea    -0x1341c(%ebx),%eax$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	50                   	push   %eax$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	e8 53 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	29 fe                	sub    %edi,%esi$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	81 c6 ff 03 00 00    	add    $0x3ff,%esi$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	c1 fe 0a             	sar    $0xa,%esi$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	56                   	push   %esi$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	8d 83 08 cc fe ff    	lea    -0x133f8(%ebx),%eax$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	50                   	push   %eax$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	e8 38 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	5b                   	pop    %ebx$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	5e                   	pop    %esi$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	5f                   	pop    %edi$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	5d                   	pop    %ebp$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	c3                   	ret    $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e <mon_backtrace>:$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	55                   	push   %ebp$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	57                   	push   %edi$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	56                   	push   %esi$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	53                   	push   %ebx$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	e8 45 f9 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	81 c3 ec 57 01 00    	add    $0x157ec,%ebx$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	89 ee                	mov    %ebp,%esi$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	8d 83 c7 ca fe ff    	lea    -0x13539(%ebx),%eax$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	50                   	push   %eax$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	e8 09 0f 00 00       	call   f0101799 <cprintf>$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	8d 83 34 cc fe ff    	lea    -0x133cc(%ebx),%eax$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	eb 27                	jmp    f01008cb <mon_backtrace+0x5d>$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	8d 83 d9 ca fe ff    	lea    -0x13527(%ebx),%eax$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	50                   	push   %eax$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	e8 d3 0e 00 00       	call   f0101799 <cprintf>$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	83 c4 20             	add    $0x20,%esp$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	8b 37                	mov    (%edi),%esi$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	85 f6                	test   %esi,%esi$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	74 34                	je     f0100903 <mon_backtrace+0x95>$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	89 f7                	mov    %esi,%edi$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	ff 76 0c             	pushl  0xc(%esi)$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	56                   	push   %esi$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	e8 ad 0e 00 00       	call   f0101799 <cprintf>$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	83 c4 18             	add    $0x18,%esp$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	e8 a3 0f 00 00       	call   f010189d <debuginfo_eip>$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	85 c0                	test   %eax,%eax$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	75 c8                	jne    f01008c9 <mon_backtrace+0x5b>$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	eb a1                	jmp    f01008a4 <mon_backtrace+0x36>$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	5b                   	pop    %ebx$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	5e                   	pop    %esi$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	5f                   	pop    %edi$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	5d                   	pop    %ebp$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	c3                   	ret    $/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910 <monitor>:$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	55                   	push   %ebp$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	89 e5                	mov    %esp,%ebp$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	57                   	push   %edi$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	56                   	push   %esi$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	53                   	push   %ebx$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	83 ec 68             	sub    $0x68,%esp$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	e8 a3 f8 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	81 c3 4a 57 01 00    	add    $0x1574a,%ebx$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	8d 83 64 cc fe ff    	lea    -0x1339c(%ebx),%eax$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	50                   	push   %eax$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	e8 69 0e 00 00       	call   f0101799 <cprintf>$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	8d 83 88 cc fe ff    	lea    -0x13378(%ebx),%eax$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	e8 5b 0e 00 00       	call   f0101799 <cprintf>$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	8d 83 ef ca fe ff    	lea    -0x13511(%ebx),%eax$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	e9 d1 00 00 00       	jmp    f0100a20 <monitor+0x110>$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	0f be c0             	movsbl %al,%eax$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	50                   	push   %eax$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	ff 75 a0             	pushl  -0x60(%ebp)$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	e8 1f 1a 00 00       	call   f010237d <strchr>$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	85 c0                	test   %eax,%eax$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	74 6d                	je     f01009d2 <monitor+0xc2>$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	89 7d a4             	mov    %edi,-0x5c(%ebp)$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	8b 7d a4             	mov    -0x5c(%ebp),%edi$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	84 c0                	test   %al,%al$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	75 d7                	jne    f010094f <monitor+0x3f>$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	c7 44 bd a8 00 00 00 	movl   $0x0,-0x58(%ebp,%edi,4)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	00 $/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	85 ff                	test   %edi,%edi$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	0f 84 98 00 00 00    	je     f0100a20 <monitor+0x110>$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	8d b3 b8 ff ff ff    	lea    -0x48(%ebx),%esi$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	89 7d a4             	mov    %edi,-0x5c(%ebp)$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	89 c7                	mov    %eax,%edi$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	ff 36                	pushl  (%esi)$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	e8 7a 19 00 00       	call   f010231f <strcmp>$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	85 c0                	test   %eax,%eax$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	0f 84 99 00 00 00    	je     f0100a49 <monitor+0x139>$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	83 c7 01             	add    $0x1,%edi$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	83 c6 0c             	add    $0xc,%esi$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	83 ff 03             	cmp    $0x3,%edi$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	75 dd                	jne    f0100998 <monitor+0x88>$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	8d 83 11 cb fe ff    	lea    -0x134ef(%ebx),%eax$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	50                   	push   %eax$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	e8 cc 0d 00 00       	call   f0101799 <cprintf>$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	eb 4e                	jmp    f0100a20 <monitor+0x110>$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	80 3e 00             	cmpb   $0x0,(%esi)$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	74 a1                	je     f0100978 <monitor+0x68>$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	83 ff 0f             	cmp    $0xf,%edi$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	74 30                	je     f0100a0c <monitor+0xfc>$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	89 74 bd a8          	mov    %esi,-0x58(%ebp,%edi,4)$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	84 c0                	test   %al,%al$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	74 81                	je     f010096e <monitor+0x5e>$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	0f be c0             	movsbl %al,%eax$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	50                   	push   %eax$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	ff 75 a0             	pushl  -0x60(%ebp)$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	e8 81 19 00 00       	call   f010237d <strchr>$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	85 c0                	test   %eax,%eax$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	0f 85 67 ff ff ff    	jne    f010096e <monitor+0x5e>$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	eb da                	jmp    f01009e6 <monitor+0xd6>$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	6a 10                	push   $0x10$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	8d 83 f4 ca fe ff    	lea    -0x1350c(%ebx),%eax$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	50                   	push   %eax$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	e8 7c 0d 00 00       	call   f0101799 <cprintf>$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	8d bb eb ca fe ff    	lea    -0x13515(%ebx),%edi$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	57                   	push   %edi$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	e8 0f 17 00 00       	call   f010213e <readline>$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	85 c0                	test   %eax,%eax$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	74 f0                	je     f0100a26 <monitor+0x116>$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	89 c6                	mov    %eax,%esi$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	e9 28 ff ff ff       	jmp    f0100971 <monitor+0x61>$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	89 f8                	mov    %edi,%eax$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	8b 7d a4             	mov    -0x5c(%ebp),%edi$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	52                   	push   %edx$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	57                   	push   %edi$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	ff 94 83 c0 ff ff ff 	call   *-0x40(%ebx,%eax,4)$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	85 c0                	test   %eax,%eax$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	79 b6                	jns    f0100a20 <monitor+0x110>$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	5b                   	pop    %ebx$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	5e                   	pop    %esi$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	5f                   	pop    %edi$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	5d                   	pop    %ebp$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	c3                   	ret    $/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72 <boot_alloc>:$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	e8 93 0c 00 00       	call   f010170a <__x86.get_pc_thunk.cx>$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	81 c1 f1 55 01 00    	add    $0x155f1,%ecx$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	89 c2                	mov    %eax,%edx$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 b9 50 02 00 00 00 	cmpl   $0x0,0x250(%ecx)$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	74 1b                	je     f0100aa3 <boot_alloc+0x31>$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	8b 81 50 02 00 00    	mov    0x250(%ecx),%eax$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	01 c2                	add    %eax,%edx$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	89 91 50 02 00 00    	mov    %edx,0x250(%ecx)$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	c3                   	ret    $/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	c7 c0 c0 66 11 f0    	mov    $0xf01166c0,%eax$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	89 81 50 02 00 00    	mov    %eax,0x250(%ecx)$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	eb cd                	jmp    f0100a88 <boot_alloc+0x16>$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb <nvram_read>:$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	55                   	push   %ebp$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	89 e5                	mov    %esp,%ebp$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	57                   	push   %edi$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	56                   	push   %esi$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	53                   	push   %ebx$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	e8 f8 f6 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	81 c3 9f 55 01 00    	add    $0x1559f,%ebx$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	89 c7                	mov    %eax,%edi$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	50                   	push   %eax$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	e8 3b 0c 00 00       	call   f0101712 <mc146818_read>$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	89 c6                	mov    %eax,%esi$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	e8 2e 0c 00 00       	call   f0101712 <mc146818_read>$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	09 f0                	or     %esi,%eax$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	5b                   	pop    %ebx$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	5e                   	pop    %esi$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	5f                   	pop    %edi$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	5d                   	pop    %ebp$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	c3                   	ret    $/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1 <page2kva>:$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	55                   	push   %ebp$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	53                   	push   %ebx$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	e8 09 0c 00 00       	call   f0101706 <__x86.get_pc_thunk.dx>$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	81 c2 6b 55 01 00    	add    $0x1556b,%edx$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	c7 c1 d0 66 11 f0    	mov    $0xf01166d0,%ecx$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	2b 01                	sub    (%ecx),%eax$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	c7 c3 c8 66 11 f0    	mov    $0xf01166c8,%ebx$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	39 0b                	cmp    %ecx,(%ebx)$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	76 0a                	jbe    f0100b2a <page2kva+0x39>$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	c9                   	leave  $/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	c3                   	ret    $/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	50                   	push   %eax$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	8d 82 b0 cc fe ff    	lea    -0x13350(%edx),%eax$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	50                   	push   %eax$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	6a 52                	push   $0x52$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	8d 82 c4 ce fe ff    	lea    -0x1313c(%edx),%eax$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	50                   	push   %eax$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	89 d3                	mov    %edx,%ebx$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	e8 c9 f5 ff ff       	call   f010010b <_panic>$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42 <check_va2pa>:$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	55                   	push   %ebp$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	56                   	push   %esi$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	53                   	push   %ebx$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	e8 be 0b 00 00       	call   f010170a <__x86.get_pc_thunk.cx>$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	81 c1 1c 55 01 00    	add    $0x1551c,%ecx$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	89 d3                	mov    %edx,%ebx$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	8b 04 98             	mov    (%eax,%ebx,4),%eax$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	a8 01                	test   $0x1,%al$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	74 5a                	je     f0100bb8 <check_va2pa+0x76>$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	89 c6                	mov    %eax,%esi$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	c7 c3 c8 66 11 f0    	mov    $0xf01166c8,%ebx$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	3b 33                	cmp    (%ebx),%esi$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	73 2b                	jae    f0100b9d <check_va2pa+0x5b>$/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	89 c2                	mov    %eax,%edx$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	85 d2                	test   %edx,%edx$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	5b                   	pop    %ebx$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	5e                   	pop    %esi$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	5d                   	pop    %ebp$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	c3                   	ret    $/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	50                   	push   %eax$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	8d 81 b0 cc fe ff    	lea    -0x13350(%ecx),%eax$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	50                   	push   %eax$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	68 96 02 00 00       	push   $0x296$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	8d 81 d2 ce fe ff    	lea    -0x1312e(%ecx),%eax$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	50                   	push   %eax$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	e8 53 f5 ff ff       	call   f010010b <_panic>$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	eb d7                	jmp    f0100b96 <check_va2pa+0x54>$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf <page_init>:$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	55                   	push   %ebp$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	57                   	push   %edi$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	56                   	push   %esi$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	53                   	push   %ebx$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	e8 41 0b 00 00       	call   f010170e <__x86.get_pc_thunk.si>$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	81 c6 9b 54 01 00    	add    $0x1549b,%esi$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	8b 9e 54 02 00 00    	mov    0x254(%esi),%ebx$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	c7 c7 c8 66 11 f0    	mov    $0xf01166c8,%edi$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	c7 c6 d0 66 11 f0    	mov    $0xf01166d0,%esi$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	eb 1f                	jmp    f0100c13 <page_init+0x54>$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	03 0e                	add    (%esi),%ecx$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	89 d3                	mov    %edx,%ebx$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	03 1e                	add    (%esi),%ebx$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	39 07                	cmp    %eax,(%edi)$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	76 09                	jbe    f0100c20 <page_init+0x61>$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	75 d6                	jne    f0100bf4 <page_init+0x35>$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	eb f0                	jmp    f0100c10 <page_init+0x51>$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	84 d2                	test   %dl,%dl$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	74 09                	je     f0100c2d <page_init+0x6e>$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	89 98 54 02 00 00    	mov    %ebx,0x254(%eax)$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	5b                   	pop    %ebx$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	5e                   	pop    %esi$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	5f                   	pop    %edi$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	5d                   	pop    %ebp$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	c3                   	ret    $/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35 <page_alloc>:$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	55                   	push   %ebp$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	56                   	push   %esi$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	53                   	push   %ebx$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	e8 82 f5 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	81 c3 29 54 01 00    	add    $0x15429,%ebx$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	8b b3 54 02 00 00    	mov    0x254(%ebx),%esi$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	85 f6                	test   %esi,%esi$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	74 14                	je     f0100c63 <page_alloc+0x2e>$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	8b 06                	mov    (%esi),%eax$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	89 83 54 02 00 00    	mov    %eax,0x254(%ebx)$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	75 0f                	jne    f0100c6c <page_alloc+0x37>$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	89 f0                	mov    %esi,%eax$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	5b                   	pop    %ebx$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	5e                   	pop    %esi$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	5d                   	pop    %ebp$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	c3                   	ret    $/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	6a 00                	push   $0x0$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	56                   	push   %esi$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	e8 3e 17 00 00       	call   f01023ba <memset>$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	eb dc                	jmp    f0100c5d <page_alloc+0x28>$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81 <page_free>:$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	55                   	push   %ebp$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	53                   	push   %ebx$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	e8 34 f5 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	81 c3 db 53 01 00    	add    $0x153db,%ebx$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	75 13                	jne    f0100cb0 <page_free+0x2f>$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	8b 8b 54 02 00 00    	mov    0x254(%ebx),%ecx$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	89 83 54 02 00 00    	mov    %eax,0x254(%ebx)$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	c9                   	leave  $/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	c3                   	ret    $/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	8d 83 d4 cc fe ff    	lea    -0x1332c(%ebx),%eax$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	50                   	push   %eax$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	68 34 01 00 00       	push   $0x134$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	50                   	push   %eax$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	e8 40 f4 ff ff       	call   f010010b <_panic>$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb <mem_init>:$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	55                   	push   %ebp$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	57                   	push   %edi$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	56                   	push   %esi$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	53                   	push   %ebx$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	e8 e8 f4 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	81 c3 8f 53 01 00    	add    $0x1538f,%ebx$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	e8 d2 fd ff ff       	call   f0100abb <nvram_read>$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	89 c6                	mov    %eax,%esi$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	e8 c6 fd ff ff       	call   f0100abb <nvram_read>$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	89 c7                	mov    %eax,%edi$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	e8 ba fd ff ff       	call   f0100abb <nvram_read>$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	0f 84 02 01 00 00    	je     f0100e0c <mem_init+0x141>$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	89 c1                	mov    %eax,%ecx$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	c7 c2 c8 66 11 f0    	mov    $0xf01166c8,%edx$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	89 c2                	mov    %eax,%edx$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	29 f2                	sub    %esi,%edx$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	52                   	push   %edx$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	56                   	push   %esi$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	50                   	push   %eax$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	8d 83 0c cd fe ff    	lea    -0x132f4(%ebx),%eax$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	50                   	push   %eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	e8 6a 0a 00 00       	call   f0101799 <cprintf>$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	e8 39 fd ff ff       	call   f0100a72 <boot_alloc>$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	c7 c6 cc 66 11 f0    	mov    $0xf01166cc,%esi$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	89 06                	mov    %eax,(%esi)$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	6a 00                	push   $0x0$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	50                   	push   %eax$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	e8 69 16 00 00       	call   f01023ba <memset>$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	8b 06                	mov    (%esi),%eax$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	0f 86 c0 00 00 00    	jbe    f0100e21 <mem_init+0x156>$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	83 ca 05             	or     $0x5,%edx$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	c7 c6 c8 66 11 f0    	mov    $0xf01166c8,%esi$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	8b 06                	mov    (%esi),%eax$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	e8 f2 fc ff ff       	call   f0100a72 <boot_alloc>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	c7 c2 d0 66 11 f0    	mov    $0xf01166d0,%edx$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	89 02                	mov    %eax,(%edx)$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	8b 16                	mov    (%esi),%edx$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	52                   	push   %edx$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	6a 00                	push   $0x0$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	50                   	push   %eax$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	e8 21 16 00 00       	call   f01023ba <memset>$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	e8 21 fe ff ff       	call   f0100bbf <page_init>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	8b 83 54 02 00 00    	mov    0x254(%ebx),%eax$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	85 c0                	test   %eax,%eax$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	0f 84 8b 00 00 00    	je     f0100e3a <mem_init+0x16f>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	c7 c6 d0 66 11 f0    	mov    $0xf01166d0,%esi$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	89 c2                	mov    %eax,%edx$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	2b 16                	sub    (%esi),%edx$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	0f 95 c2             	setne  %dl$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	85 c0                	test   %eax,%eax$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	75 e0                	jne    f0100dc1 <mem_init+0xf6>$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	89 10                	mov    %edx,(%eax)$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	89 b3 54 02 00 00    	mov    %esi,0x254(%ebx)$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	c7 c7 d0 66 11 f0    	mov    $0xf01166d0,%edi$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	c7 c0 c8 66 11 f0    	mov    $0xf01166c8,%eax$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	eb 61                	jmp    f0100e6d <mem_init+0x1a2>$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	89 f0                	mov    %esi,%eax$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	85 ff                	test   %edi,%edi$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	0f 84 f9 fe ff ff    	je     f0100d0f <mem_init+0x44>$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	8d 87 00 04 00 00    	lea    0x400(%edi),%eax$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	e9 ee fe ff ff       	jmp    f0100d0f <mem_init+0x44>$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	50                   	push   %eax$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	8d 83 48 cd fe ff    	lea    -0x132b8(%ebx),%eax$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	50                   	push   %eax$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	68 8f 00 00 00       	push   $0x8f$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	50                   	push   %eax$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	e8 d1 f2 ff ff       	call   f010010b <_panic>$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	8d 83 6c cd fe ff    	lea    -0x13294(%ebx),%eax$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	50                   	push   %eax$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	68 d7 01 00 00       	push   $0x1d7$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	50                   	push   %eax$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	e8 b6 f2 ff ff       	call   f010010b <_panic>$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	50                   	push   %eax$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	8d 83 b0 cc fe ff    	lea    -0x13350(%ebx),%eax$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	50                   	push   %eax$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	6a 52                	push   $0x52$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	8d 83 c4 ce fe ff    	lea    -0x1313c(%ebx),%eax$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	50                   	push   %eax$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	e8 a0 f2 ff ff       	call   f010010b <_panic>$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	8b 36                	mov    (%esi),%esi$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	85 f6                	test   %esi,%esi$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	74 3a                	je     f0100eab <mem_init+0x1e0>$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	89 f0                	mov    %esi,%eax$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	2b 07                	sub    (%edi),%eax$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	75 e9                	jne    f0100e6b <mem_init+0x1a0>$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	89 c2                	mov    %eax,%edx$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	3b 11                	cmp    (%ecx),%edx$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	73 c7                	jae    f0100e55 <mem_init+0x18a>$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	68 80 00 00 00       	push   $0x80$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	68 97 00 00 00       	push   $0x97$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	50                   	push   %eax$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	e8 14 15 00 00       	call   f01023ba <memset>$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	eb c0                	jmp    f0100e6b <mem_init+0x1a0>$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	e8 bd fb ff ff       	call   f0100a72 <boot_alloc>$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	8b 93 54 02 00 00    	mov    0x254(%ebx),%edx$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	c7 c0 d0 66 11 f0    	mov    $0xf01166d0,%eax$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	8b 08                	mov    (%eax),%ecx$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	c7 c0 c8 66 11 f0    	mov    $0xf01166c8,%eax$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	8b 30                	mov    (%eax),%esi$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	8d 04 f1             	lea    (%ecx,%esi,8),%eax$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	e9 f3 00 00 00       	jmp    f0100fdb <mem_init+0x310>$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	8d 83 de ce fe ff    	lea    -0x13122(%ebx),%eax$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	50                   	push   %eax$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	50                   	push   %eax$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	68 f1 01 00 00       	push   $0x1f1$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	50                   	push   %eax$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	e8 04 f2 ff ff       	call   f010010b <_panic>$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	8d 83 ff ce fe ff    	lea    -0x13101(%ebx),%eax$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	50                   	push   %eax$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	50                   	push   %eax$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	68 f2 01 00 00       	push   $0x1f2$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	50                   	push   %eax$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	e8 e5 f1 ff ff       	call   f010010b <_panic>$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	8d 83 90 cd fe ff    	lea    -0x13270(%ebx),%eax$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	50                   	push   %eax$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	50                   	push   %eax$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	68 f3 01 00 00       	push   $0x1f3$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	50                   	push   %eax$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	e8 c6 f1 ff ff       	call   f010010b <_panic>$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	8d 83 13 cf fe ff    	lea    -0x130ed(%ebx),%eax$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	50                   	push   %eax$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	50                   	push   %eax$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	68 f6 01 00 00       	push   $0x1f6$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	50                   	push   %eax$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	e8 a7 f1 ff ff       	call   f010010b <_panic>$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	8d 83 24 cf fe ff    	lea    -0x130dc(%ebx),%eax$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	50                   	push   %eax$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	50                   	push   %eax$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	68 f7 01 00 00       	push   $0x1f7$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	50                   	push   %eax$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	e8 88 f1 ff ff       	call   f010010b <_panic>$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	8d 83 c4 cd fe ff    	lea    -0x1323c(%ebx),%eax$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	50                   	push   %eax$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	50                   	push   %eax$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	68 f8 01 00 00       	push   $0x1f8$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	50                   	push   %eax$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	e8 69 f1 ff ff       	call   f010010b <_panic>$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	8d 83 3d cf fe ff    	lea    -0x130c3(%ebx),%eax$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	50                   	push   %eax$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	50                   	push   %eax$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	68 f9 01 00 00       	push   $0x1f9$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	50                   	push   %eax$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	e8 4a f1 ff ff       	call   f010010b <_panic>$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	89 c6                	mov    %eax,%esi$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	39 75 c8             	cmp    %esi,-0x38(%ebp)$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	76 6e                	jbe    f0101039 <mem_init+0x36e>$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	77 7a                	ja     f010104f <mem_init+0x384>$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	8b 12                	mov    (%edx),%edx$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	85 d2                	test   %edx,%edx$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	0f 84 8b 00 00 00    	je     f010106e <mem_init+0x3a3>$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	0f 87 fd fe ff ff    	ja     f0100ee8 <mem_init+0x21d>$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	0f 83 13 ff ff ff    	jae    f0100f07 <mem_init+0x23c>$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	89 d0                	mov    %edx,%eax$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	29 c8                	sub    %ecx,%eax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	a8 07                	test   $0x7,%al$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	0f 85 26 ff ff ff    	jne    f0100f26 <mem_init+0x25b>$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	0f 84 39 ff ff ff    	je     f0100f45 <mem_init+0x27a>$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	0f 84 4d ff ff ff    	je     f0100f64 <mem_init+0x299>$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	0f 84 61 ff ff ff    	je     f0100f83 <mem_init+0x2b8>$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	0f 84 75 ff ff ff    	je     f0100fa2 <mem_init+0x2d7>$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	77 8d                	ja     f0100fc1 <mem_init+0x2f6>$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	eb a0                	jmp    f0100fd9 <mem_init+0x30e>$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	50                   	push   %eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	8d 83 b0 cc fe ff    	lea    -0x13350(%ebx),%eax$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	50                   	push   %eax$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	6a 52                	push   $0x52$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	8d 83 c4 ce fe ff    	lea    -0x1313c(%ebx),%eax$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	50                   	push   %eax$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	e8 bc f0 ff ff       	call   f010010b <_panic>$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	8d 83 e8 cd fe ff    	lea    -0x13218(%ebx),%eax$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	50                   	push   %eax$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	50                   	push   %eax$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	68 fa 01 00 00       	push   $0x1fa$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	50                   	push   %eax$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	e8 9d f0 ff ff       	call   f010010b <_panic>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	85 ff                	test   %edi,%edi$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	7e 32                	jle    f01010a4 <mem_init+0x3d9>$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	7e 4b                	jle    f01010c3 <mem_init+0x3f8>$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	8d 83 30 ce fe ff    	lea    -0x131d0(%ebx),%eax$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	50                   	push   %eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	e8 12 07 00 00       	call   f0101799 <cprintf>$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	83 c4 10             	add    $0x10,%esp$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	c7 c0 d0 66 11 f0    	mov    $0xf01166d0,%eax$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	74 4d                	je     f01010e2 <mem_init+0x417>$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	8b 83 54 02 00 00    	mov    0x254(%ebx),%eax$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	eb 5f                	jmp    f0101103 <mem_init+0x438>$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	8d 83 57 cf fe ff    	lea    -0x130a9(%ebx),%eax$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	50                   	push   %eax$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	50                   	push   %eax$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	68 02 02 00 00       	push   $0x202$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	50                   	push   %eax$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	e8 48 f0 ff ff       	call   f010010b <_panic>$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	8d 83 69 cf fe ff    	lea    -0x13097(%ebx),%eax$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	50                   	push   %eax$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	50                   	push   %eax$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	68 03 02 00 00       	push   $0x203$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	50                   	push   %eax$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	e8 29 f0 ff ff       	call   f010010b <_panic>$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	8d 83 7a cf fe ff    	lea    -0x13086(%ebx),%eax$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	50                   	push   %eax$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	68 16 02 00 00       	push   $0x216$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	50                   	push   %eax$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	e8 0e f0 ff ff       	call   f010010b <_panic>$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	8b 00                	mov    (%eax),%eax$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	85 c0                	test   %eax,%eax$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	75 f6                	jne    f01010fd <mem_init+0x432>$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	6a 00                	push   $0x0$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	e8 24 fb ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	89 c6                	mov    %eax,%esi$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	85 c0                	test   %eax,%eax$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	0f 84 df 01 00 00    	je     f01012fd <mem_init+0x632>$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	6a 00                	push   $0x0$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	e8 0d fb ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	89 c7                	mov    %eax,%edi$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	85 c0                	test   %eax,%eax$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	0f 84 e7 01 00 00    	je     f010131c <mem_init+0x651>$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	6a 00                	push   $0x0$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	e8 f6 fa ff ff       	call   f0100c35 <page_alloc>$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	85 c0                	test   %eax,%eax$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	0f 84 ee 01 00 00    	je     f010133b <mem_init+0x670>$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	39 fe                	cmp    %edi,%esi$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	0f 84 05 02 00 00    	je     f010135a <mem_init+0x68f>$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	39 c6                	cmp    %eax,%esi$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	0f 84 19 02 00 00    	je     f0101379 <mem_init+0x6ae>$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	39 c7                	cmp    %eax,%edi$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	0f 84 11 02 00 00    	je     f0101379 <mem_init+0x6ae>$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	c7 c0 d0 66 11 f0    	mov    $0xf01166d0,%eax$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	c7 c0 c8 66 11 f0    	mov    $0xf01166c8,%eax$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	8b 10                	mov    (%eax),%edx$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	89 f0                	mov    %esi,%eax$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	29 c8                	sub    %ecx,%eax$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	39 d0                	cmp    %edx,%eax$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	0f 83 0b 02 00 00    	jae    f0101398 <mem_init+0x6cd>$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	89 f8                	mov    %edi,%eax$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	29 c8                	sub    %ecx,%eax$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	39 c2                	cmp    %eax,%edx$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	0f 86 18 02 00 00    	jbe    f01013b7 <mem_init+0x6ec>$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	29 c8                	sub    %ecx,%eax$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	39 c2                	cmp    %eax,%edx$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	0f 86 24 02 00 00    	jbe    f01013d6 <mem_init+0x70b>$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	8b 83 54 02 00 00    	mov    0x254(%ebx),%eax$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	c7 83 54 02 00 00 00 	movl   $0x0,0x254(%ebx)$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	00 00 00 $/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	6a 00                	push   $0x0$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	e8 66 fa ff ff       	call   f0100c35 <page_alloc>$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	85 c0                	test   %eax,%eax$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	0f 85 1b 02 00 00    	jne    f01013f5 <mem_init+0x72a>$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	56                   	push   %esi$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	e8 9e fa ff ff       	call   f0100c81 <page_free>$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	e8 96 fa ff ff       	call   f0100c81 <page_free>$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	83 c4 04             	add    $0x4,%esp$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	e8 8b fa ff ff       	call   f0100c81 <page_free>$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	e8 33 fa ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	89 c6                	mov    %eax,%esi$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	85 c0                	test   %eax,%eax$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	0f 84 05 02 00 00    	je     f0101414 <mem_init+0x749>$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	6a 00                	push   $0x0$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	e8 1c fa ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	89 c7                	mov    %eax,%edi$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	85 c0                	test   %eax,%eax$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	0f 84 0d 02 00 00    	je     f0101433 <mem_init+0x768>$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	6a 00                	push   $0x0$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	e8 05 fa ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	85 c0                	test   %eax,%eax$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	0f 84 14 02 00 00    	je     f0101452 <mem_init+0x787>$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	39 fe                	cmp    %edi,%esi$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	0f 84 2b 02 00 00    	je     f0101471 <mem_init+0x7a6>$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	39 c6                	cmp    %eax,%esi$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	0f 84 3f 02 00 00    	je     f0101490 <mem_init+0x7c5>$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	39 c7                	cmp    %eax,%edi$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	0f 84 37 02 00 00    	je     f0101490 <mem_init+0x7c5>$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	6a 00                	push   $0x0$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	e8 d2 f9 ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	85 c0                	test   %eax,%eax$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	0f 85 41 02 00 00    	jne    f01014af <mem_init+0x7e4>$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	89 f0                	mov    %esi,%eax$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	e8 7c f8 ff ff       	call   f0100af1 <page2kva>$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	68 00 10 00 00       	push   $0x1000$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	6a 01                	push   $0x1$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	50                   	push   %eax$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	e8 35 11 00 00       	call   f01023ba <memset>$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	e8 f4 f9 ff ff       	call   f0100c81 <page_free>$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	e8 9c f9 ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	83 c4 10             	add    $0x10,%esp$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	85 c0                	test   %eax,%eax$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	0f 84 2a 02 00 00    	je     f01014ce <mem_init+0x803>$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	39 c6                	cmp    %eax,%esi$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	0f 85 41 02 00 00    	jne    f01014ed <mem_init+0x822>$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	e8 40 f8 ff ff       	call   f0100af1 <page2kva>$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	8d 90 00 10 00 00    	lea    0x1000(%eax),%edx$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	0f 85 4c 02 00 00    	jne    f010150c <mem_init+0x841>$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	39 d0                	cmp    %edx,%eax$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	75 f0                	jne    f01012b7 <mem_init+0x5ec>$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	89 83 54 02 00 00    	mov    %eax,0x254(%ebx)$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	56                   	push   %esi$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	e8 a8 f9 ff ff       	call   f0100c81 <page_free>$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	e8 a0 f9 ff ff       	call   f0100c81 <page_free>$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	83 c4 04             	add    $0x4,%esp$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	e8 95 f9 ff ff       	call   f0100c81 <page_free>$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	8b 83 54 02 00 00    	mov    0x254(%ebx),%eax$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	e9 33 02 00 00       	jmp    f0101530 <mem_init+0x865>$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	8d 83 95 cf fe ff    	lea    -0x1306b(%ebx),%eax$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	50                   	push   %eax$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	50                   	push   %eax$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	68 1e 02 00 00       	push   $0x21e$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	50                   	push   %eax$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	e8 ef ed ff ff       	call   f010010b <_panic>$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	8d 83 ab cf fe ff    	lea    -0x13055(%ebx),%eax$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	50                   	push   %eax$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	50                   	push   %eax$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	68 1f 02 00 00       	push   $0x21f$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	50                   	push   %eax$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	e8 d0 ed ff ff       	call   f010010b <_panic>$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	8d 83 c1 cf fe ff    	lea    -0x1303f(%ebx),%eax$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	50                   	push   %eax$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	50                   	push   %eax$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	68 20 02 00 00       	push   $0x220$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	50                   	push   %eax$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	e8 b1 ed ff ff       	call   f010010b <_panic>$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	8d 83 d7 cf fe ff    	lea    -0x13029(%ebx),%eax$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	50                   	push   %eax$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	50                   	push   %eax$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	68 23 02 00 00       	push   $0x223$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	50                   	push   %eax$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	e8 92 ed ff ff       	call   f010010b <_panic>$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	8d 83 54 ce fe ff    	lea    -0x131ac(%ebx),%eax$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	50                   	push   %eax$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	50                   	push   %eax$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	68 24 02 00 00       	push   $0x224$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	50                   	push   %eax$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	e8 73 ed ff ff       	call   f010010b <_panic>$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	8d 83 e9 cf fe ff    	lea    -0x13017(%ebx),%eax$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	50                   	push   %eax$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	50                   	push   %eax$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	68 25 02 00 00       	push   $0x225$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	50                   	push   %eax$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	e8 54 ed ff ff       	call   f010010b <_panic>$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	8d 83 06 d0 fe ff    	lea    -0x12ffa(%ebx),%eax$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	50                   	push   %eax$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	50                   	push   %eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	68 26 02 00 00       	push   $0x226$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	50                   	push   %eax$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	e8 35 ed ff ff       	call   f010010b <_panic>$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	8d 83 23 d0 fe ff    	lea    -0x12fdd(%ebx),%eax$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	50                   	push   %eax$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	50                   	push   %eax$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	68 27 02 00 00       	push   $0x227$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	50                   	push   %eax$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	e8 16 ed ff ff       	call   f010010b <_panic>$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	8d 83 40 d0 fe ff    	lea    -0x12fc0(%ebx),%eax$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	50                   	push   %eax$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	50                   	push   %eax$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	68 2e 02 00 00       	push   $0x22e$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	50                   	push   %eax$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	e8 f7 ec ff ff       	call   f010010b <_panic>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	8d 83 95 cf fe ff    	lea    -0x1306b(%ebx),%eax$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	50                   	push   %eax$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	50                   	push   %eax$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	68 35 02 00 00       	push   $0x235$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	50                   	push   %eax$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	e8 d8 ec ff ff       	call   f010010b <_panic>$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	8d 83 ab cf fe ff    	lea    -0x13055(%ebx),%eax$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	50                   	push   %eax$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	50                   	push   %eax$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	68 36 02 00 00       	push   $0x236$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	50                   	push   %eax$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	e8 b9 ec ff ff       	call   f010010b <_panic>$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	8d 83 c1 cf fe ff    	lea    -0x1303f(%ebx),%eax$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	50                   	push   %eax$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	50                   	push   %eax$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	68 37 02 00 00       	push   $0x237$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	50                   	push   %eax$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	e8 9a ec ff ff       	call   f010010b <_panic>$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	8d 83 d7 cf fe ff    	lea    -0x13029(%ebx),%eax$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	50                   	push   %eax$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	50                   	push   %eax$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	68 39 02 00 00       	push   $0x239$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	50                   	push   %eax$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	e8 7b ec ff ff       	call   f010010b <_panic>$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	8d 83 54 ce fe ff    	lea    -0x131ac(%ebx),%eax$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	50                   	push   %eax$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	50                   	push   %eax$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	68 3a 02 00 00       	push   $0x23a$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	50                   	push   %eax$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	e8 5c ec ff ff       	call   f010010b <_panic>$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	8d 83 40 d0 fe ff    	lea    -0x12fc0(%ebx),%eax$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	50                   	push   %eax$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	50                   	push   %eax$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	68 3b 02 00 00       	push   $0x23b$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	50                   	push   %eax$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	e8 3d ec ff ff       	call   f010010b <_panic>$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	8d 83 4f d0 fe ff    	lea    -0x12fb1(%ebx),%eax$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	50                   	push   %eax$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	50                   	push   %eax$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	68 40 02 00 00       	push   $0x240$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	50                   	push   %eax$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	e8 1e ec ff ff       	call   f010010b <_panic>$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	8d 83 6d d0 fe ff    	lea    -0x12f93(%ebx),%eax$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	50                   	push   %eax$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	50                   	push   %eax$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	68 41 02 00 00       	push   $0x241$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	50                   	push   %eax$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	e8 ff eb ff ff       	call   f010010b <_panic>$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	8d 83 7d d0 fe ff    	lea    -0x12f83(%ebx),%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	50                   	push   %eax$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	50                   	push   %eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	68 44 02 00 00       	push   $0x244$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	50                   	push   %eax$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	e8 e0 eb ff ff       	call   f010010b <_panic>$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	85 c0                	test   %eax,%eax$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	75 f7                	jne    f010152b <mem_init+0x860>$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	85 d2                	test   %edx,%edx$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	0f 85 aa 00 00 00    	jne    f01015e6 <mem_init+0x91b>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	8d 83 74 ce fe ff    	lea    -0x1318c(%ebx),%eax$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	50                   	push   %eax$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	e8 4e 02 00 00       	call   f0101799 <cprintf>$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	e8 de f6 ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	89 c6                	mov    %eax,%esi$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	83 c4 10             	add    $0x10,%esp$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	85 c0                	test   %eax,%eax$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	0f 84 a1 00 00 00    	je     f0101605 <mem_init+0x93a>$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	6a 00                	push   $0x0$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	e8 c7 f6 ff ff       	call   f0100c35 <page_alloc>$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	89 c7                	mov    %eax,%edi$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	85 c0                	test   %eax,%eax$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	0f 84 a9 00 00 00    	je     f0101624 <mem_init+0x959>$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	6a 00                	push   $0x0$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	e8 b0 f6 ff ff       	call   f0100c35 <page_alloc>$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	85 c0                	test   %eax,%eax$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	0f 84 b3 00 00 00    	je     f0101643 <mem_init+0x978>$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	39 fe                	cmp    %edi,%esi$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	0f 84 ca 00 00 00    	je     f0101662 <mem_init+0x997>$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	39 c6                	cmp    %eax,%esi$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	0f 84 e1 00 00 00    	je     f0101681 <mem_init+0x9b6>$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	39 c7                	cmp    %eax,%edi$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	0f 84 d9 00 00 00    	je     f0101681 <mem_init+0x9b6>$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	c7 83 54 02 00 00 00 	movl   $0x0,0x254(%ebx)$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	00 00 00 $/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	6a 00                	push   $0x0$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	e8 79 f6 ff ff       	call   f0100c35 <page_alloc>$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	85 c0                	test   %eax,%eax$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	0f 84 d9 00 00 00    	je     f01016a0 <mem_init+0x9d5>$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	8d 83 40 d0 fe ff    	lea    -0x12fc0(%ebx),%eax$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	50                   	push   %eax$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	50                   	push   %eax$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	68 b7 02 00 00       	push   $0x2b7$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	50                   	push   %eax$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	e8 25 eb ff ff       	call   f010010b <_panic>$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	8d 83 87 d0 fe ff    	lea    -0x12f79(%ebx),%eax$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	50                   	push   %eax$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	50                   	push   %eax$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	68 51 02 00 00       	push   $0x251$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	50                   	push   %eax$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	e8 06 eb ff ff       	call   f010010b <_panic>$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	8d 83 95 cf fe ff    	lea    -0x1306b(%ebx),%eax$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	50                   	push   %eax$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	50                   	push   %eax$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	68 aa 02 00 00       	push   $0x2aa$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	50                   	push   %eax$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	e8 e7 ea ff ff       	call   f010010b <_panic>$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	8d 83 ab cf fe ff    	lea    -0x13055(%ebx),%eax$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	50                   	push   %eax$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	50                   	push   %eax$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	68 ab 02 00 00       	push   $0x2ab$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	50                   	push   %eax$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	e8 c8 ea ff ff       	call   f010010b <_panic>$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	8d 83 c1 cf fe ff    	lea    -0x1303f(%ebx),%eax$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	50                   	push   %eax$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	50                   	push   %eax$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	68 ac 02 00 00       	push   $0x2ac$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	50                   	push   %eax$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	e8 a9 ea ff ff       	call   f010010b <_panic>$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	8d 83 d7 cf fe ff    	lea    -0x13029(%ebx),%eax$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	50                   	push   %eax$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	50                   	push   %eax$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	68 af 02 00 00       	push   $0x2af$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	50                   	push   %eax$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	e8 8a ea ff ff       	call   f010010b <_panic>$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	8d 83 54 ce fe ff    	lea    -0x131ac(%ebx),%eax$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	50                   	push   %eax$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	50                   	push   %eax$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	68 b0 02 00 00       	push   $0x2b0$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	50                   	push   %eax$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	e8 6b ea ff ff       	call   f010010b <_panic>$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	8d 83 94 ce fe ff    	lea    -0x1316c(%ebx),%eax$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	50                   	push   %eax$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	8d 83 ea ce fe ff    	lea    -0x13116(%ebx),%eax$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	50                   	push   %eax$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	68 bd 02 00 00       	push   $0x2bd$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	8d 83 d2 ce fe ff    	lea    -0x1312e(%ebx),%eax$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	50                   	push   %eax$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	e8 4c ea ff ff       	call   f010010b <_panic>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf <page_decref>:$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	55                   	push   %ebp$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	66 85 c0             	test   %ax,%ax$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	74 02                	je     f01016da <page_decref+0x1b>$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	c9                   	leave  $/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	c3                   	ret    $/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	52                   	push   %edx$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	e8 9e f5 ff ff       	call   f0100c81 <page_free>$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	eb f0                	jmp    f01016d8 <page_decref+0x19>$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8 <pgdir_walk>:$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	c3                   	ret    $/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee <page_insert>:$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	c3                   	ret    $/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4 <page_lookup>:$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	c3                   	ret    $/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa <page_remove>:$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	c3                   	ret    $/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb <tlb_invalidate>:$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	55                   	push   %ebp$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	0f 01 38             	invlpg (%eax)$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	5d                   	pop    %ebp$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	c3                   	ret    $/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706 <__x86.get_pc_thunk.dx>:$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	c3                   	ret    $/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a <__x86.get_pc_thunk.cx>:$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	c3                   	ret    $/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e <__x86.get_pc_thunk.si>:$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	c3                   	ret    $/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712 <mc146818_read>:$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	55                   	push   %ebp$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	89 e5                	mov    %esp,%ebp$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	ee                   	out    %al,(%dx)$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	ec                   	in     (%dx),%al$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	5d                   	pop    %ebp$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	c3                   	ret    $/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729 <mc146818_write>:$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	55                   	push   %ebp$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	89 e5                	mov    %esp,%ebp$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	ee                   	out    %al,(%dx)$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	ee                   	out    %al,(%dx)$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	5d                   	pop    %ebp$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	c3                   	ret    $/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740 <putch>:$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	55                   	push   %ebp$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	89 e5                	mov    %esp,%ebp$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	53                   	push   %ebx$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	e8 75 ea ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	81 c3 1c 49 01 00    	add    $0x1491c,%ebx$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	e8 b1 ef ff ff       	call   f010070b <cputchar>$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	c9                   	leave  $/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	c3                   	ret    $/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762 <vcprintf>:$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	55                   	push   %ebp$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	89 e5                	mov    %esp,%ebp$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	53                   	push   %ebx$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	e8 53 ea ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	81 c3 fa 48 01 00    	add    $0x148fa,%ebx$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	50                   	push   %eax$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	8d 83 d8 b6 fe ff    	lea    -0x14928(%ebx),%eax$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	50                   	push   %eax$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	e8 96 04 00 00       	call   f0101c27 <vprintfmt>$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	c9                   	leave  $/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	c3                   	ret    $/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799 <cprintf>:$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	55                   	push   %ebp$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	89 e5                	mov    %esp,%ebp$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	50                   	push   %eax$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	e8 b7 ff ff ff       	call   f0101762 <vcprintf>$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	c9                   	leave  $/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	c3                   	ret    $/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad <stab_binsearch>:$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	55                   	push   %ebp$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	57                   	push   %edi$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	56                   	push   %esi$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	53                   	push   %ebx$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	8b 01                	mov    (%ecx),%eax$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	eb 23                	jmp    f01017f5 <stab_binsearch+0x48>$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	eb 1e                	jmp    f01017f5 <stab_binsearch+0x48>$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	73 41                	jae    f0101827 <stab_binsearch+0x7a>$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	89 03                	mov    %eax,(%ebx)$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	7f 5a                	jg     f0101854 <stab_binsearch+0xa7>$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	01 d8                	add    %ebx,%eax$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	89 c7                	mov    %eax,%edi$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	01 c7                	add    %eax,%edi$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	d1 ff                	sar    %edi$/;"	d
f0101808	obj/kern/kernel.asm	/^f0101808:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	89 f8                	mov    %edi,%eax$/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	7f ba                	jg     f01017d2 <stab_binsearch+0x25>$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	39 f1                	cmp    %esi,%ecx$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	74 b5                	je     f01017d7 <stab_binsearch+0x2a>$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	eb ed                	jmp    f0101814 <stab_binsearch+0x67>$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	76 14                	jbe    f0101840 <stab_binsearch+0x93>$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	89 07                	mov    %eax,(%edi)$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	eb b5                	jmp    f01017f5 <stab_binsearch+0x48>$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	89 07                	mov    %eax,(%edi)$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	89 c3                	mov    %eax,%ebx$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	eb a1                	jmp    f01017f5 <stab_binsearch+0x48>$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	75 15                	jne    f010186f <stab_binsearch+0xc2>$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	8b 00                	mov    (%eax),%eax$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	89 06                	mov    %eax,(%esi)$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	83 c4 14             	add    $0x14,%esp$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	5b                   	pop    %ebx$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	5e                   	pop    %esi$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	5f                   	pop    %edi$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	5d                   	pop    %ebp$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	c3                   	ret    $/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	8b 00                	mov    (%eax),%eax$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	eb 03                	jmp    f0101888 <stab_binsearch+0xdb>$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	39 c1                	cmp    %eax,%ecx$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	7d 0a                	jge    f0101896 <stab_binsearch+0xe9>$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	39 f3                	cmp    %esi,%ebx$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	75 ef                	jne    f0101885 <stab_binsearch+0xd8>$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	89 06                	mov    %eax,(%esi)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	eb ca                	jmp    f0101867 <stab_binsearch+0xba>$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d <debuginfo_eip>:$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	55                   	push   %ebp$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	89 e5                	mov    %esp,%ebp$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	57                   	push   %edi$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	56                   	push   %esi$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	53                   	push   %ebx$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	e8 16 e9 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	81 c3 bd 47 01 00    	add    $0x147bd,%ebx$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	89 5d bc             	mov    %ebx,-0x44(%ebp)$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	8d 83 92 d0 fe ff    	lea    -0x12f6e(%ebx),%eax$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	89 06                	mov    %eax,(%esi)$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	0f 86 42 01 00 00    	jbe    f0101a2b <debuginfo_eip+0x18e>$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	c7 c0 45 8d 10 f0    	mov    $0xf0108d45,%eax$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	39 83 fc ff ff ff    	cmp    %eax,-0x4(%ebx)$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	0f 86 04 02 00 00    	jbe    f0101aff <debuginfo_eip+0x262>$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	8b 5d bc             	mov    -0x44(%ebp),%ebx$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	c7 c0 e2 aa 10 f0    	mov    $0xf010aae2,%eax$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	0f 85 f8 01 00 00    	jne    f0101b06 <debuginfo_eip+0x269>$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	c7 c0 14 33 10 f0    	mov    $0xf0103314,%eax$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	c7 c2 44 8d 10 f0    	mov    $0xf0108d44,%edx$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	29 c2                	sub    %eax,%edx$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	57                   	push   %edi$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	6a 64                	push   $0x64$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	e8 6a fe ff ff       	call   f01017ad <stab_binsearch>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	85 c0                	test   %eax,%eax$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	0f 84 bc 01 00 00    	je     f0101b0d <debuginfo_eip+0x270>$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	57                   	push   %edi$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	6a 24                	push   $0x24$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	c7 c0 14 33 10 f0    	mov    $0xf0103314,%eax$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	e8 3c fe ff ff       	call   f01017ad <stab_binsearch>$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	39 c8                	cmp    %ecx,%eax$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	0f 8f c1 00 00 00    	jg     f0101a46 <debuginfo_eip+0x1a9>$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	c7 c1 14 33 10 f0    	mov    $0xf0103314,%ecx$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	8d 0c 91             	lea    (%ecx,%edx,4),%ecx$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	c7 c2 e2 aa 10 f0    	mov    $0xf010aae2,%edx$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	89 5d bc             	mov    %ebx,-0x44(%ebp)$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	81 ea 45 8d 10 f0    	sub    $0xf0108d45,%edx$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	8b 5d c0             	mov    -0x40(%ebp),%ebx$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	39 d3                	cmp    %edx,%ebx$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	73 0c                	jae    f01019b8 <debuginfo_eip+0x11b>$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	81 c3 45 8d 10 f0    	add    $0xf0108d45,%ebx$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	89 5e 08             	mov    %ebx,0x8(%esi)$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	89 56 10             	mov    %edx,0x10(%esi)$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	29 d7                	sub    %edx,%edi$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01019c6	obj/kern/kernel.asm	/^f01019c6:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	6a 3a                	push   $0x3a$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	8b 5d bc             	mov    -0x44(%ebp),%ebx$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	e8 c5 09 00 00       	call   f010239e <strfind>$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	83 c4 08             	add    $0x8,%esp$/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8:	57                   	push   %edi$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	6a 44                	push   $0x44$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	c7 c0 14 33 10 f0    	mov    $0xf0103314,%eax$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	e8 b4 fd ff ff       	call   f01017ad <stab_binsearch>$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	0f 8f 0c 01 00 00    	jg     f0101b14 <debuginfo_eip+0x277>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	89 d0                	mov    %edx,%eax$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	c7 c1 14 33 10 f0    	mov    $0xf0103314,%ecx$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	0f b7 5c 0a 06       	movzwl 0x6(%edx,%ecx,1),%ebx$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	89 5e 04             	mov    %ebx,0x4(%esi)$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	8d 54 0a 04          	lea    0x4(%edx,%ecx,1),%edx$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0101a29	obj/kern/kernel.asm	/^f0101a29:	eb 39                	jmp    f0101a64 <debuginfo_eip+0x1c7>$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	8b 5d bc             	mov    -0x44(%ebp),%ebx$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	8d 83 9c d0 fe ff    	lea    -0x12f64(%ebx),%eax$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	50                   	push   %eax$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	6a 7f                	push   $0x7f$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	8d 83 a9 d0 fe ff    	lea    -0x12f57(%ebx),%eax$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	50                   	push   %eax$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	e8 c5 e6 ff ff       	call   f010010b <_panic>$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	e9 6f ff ff ff       	jmp    f01019c9 <debuginfo_eip+0x12c>$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	39 c7                	cmp    %eax,%edi$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	7f 51                	jg     f0101abc <debuginfo_eip+0x21f>$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	74 19                	je     f0101a8c <debuginfo_eip+0x1ef>$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	75 e2                	jne    f0101a5a <debuginfo_eip+0x1bd>$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	83 7a 04 00          	cmpl   $0x0,0x4(%edx)$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	74 dc                	je     f0101a5a <debuginfo_eip+0x1bd>$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	74 11                	je     f0101a95 <debuginfo_eip+0x1f8>$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	eb 09                	jmp    f0101a95 <debuginfo_eip+0x1f8>$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	74 03                	je     f0101a95 <debuginfo_eip+0x1f8>$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	c7 c0 14 33 10 f0    	mov    $0xf0103314,%eax$/;"	l
f0101aa1	obj/kern/kernel.asm	/^f0101aa1:	8b 14 90             	mov    (%eax,%edx,4),%edx$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	c7 c0 e2 aa 10 f0    	mov    $0xf010aae2,%eax$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	81 e8 45 8d 10 f0    	sub    $0xf0108d45,%eax$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	39 c2                	cmp    %eax,%edx$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	73 08                	jae    f0101abc <debuginfo_eip+0x21f>$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	81 c2 45 8d 10 f0    	add    $0xf0108d45,%edx$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	89 16                	mov    %edx,(%esi)$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	39 da                	cmp    %ebx,%edx$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	7d 55                	jge    f0101b20 <debuginfo_eip+0x283>$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	89 d0                	mov    %edx,%eax$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	8d 0c 52             	lea    (%edx,%edx,2),%ecx$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	c7 c2 14 33 10 f0    	mov    $0xf0103314,%edx$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	8d 54 8a 04          	lea    0x4(%edx,%ecx,4),%edx$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	eb 04                	jmp    f0101ae6 <debuginfo_eip+0x249>$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	7e 31                	jle    f0101b1b <debuginfo_eip+0x27e>$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	74 ea                	je     f0101ae2 <debuginfo_eip+0x245>$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	eb 21                	jmp    f0101b20 <debuginfo_eip+0x283>$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	eb 1a                	jmp    f0101b20 <debuginfo_eip+0x283>$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	eb 13                	jmp    f0101b20 <debuginfo_eip+0x283>$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	eb 0c                	jmp    f0101b20 <debuginfo_eip+0x283>$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	eb 05                	jmp    f0101b20 <debuginfo_eip+0x283>$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	5b                   	pop    %ebx$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	5e                   	pop    %esi$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	5f                   	pop    %edi$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	5d                   	pop    %ebp$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	c3                   	ret    $/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28 <printnum>:$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	55                   	push   %ebp$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	57                   	push   %edi$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	56                   	push   %esi$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	53                   	push   %ebx$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	e8 d4 fb ff ff       	call   f010170a <__x86.get_pc_thunk.cx>$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	81 c1 32 45 01 00    	add    $0x14532,%ecx$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	89 c7                	mov    %eax,%edi$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	89 d6                	mov    %edx,%esi$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	89 d0                	mov    %edx,%eax$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	1b 45 e4             	sbb    -0x1c(%ebp),%eax$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	73 15                	jae    f0101b7f <printnum+0x57>$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	85 db                	test   %ebx,%ebx$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	7e 46                	jle    f0101bb7 <printnum+0x8f>$/;"	l
f0101b71	obj/kern/kernel.asm	/^f0101b71:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	56                   	push   %esi$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	ff d7                	call   *%edi$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	eb eb                	jmp    f0101b6a <printnum+0x42>$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101b88	obj/kern/kernel.asm	/^f0101b88:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	53                   	push   %ebx$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	e8 0a 0a 00 00       	call   f01025b0 <__udivdi3>$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	83 c4 18             	add    $0x18,%esp$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	52                   	push   %edx$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	50                   	push   %eax$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	89 f2                	mov    %esi,%edx$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	89 f8                	mov    %edi,%eax$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	e8 74 ff ff ff       	call   f0101b28 <printnum>$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	56                   	push   %esi$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	89 f3                	mov    %esi,%ebx$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	e8 ec 0a 00 00       	call   f01026c0 <__umoddi3>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	0f be 84 06 b7 d0 fe 	movsbl -0x12f49(%esi,%eax,1),%eax$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	ff $/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	50                   	push   %eax$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	ff d7                	call   *%edi$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	5b                   	pop    %ebx$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	5e                   	pop    %esi$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	5f                   	pop    %edi$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	5d                   	pop    %ebp$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	c3                   	ret    $/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed <sprintputch>:$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	55                   	push   %ebp$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	89 e5                	mov    %esp,%ebp$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	8b 10                	mov    (%eax),%edx$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	73 0a                	jae    f0101c08 <sprintputch+0x1b>$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	89 08                	mov    %ecx,(%eax)$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	88 02                	mov    %al,(%edx)$/;"	l
f0101c08	obj/kern/kernel.asm	/^f0101c08:	5d                   	pop    %ebp$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	c3                   	ret    $/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a <printfmt>:$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	55                   	push   %ebp$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	50                   	push   %eax$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	e8 05 00 00 00       	call   f0101c27 <vprintfmt>$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	c9                   	leave  $/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	c3                   	ret    $/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27 <vprintfmt>:$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	55                   	push   %ebp$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	57                   	push   %edi$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	56                   	push   %esi$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	53                   	push   %ebx$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	e8 fd ea ff ff       	call   f0100732 <__x86.get_pc_thunk.ax>$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	05 33 44 01 00       	add    $0x14433,%eax$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	eb 0a                	jmp    f0101c52 <vprintfmt+0x2b>$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	57                   	push   %edi$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	50                   	push   %eax$/;"	l
f0101c4d	obj/kern/kernel.asm	/^f0101c4d:	ff d6                	call   *%esi$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	74 0c                	je     f0101c6a <vprintfmt+0x43>$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	85 c0                	test   %eax,%eax$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	75 e6                	jne    f0101c48 <vprintfmt+0x21>$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	5b                   	pop    %ebx$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	5e                   	pop    %esi$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	5f                   	pop    %edi$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	5d                   	pop    %ebp$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	c3                   	ret    $/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	c6 45 cf 20          	movb   $0x20,-0x31(%ebp)$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	3c 55                	cmp    $0x55,%al$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	0f 87 00 04 00 00    	ja     f01020a2 <.L21>$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	89 ce                	mov    %ecx,%esi$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	03 b4 81 44 d1 fe ff 	add    -0x12ebc(%ecx,%eax,4),%esi$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	ff e6                	jmp    *%esi$/;"	l
f0101cb3	obj/kern/kernel.asm	/^f0101cb3 <.L68>:$/;"	l
f0101cb3	obj/kern/kernel.asm	/^f0101cb3:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	c6 45 cf 2d          	movb   $0x2d,-0x31(%ebp)$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	eb d2                	jmp    f0101c8e <vprintfmt+0x67>$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc <.L33>:$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	c6 45 cf 30          	movb   $0x30,-0x31(%ebp)$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	eb c9                	jmp    f0101c8e <vprintfmt+0x67>$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5 <.L32>:$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	0f be 13             	movsbl (%ebx),%edx$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	77 58                	ja     f0101d3d <.L37+0xf>$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101ce8	obj/kern/kernel.asm	/^f0101ce8:	eb e9                	jmp    f0101cd3 <.L32+0xe>$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea <.L35>:$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	8b 00                	mov    (%eax),%eax$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	79 8a                	jns    f0101c8e <vprintfmt+0x67>$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f0101d11	obj/kern/kernel.asm	/^f0101d11:	e9 78 ff ff ff       	jmp    f0101c8e <vprintfmt+0x67>$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16 <.L34>:$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	85 c0                	test   %eax,%eax$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	e9 60 ff ff ff       	jmp    f0101c8e <vprintfmt+0x67>$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e <.L37>:$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	e9 51 ff ff ff       	jmp    f0101c8e <vprintfmt+0x67>$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	eb b9                	jmp    f0101cfe <.L35+0x14>$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45 <.L28>:$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	e9 3d ff ff ff       	jmp    f0101c8e <vprintfmt+0x67>$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51 <.L31>:$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	8d 58 04             	lea    0x4(%eax),%ebx$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	57                   	push   %edi$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	ff 30                	pushl  (%eax)$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	ff d6                	call   *%esi$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	e9 cb 02 00 00       	jmp    f0102038 <.L26+0x45>$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d <.L29>:$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	8d 58 04             	lea    0x4(%eax),%ebx$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	8b 00                	mov    (%eax),%eax$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	99                   	cltd   $/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	31 d0                	xor    %edx,%eax$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	29 d0                	sub    %edx,%eax$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	7f 2b                	jg     f0101dad <.L29+0x40>$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	8b 94 82 dc ff ff ff 	mov    -0x24(%edx,%eax,4),%edx$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	85 d2                	test   %edx,%edx$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	74 1d                	je     f0101dad <.L29+0x40>$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	52                   	push   %edx$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	8d 80 fc ce fe ff    	lea    -0x13104(%eax),%eax$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	50                   	push   %eax$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	57                   	push   %edi$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	56                   	push   %esi$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	e8 68 fe ff ff       	call   f0101c0a <printfmt>$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	e9 8b 02 00 00       	jmp    f0102038 <.L26+0x45>$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	50                   	push   %eax$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	8d 80 cf d0 fe ff    	lea    -0x12f31(%eax),%eax$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	50                   	push   %eax$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	57                   	push   %edi$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	56                   	push   %esi$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	e8 4b fe ff ff       	call   f0101c0a <printfmt>$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	e9 6e 02 00 00       	jmp    f0102038 <.L26+0x45>$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca <.L25>:$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	83 c0 04             	add    $0x4,%eax$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	8b 10                	mov    (%eax),%edx$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	85 d2                	test   %edx,%edx$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	8d 80 c8 d0 fe ff    	lea    -0x12f38(%eax),%eax$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	7e 06                	jle    f0101df8 <.L25+0x2e>$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	80 7d cf 2d          	cmpb   $0x2d,-0x31(%ebp)$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	75 0d                	jne    f0101e05 <.L25+0x3b>$/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	89 c3                	mov    %eax,%ebx$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	03 45 d4             	add    -0x2c(%ebp),%eax$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	eb 42                	jmp    f0101e47 <.L25+0x7d>$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	50                   	push   %eax$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	e8 3f 04 00 00       	call   f0102253 <strnlen>$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	29 c2                	sub    %eax,%edx$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	89 d3                	mov    %edx,%ebx$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	0f be 45 cf          	movsbl -0x31(%ebp),%eax$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	85 db                	test   %ebx,%ebx$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	7e 58                	jle    f0101e84 <.L25+0xba>$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	57                   	push   %edi$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	ff d6                	call   *%esi$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	eb eb                	jmp    f0101e28 <.L25+0x5e>$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	57                   	push   %edi$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	52                   	push   %edx$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	ff d6                	call   *%esi$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	29 d9                	sub    %ebx,%ecx$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	0f be d0             	movsbl %al,%edx$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	85 d2                	test   %edx,%edx$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	74 45                	je     f0101e9f <.L25+0xd5>$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	78 06                	js     f0101e66 <.L25+0x9c>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	83 6d d8 01          	subl   $0x1,-0x28(%ebp)$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	78 35                	js     f0101e9b <.L25+0xd1>$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	74 d1                	je     f0101e3d <.L25+0x73>$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	0f be c0             	movsbl %al,%eax$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	76 c6                	jbe    f0101e3d <.L25+0x73>$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	57                   	push   %edi$/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	6a 3f                	push   $0x3f$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	ff d6                	call   *%esi$/;"	l
f0101e7f	obj/kern/kernel.asm	/^f0101e7f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	eb c3                	jmp    f0101e47 <.L25+0x7d>$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	85 d2                	test   %edx,%edx$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	29 c2                	sub    %eax,%edx$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	e9 5d ff ff ff       	jmp    f0101df8 <.L25+0x2e>$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	89 cb                	mov    %ecx,%ebx$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	eb 02                	jmp    f0101ea1 <.L25+0xd7>$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	89 cb                	mov    %ecx,%ebx$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	85 db                	test   %ebx,%ebx$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	7e 10                	jle    f0101eb5 <.L25+0xeb>$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	57                   	push   %edi$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	6a 20                	push   $0x20$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	ff d6                	call   *%esi$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	eb ec                	jmp    f0101ea1 <.L25+0xd7>$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	e9 78 01 00 00       	jmp    f0102038 <.L26+0x45>$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0 <.L30>:$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	7f 1b                	jg     f0101ee6 <.L30+0x26>$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	85 c9                	test   %ecx,%ecx$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	74 63                	je     f0101f32 <.L30+0x72>$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101ed2	obj/kern/kernel.asm	/^f0101ed2:	8b 00                	mov    (%eax),%eax$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101ed7	obj/kern/kernel.asm	/^f0101ed7:	99                   	cltd   $/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	eb 17                	jmp    f0101efd <.L30+0x3d>$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	8b 00                	mov    (%eax),%eax$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101ef1	obj/kern/kernel.asm	/^f0101ef1:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	85 c9                	test   %ecx,%ecx$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	0f 89 0e 01 00 00    	jns    f010201e <.L26+0x2b>$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	57                   	push   %edi$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	6a 2d                	push   $0x2d$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	ff d6                	call   *%esi$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	f7 da                	neg    %edx$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	f7 d9                	neg    %ecx$/;"	l
f0101f25	obj/kern/kernel.asm	/^f0101f25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	e9 ec 00 00 00       	jmp    f010201e <.L26+0x2b>$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	99                   	cltd   $/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101f44	obj/kern/kernel.asm	/^f0101f44:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	eb b4                	jmp    f0101efd <.L30+0x3d>$/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49 <.L24>:$/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	7f 1e                	jg     f0101f72 <.L24+0x29>$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	85 c9                	test   %ecx,%ecx$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	74 32                	je     f0101f8a <.L24+0x41>$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	8b 10                	mov    (%eax),%edx$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	e9 ac 00 00 00       	jmp    f010201e <.L26+0x2b>$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	8b 10                	mov    (%eax),%edx$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	e9 94 00 00 00       	jmp    f010201e <.L26+0x2b>$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	8b 10                	mov    (%eax),%edx$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	eb 7d                	jmp    f010201e <.L26+0x2b>$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1 <.L27>:$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	7f 1b                	jg     f0101fc7 <.L27+0x26>$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	85 c9                	test   %ecx,%ecx$/;"	l
f0101fae	obj/kern/kernel.asm	/^f0101fae:	74 2c                	je     f0101fdc <.L27+0x3b>$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	8b 10                	mov    (%eax),%edx$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	eb 57                	jmp    f010201e <.L26+0x2b>$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	8b 10                	mov    (%eax),%edx$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	eb 42                	jmp    f010201e <.L26+0x2b>$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	8b 10                	mov    (%eax),%edx$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	eb 2b                	jmp    f010201e <.L26+0x2b>$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3 <.L26>:$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	57                   	push   %edi$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	6a 30                	push   $0x30$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	ff d6                	call   *%esi$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	57                   	push   %edi$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	6a 78                	push   $0x78$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	ff d6                	call   *%esi$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	8b 10                	mov    (%eax),%edx$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0102010	obj/kern/kernel.asm	/^f0102010:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	0f be 5d cf          	movsbl -0x31(%ebp),%ebx$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	53                   	push   %ebx$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102029	obj/kern/kernel.asm	/^f0102029:	50                   	push   %eax$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	51                   	push   %ecx$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	52                   	push   %edx$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	89 fa                	mov    %edi,%edx$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	89 f0                	mov    %esi,%eax$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	e8 f3 fa ff ff       	call   f0101b28 <printnum>$/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	e9 12 fc ff ff       	jmp    f0101c52 <vprintfmt+0x2b>$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040 <.L22>:$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	7f 1b                	jg     f0102066 <.L22+0x26>$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	85 c9                	test   %ecx,%ecx$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	74 2c                	je     f010207b <.L22+0x3b>$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	8b 10                	mov    (%eax),%edx$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010205f	obj/kern/kernel.asm	/^f010205f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	eb b8                	jmp    f010201e <.L26+0x2b>$/;"	l
f0102066	obj/kern/kernel.asm	/^f0102066:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	8b 10                	mov    (%eax),%edx$/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	eb a3                	jmp    f010201e <.L26+0x2b>$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	8b 10                	mov    (%eax),%edx$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0102088	obj/kern/kernel.asm	/^f0102088:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	eb 8c                	jmp    f010201e <.L26+0x2b>$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092 <.L36>:$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	57                   	push   %edi$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	6a 25                	push   $0x25$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	ff d6                	call   *%esi$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020a0	obj/kern/kernel.asm	/^f01020a0:	eb 96                	jmp    f0102038 <.L26+0x45>$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2 <.L21>:$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	57                   	push   %edi$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	6a 25                	push   $0x25$/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	ff d6                	call   *%esi$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	89 d8                	mov    %ebx,%eax$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	eb 03                	jmp    f01020b7 <.L21+0x15>$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	75 f7                	jne    f01020b4 <.L21+0x12>$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01020c0	obj/kern/kernel.asm	/^f01020c0:	e9 73 ff ff ff       	jmp    f0102038 <.L26+0x45>$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5 <vsnprintf>:$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	55                   	push   %ebp$/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	53                   	push   %ebx$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	e8 f0 e0 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	81 c3 97 3f 01 00    	add    $0x13f97,%ebx$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01020e4	obj/kern/kernel.asm	/^f01020e4:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	85 c0                	test   %eax,%eax$/;"	l
f01020f0	obj/kern/kernel.asm	/^f01020f0:	74 2b                	je     f010211d <vsnprintf+0x58>$/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	85 d2                	test   %edx,%edx$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	7e 27                	jle    f010211d <vsnprintf+0x58>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	50                   	push   %eax$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	8d 83 85 bb fe ff    	lea    -0x1447b(%ebx),%eax$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	50                   	push   %eax$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	e8 1b fb ff ff       	call   f0101c27 <vprintfmt>$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	c9                   	leave  $/;"	l
f010211c	obj/kern/kernel.asm	/^f010211c:	c3                   	ret    $/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	eb f4                	jmp    f0102118 <vsnprintf+0x53>$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124 <snprintf>:$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	55                   	push   %ebp$/;"	l
f0102125	obj/kern/kernel.asm	/^f0102125:	89 e5                	mov    %esp,%ebp$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	50                   	push   %eax$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	e8 89 ff ff ff       	call   f01020c5 <vsnprintf>$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	c9                   	leave  $/;"	l
f010213d	obj/kern/kernel.asm	/^f010213d:	c3                   	ret    $/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e <readline>:$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	55                   	push   %ebp$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	57                   	push   %edi$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	56                   	push   %esi$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	53                   	push   %ebx$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	e8 75 e0 ff ff       	call   f01001c1 <__x86.get_pc_thunk.bx>$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	81 c3 1c 3f 01 00    	add    $0x13f1c,%ebx$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	85 c0                	test   %eax,%eax$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	74 13                	je     f010216c <readline+0x2e>$/;"	l
f0102159	obj/kern/kernel.asm	/^f0102159:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	50                   	push   %eax$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	8d 83 fc ce fe ff    	lea    -0x13104(%ebx),%eax$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	50                   	push   %eax$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	e8 30 f6 ff ff       	call   f0101799 <cprintf>$/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	83 c4 10             	add    $0x10,%esp$/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	6a 00                	push   $0x0$/;"	l
f0102171	obj/kern/kernel.asm	/^f0102171:	e8 b6 e5 ff ff       	call   f010072c <iscons>$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	83 c4 10             	add    $0x10,%esp$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	eb 52                	jmp    f01021d5 <readline+0x97>$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	50                   	push   %eax$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	8d 83 9c d2 fe ff    	lea    -0x12d64(%ebx),%eax$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	50                   	push   %eax$/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	e8 06 f6 ff ff       	call   f0101799 <cprintf>$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	5b                   	pop    %ebx$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	5e                   	pop    %esi$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	5f                   	pop    %edi$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	5d                   	pop    %ebp$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	c3                   	ret    $/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	75 05                	jne    f01021ae <readline+0x70>$/;"	l
f01021a9	obj/kern/kernel.asm	/^f01021a9:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	eb 27                	jmp    f01021d5 <readline+0x97>$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	6a 08                	push   $0x8$/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	e8 53 e5 ff ff       	call   f010070b <cputchar>$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	eb ec                	jmp    f01021a9 <readline+0x6b>$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	56                   	push   %esi$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	e8 45 e5 ff ff       	call   f010070b <cputchar>$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	89 f0                	mov    %esi,%eax$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	88 84 3b 58 02 00 00 	mov    %al,0x258(%ebx,%edi,1)$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	8d 7f 01             	lea    0x1(%edi),%edi$/;"	l
f01021d5	obj/kern/kernel.asm	/^f01021d5:	e8 41 e5 ff ff       	call   f010071b <getchar>$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	89 c6                	mov    %eax,%esi$/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	85 c0                	test   %eax,%eax$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	78 a3                	js     f0102183 <readline+0x45>$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	0f 94 c2             	sete   %dl$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	0f 94 c0             	sete   %al$/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	08 c2                	or     %al,%dl$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	74 04                	je     f01021f4 <readline+0xb6>$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	85 ff                	test   %edi,%edi$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	7f af                	jg     f01021a3 <readline+0x65>$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	83 fe 1f             	cmp    $0x1f,%esi$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	7e 10                	jle    f0102209 <readline+0xcb>$/;"	l
f01021f9	obj/kern/kernel.asm	/^f01021f9:	81 ff fe 03 00 00    	cmp    $0x3fe,%edi$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	7f 08                	jg     f0102209 <readline+0xcb>$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	74 c2                	je     f01021c9 <readline+0x8b>$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	eb b4                	jmp    f01021bd <readline+0x7f>$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	74 05                	je     f0102213 <readline+0xd5>$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	83 fe 0d             	cmp    $0xd,%esi$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	75 c2                	jne    f01021d5 <readline+0x97>$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	75 13                	jne    f010222c <readline+0xee>$/;"	l
f0102219	obj/kern/kernel.asm	/^f0102219:	c6 84 3b 58 02 00 00 	movb   $0x0,0x258(%ebx,%edi,1)$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	00 $/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	8d 83 58 02 00 00    	lea    0x258(%ebx),%eax$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	e9 6f ff ff ff       	jmp    f010219b <readline+0x5d>$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	6a 0a                	push   $0xa$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	e8 d5 e4 ff ff       	call   f010070b <cputchar>$/;"	l
f0102236	obj/kern/kernel.asm	/^f0102236:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	eb de                	jmp    f0102219 <readline+0xdb>$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b <strlen>:$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	55                   	push   %ebp$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	89 e5                	mov    %esp,%ebp$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	74 05                	je     f0102251 <strlen+0x16>$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	eb f5                	jmp    f0102246 <strlen+0xb>$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	5d                   	pop    %ebp$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	c3                   	ret    $/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253 <strnlen>:$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	55                   	push   %ebp$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	89 e5                	mov    %esp,%ebp$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0102259	obj/kern/kernel.asm	/^f0102259:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	39 c2                	cmp    %eax,%edx$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	74 0d                	je     f0102272 <strnlen+0x1f>$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	74 05                	je     f0102270 <strnlen+0x1d>$/;"	l
f010226b	obj/kern/kernel.asm	/^f010226b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	eb f1                	jmp    f0102261 <strnlen+0xe>$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	89 d0                	mov    %edx,%eax$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	5d                   	pop    %ebp$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	c3                   	ret    $/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274 <strcpy>:$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	55                   	push   %ebp$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	89 e5                	mov    %esp,%ebp$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	53                   	push   %ebx$/;"	l
f0102278	obj/kern/kernel.asm	/^f0102278:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	84 c9                	test   %cl,%cl$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	75 f2                	jne    f0102283 <strcpy+0xf>$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	5b                   	pop    %ebx$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	5d                   	pop    %ebp$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	c3                   	ret    $/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294 <strcat>:$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	55                   	push   %ebp$/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	89 e5                	mov    %esp,%ebp$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	53                   	push   %ebx$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	53                   	push   %ebx$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	e8 97 ff ff ff       	call   f010223b <strlen>$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	01 d8                	add    %ebx,%eax$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	50                   	push   %eax$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	e8 c2 ff ff ff       	call   f0102274 <strcpy>$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	89 d8                	mov    %ebx,%eax$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	c9                   	leave  $/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	c3                   	ret    $/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9 <strncpy>:$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	55                   	push   %ebp$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	56                   	push   %esi$/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	53                   	push   %ebx$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	89 c6                	mov    %eax,%esi$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	89 c2                	mov    %eax,%edx$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	39 f2                	cmp    %esi,%edx$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	74 11                	je     f01022e0 <strncpy+0x27>$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	83 c2 01             	add    $0x1,%edx$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	80 fb 01             	cmp    $0x1,%bl$/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	eb eb                	jmp    f01022cb <strncpy+0x12>$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	5b                   	pop    %ebx$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	5e                   	pop    %esi$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	5d                   	pop    %ebp$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	c3                   	ret    $/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4 <strlcpy>:$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	55                   	push   %ebp$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	56                   	push   %esi$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	53                   	push   %ebx$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01022f2	obj/kern/kernel.asm	/^f01022f2:	89 f0                	mov    %esi,%eax$/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	85 d2                	test   %edx,%edx$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	74 21                	je     f0102319 <strlcpy+0x35>$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	89 f2                	mov    %esi,%edx$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	39 c2                	cmp    %eax,%edx$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	74 14                	je     f0102316 <strlcpy+0x32>$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	84 db                	test   %bl,%bl$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	74 0b                	je     f0102314 <strlcpy+0x30>$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010230c	obj/kern/kernel.asm	/^f010230c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	eb ea                	jmp    f01022fe <strlcpy+0x1a>$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	89 d0                	mov    %edx,%eax$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	29 f0                	sub    %esi,%eax$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	5b                   	pop    %ebx$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	5e                   	pop    %esi$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	5d                   	pop    %ebp$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	c3                   	ret    $/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f <strcmp>:$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	55                   	push   %ebp$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	89 e5                	mov    %esp,%ebp$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	84 c0                	test   %al,%al$/;"	l
f010232d	obj/kern/kernel.asm	/^f010232d:	74 0c                	je     f010233b <strcmp+0x1c>$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	3a 02                	cmp    (%edx),%al$/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	75 08                	jne    f010233b <strcmp+0x1c>$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0102336	obj/kern/kernel.asm	/^f0102336:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	eb ed                	jmp    f0102328 <strcmp+0x9>$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010233e	obj/kern/kernel.asm	/^f010233e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	29 d0                	sub    %edx,%eax$/;"	l
f0102343	obj/kern/kernel.asm	/^f0102343:	5d                   	pop    %ebp$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	c3                   	ret    $/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345 <strncmp>:$/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	55                   	push   %ebp$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	89 e5                	mov    %esp,%ebp$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	53                   	push   %ebx$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	89 c3                	mov    %eax,%ebx$/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	eb 06                	jmp    f010235c <strncmp+0x17>$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	83 c2 01             	add    $0x1,%edx$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	74 16                	je     f0102376 <strncmp+0x31>$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	84 c9                	test   %cl,%cl$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	74 04                	je     f010236b <strncmp+0x26>$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	74 eb                	je     f0102356 <strncmp+0x11>$/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0102371	obj/kern/kernel.asm	/^f0102371:	29 d0                	sub    %edx,%eax$/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	5b                   	pop    %ebx$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	5d                   	pop    %ebp$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	c3                   	ret    $/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010237b	obj/kern/kernel.asm	/^f010237b:	eb f6                	jmp    f0102373 <strncmp+0x2e>$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d <strchr>:$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	55                   	push   %ebp$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	84 d2                	test   %dl,%dl$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	74 09                	je     f0102397 <strchr+0x1a>$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	38 ca                	cmp    %cl,%dl$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	74 0a                	je     f010239c <strchr+0x1f>$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	eb f0                	jmp    f0102387 <strchr+0xa>$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	5d                   	pop    %ebp$/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	c3                   	ret    $/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e <strfind>:$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	55                   	push   %ebp$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	89 e5                	mov    %esp,%ebp$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	38 ca                	cmp    %cl,%dl$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	74 09                	je     f01023b8 <strfind+0x1a>$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	84 d2                	test   %dl,%dl$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	74 05                	je     f01023b8 <strfind+0x1a>$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	eb f0                	jmp    f01023a8 <strfind+0xa>$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	5d                   	pop    %ebp$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	c3                   	ret    $/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba <memset>:$/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba:	55                   	push   %ebp$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	57                   	push   %edi$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	56                   	push   %esi$/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	53                   	push   %ebx$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	85 c9                	test   %ecx,%ecx$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	74 31                	je     f01023fb <memset+0x41>$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	89 f8                	mov    %edi,%eax$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	09 c8                	or     %ecx,%eax$/;"	l
f01023ce	obj/kern/kernel.asm	/^f01023ce:	a8 03                	test   $0x3,%al$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	75 23                	jne    f01023f5 <memset+0x3b>$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	89 d3                	mov    %edx,%ebx$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	89 d0                	mov    %edx,%eax$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	89 d6                	mov    %edx,%esi$/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	09 f0                	or     %esi,%eax$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	09 c2                	or     %eax,%edx$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	09 da                	or     %ebx,%edx$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	89 d0                	mov    %edx,%eax$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	fc                   	cld    $/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	eb 06                	jmp    f01023fb <memset+0x41>$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	fc                   	cld    $/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	89 f8                	mov    %edi,%eax$/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	5b                   	pop    %ebx$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	5e                   	pop    %esi$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	5f                   	pop    %edi$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	5d                   	pop    %ebp$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	c3                   	ret    $/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402 <memmove>:$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	55                   	push   %ebp$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	89 e5                	mov    %esp,%ebp$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	57                   	push   %edi$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	56                   	push   %esi$/;"	l
f0102407	obj/kern/kernel.asm	/^f0102407:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	39 c6                	cmp    %eax,%esi$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	73 32                	jae    f0102446 <memmove+0x44>$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	39 c2                	cmp    %eax,%edx$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	76 2b                	jbe    f0102446 <memmove+0x44>$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	89 fe                	mov    %edi,%esi$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	09 ce                	or     %ecx,%esi$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	09 d6                	or     %edx,%esi$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	75 0e                	jne    f010243a <memmove+0x38>$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	fd                   	std    $/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	eb 09                	jmp    f0102443 <memmove+0x41>$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	fd                   	std    $/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	fc                   	cld    $/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	eb 1a                	jmp    f0102460 <memmove+0x5e>$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	89 c2                	mov    %eax,%edx$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	09 ca                	or     %ecx,%edx$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	09 f2                	or     %esi,%edx$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	75 0a                	jne    f010245b <memmove+0x59>$/;"	l
f0102451	obj/kern/kernel.asm	/^f0102451:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	89 c7                	mov    %eax,%edi$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	fc                   	cld    $/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	eb 05                	jmp    f0102460 <memmove+0x5e>$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	89 c7                	mov    %eax,%edi$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	fc                   	cld    $/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	5e                   	pop    %esi$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	5f                   	pop    %edi$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	5d                   	pop    %ebp$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	c3                   	ret    $/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464 <memcpy>:$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	55                   	push   %ebp$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	89 e5                	mov    %esp,%ebp$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	e8 8a ff ff ff       	call   f0102402 <memmove>$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	c9                   	leave  $/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	c3                   	ret    $/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a <memcmp>:$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	55                   	push   %ebp$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	89 e5                	mov    %esp,%ebp$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	56                   	push   %esi$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	53                   	push   %ebx$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	89 c6                	mov    %eax,%esi$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	39 f0                	cmp    %esi,%eax$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	74 1c                	je     f01024aa <memcmp+0x30>$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	38 d9                	cmp    %bl,%cl$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	75 08                	jne    f01024a0 <memcmp+0x26>$/;"	l
f0102498	obj/kern/kernel.asm	/^f0102498:	83 c0 01             	add    $0x1,%eax$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	eb ea                	jmp    f010248a <memcmp+0x10>$/;"	l
f01024a0	obj/kern/kernel.asm	/^f01024a0:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	29 d8                	sub    %ebx,%eax$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	eb 05                	jmp    f01024af <memcmp+0x35>$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	5b                   	pop    %ebx$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	5e                   	pop    %esi$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	5d                   	pop    %ebp$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	c3                   	ret    $/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3 <memfind>:$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	55                   	push   %ebp$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	89 c2                	mov    %eax,%edx$/;"	l
f01024be	obj/kern/kernel.asm	/^f01024be:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	39 d0                	cmp    %edx,%eax$/;"	l
f01024c3	obj/kern/kernel.asm	/^f01024c3:	73 09                	jae    f01024ce <memfind+0x1b>$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	38 08                	cmp    %cl,(%eax)$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	74 05                	je     f01024ce <memfind+0x1b>$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	eb f3                	jmp    f01024c1 <memfind+0xe>$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	5d                   	pop    %ebp$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	c3                   	ret    $/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0 <strtol>:$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	55                   	push   %ebp$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	57                   	push   %edi$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	56                   	push   %esi$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	53                   	push   %ebx$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	eb 03                	jmp    f01024e1 <strtol+0x11>$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	3c 20                	cmp    $0x20,%al$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	74 f6                	je     f01024de <strtol+0xe>$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	3c 09                	cmp    $0x9,%al$/;"	l
f01024ea	obj/kern/kernel.asm	/^f01024ea:	74 f2                	je     f01024de <strtol+0xe>$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	74 2a                	je     f010251a <strtol+0x4a>$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	74 2b                	je     f0102524 <strtol+0x54>$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	75 0f                	jne    f0102510 <strtol+0x40>$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	74 28                	je     f010252e <strtol+0x5e>$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	85 db                	test   %ebx,%ebx$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	0f 44 d8             	cmove  %eax,%ebx$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	eb 50                	jmp    f010256a <strtol+0x9a>$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	eb d5                	jmp    f01024f9 <strtol+0x29>$/;"	l
f0102524	obj/kern/kernel.asm	/^f0102524:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	eb cb                	jmp    f01024f9 <strtol+0x29>$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	74 0e                	je     f0102542 <strtol+0x72>$/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	85 db                	test   %ebx,%ebx$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	75 d8                	jne    f0102510 <strtol+0x40>$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	eb ce                	jmp    f0102510 <strtol+0x40>$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	eb c4                	jmp    f0102510 <strtol+0x40>$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f010254f	obj/kern/kernel.asm	/^f010254f:	89 f3                	mov    %esi,%ebx$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0102554	obj/kern/kernel.asm	/^f0102554:	77 29                	ja     f010257f <strtol+0xaf>$/;"	l
f0102556	obj/kern/kernel.asm	/^f0102556:	0f be d2             	movsbl %dl,%edx$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	83 ea 57             	sub    $0x57,%edx$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	7d 30                	jge    f0102591 <strtol+0xc1>$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	01 d0                	add    %edx,%eax$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	89 f3                	mov    %esi,%ebx$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	77 d5                	ja     f010254c <strtol+0x7c>$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	0f be d2             	movsbl %dl,%edx$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	eb dd                	jmp    f010255c <strtol+0x8c>$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	89 f3                	mov    %esi,%ebx$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	77 08                	ja     f0102591 <strtol+0xc1>$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	0f be d2             	movsbl %dl,%edx$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	eb cb                	jmp    f010255c <strtol+0x8c>$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	74 05                	je     f010259c <strtol+0xcc>$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010259a	obj/kern/kernel.asm	/^f010259a:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	89 c2                	mov    %eax,%edx$/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	f7 da                	neg    %edx$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	85 ff                	test   %edi,%edi$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	5b                   	pop    %ebx$/;"	l
f01025a6	obj/kern/kernel.asm	/^f01025a6:	5e                   	pop    %esi$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	5f                   	pop    %edi$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	5d                   	pop    %ebp$/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	c3                   	ret    $/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	66 90                	xchg   %ax,%ax$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	66 90                	xchg   %ax,%ax$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	66 90                	xchg   %ax,%ax$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0 <__udivdi3>:$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	f3 0f 1e fb          	endbr32 $/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	55                   	push   %ebp$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	57                   	push   %edi$/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	56                   	push   %esi$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	53                   	push   %ebx$/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	85 d2                	test   %edx,%edx$/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	75 49                	jne    f0102618 <__udivdi3+0x68>$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	39 f3                	cmp    %esi,%ebx$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	76 15                	jbe    f01025e8 <__udivdi3+0x38>$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	31 ff                	xor    %edi,%edi$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	89 e8                	mov    %ebp,%eax$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	89 f2                	mov    %esi,%edx$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	f7 f3                	div    %ebx$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	89 fa                	mov    %edi,%edx$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	5b                   	pop    %ebx$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	5e                   	pop    %esi$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	5f                   	pop    %edi$/;"	l
f01025e3	obj/kern/kernel.asm	/^f01025e3:	5d                   	pop    %ebp$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	c3                   	ret    $/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	89 d9                	mov    %ebx,%ecx$/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	85 db                	test   %ebx,%ebx$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	75 0b                	jne    f01025f9 <__udivdi3+0x49>$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	31 d2                	xor    %edx,%edx$/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	f7 f3                	div    %ebx$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	89 c1                	mov    %eax,%ecx$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	31 d2                	xor    %edx,%edx$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	89 f0                	mov    %esi,%eax$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	f7 f1                	div    %ecx$/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	89 c6                	mov    %eax,%esi$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	89 e8                	mov    %ebp,%eax$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	89 f7                	mov    %esi,%edi$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	f7 f1                	div    %ecx$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	89 fa                	mov    %edi,%edx$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	5b                   	pop    %ebx$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	5e                   	pop    %esi$/;"	l
f010260e	obj/kern/kernel.asm	/^f010260e:	5f                   	pop    %edi$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	5d                   	pop    %ebp$/;"	l
f0102610	obj/kern/kernel.asm	/^f0102610:	c3                   	ret    $/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	39 f2                	cmp    %esi,%edx$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	77 1c                	ja     f0102638 <__udivdi3+0x88>$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	0f bd fa             	bsr    %edx,%edi$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	75 2c                	jne    f0102650 <__udivdi3+0xa0>$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	39 f2                	cmp    %esi,%edx$/;"	l
f0102626	obj/kern/kernel.asm	/^f0102626:	72 06                	jb     f010262e <__udivdi3+0x7e>$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	31 c0                	xor    %eax,%eax$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	39 eb                	cmp    %ebp,%ebx$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	77 ad                	ja     f01025db <__udivdi3+0x2b>$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	eb a6                	jmp    f01025db <__udivdi3+0x2b>$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	31 ff                	xor    %edi,%edi$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	31 c0                	xor    %eax,%eax$/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	89 fa                	mov    %edi,%edx$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	5b                   	pop    %ebx$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	5e                   	pop    %esi$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	5f                   	pop    %edi$/;"	l
f0102644	obj/kern/kernel.asm	/^f0102644:	5d                   	pop    %ebp$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	c3                   	ret    $/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0102650	obj/kern/kernel.asm	/^f0102650:	89 f9                	mov    %edi,%ecx$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	29 f8                	sub    %edi,%eax$/;"	l
f0102659	obj/kern/kernel.asm	/^f0102659:	d3 e2                	shl    %cl,%edx$/;"	d
f010265b	obj/kern/kernel.asm	/^f010265b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010265f	obj/kern/kernel.asm	/^f010265f:	89 c1                	mov    %eax,%ecx$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	89 da                	mov    %ebx,%edx$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	d3 ea                	shr    %cl,%edx$/;"	d
f0102665	obj/kern/kernel.asm	/^f0102665:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	09 d1                	or     %edx,%ecx$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	89 f2                	mov    %esi,%edx$/;"	l
f010266d	obj/kern/kernel.asm	/^f010266d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	89 f9                	mov    %edi,%ecx$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	d3 e3                	shl    %cl,%ebx$/;"	d
f0102675	obj/kern/kernel.asm	/^f0102675:	89 c1                	mov    %eax,%ecx$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	d3 ea                	shr    %cl,%edx$/;"	d
f0102679	obj/kern/kernel.asm	/^f0102679:	89 f9                	mov    %edi,%ecx$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	89 eb                	mov    %ebp,%ebx$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	d3 e6                	shl    %cl,%esi$/;"	d
f0102683	obj/kern/kernel.asm	/^f0102683:	89 c1                	mov    %eax,%ecx$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	d3 eb                	shr    %cl,%ebx$/;"	d
f0102687	obj/kern/kernel.asm	/^f0102687:	09 de                	or     %ebx,%esi$/;"	l
f0102689	obj/kern/kernel.asm	/^f0102689:	89 f0                	mov    %esi,%eax$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	89 d6                	mov    %edx,%esi$/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	89 c3                	mov    %eax,%ebx$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	39 d6                	cmp    %edx,%esi$/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	72 15                	jb     f01026b0 <__udivdi3+0x100>$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	89 f9                	mov    %edi,%ecx$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	d3 e5                	shl    %cl,%ebp$/;"	d
f010269f	obj/kern/kernel.asm	/^f010269f:	39 c5                	cmp    %eax,%ebp$/;"	l
f01026a1	obj/kern/kernel.asm	/^f01026a1:	73 04                	jae    f01026a7 <__udivdi3+0xf7>$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	39 d6                	cmp    %edx,%esi$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	74 09                	je     f01026b0 <__udivdi3+0x100>$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	89 d8                	mov    %ebx,%eax$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	31 ff                	xor    %edi,%edi$/;"	l
f01026ab	obj/kern/kernel.asm	/^f01026ab:	e9 2b ff ff ff       	jmp    f01025db <__udivdi3+0x2b>$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	31 ff                	xor    %edi,%edi$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	e9 21 ff ff ff       	jmp    f01025db <__udivdi3+0x2b>$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	66 90                	xchg   %ax,%ax$/;"	l
f01026bc	obj/kern/kernel.asm	/^f01026bc:	66 90                	xchg   %ax,%ax$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	66 90                	xchg   %ax,%ax$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0 <__umoddi3>:$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	f3 0f 1e fb          	endbr32 $/;"	l
f01026c4	obj/kern/kernel.asm	/^f01026c4:	55                   	push   %ebp$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	57                   	push   %edi$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	56                   	push   %esi$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	53                   	push   %ebx$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	8b 44 24 3c          	mov    0x3c(%esp),%eax$/;"	l
f01026d3	obj/kern/kernel.asm	/^f01026d3:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	89 da                	mov    %ebx,%edx$/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	85 c0                	test   %eax,%eax$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	75 3f                	jne    f0102720 <__umoddi3+0x60>$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	39 df                	cmp    %ebx,%edi$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	76 13                	jbe    f01026f8 <__umoddi3+0x38>$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	89 f0                	mov    %esi,%eax$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	f7 f7                	div    %edi$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	89 d0                	mov    %edx,%eax$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	31 d2                	xor    %edx,%edx$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	5b                   	pop    %ebx$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	5e                   	pop    %esi$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	5f                   	pop    %edi$/;"	l
f01026f3	obj/kern/kernel.asm	/^f01026f3:	5d                   	pop    %ebp$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	c3                   	ret    $/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	89 fd                	mov    %edi,%ebp$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	85 ff                	test   %edi,%edi$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	75 0b                	jne    f0102709 <__umoddi3+0x49>$/;"	l
f01026fe	obj/kern/kernel.asm	/^f01026fe:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	31 d2                	xor    %edx,%edx$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	f7 f7                	div    %edi$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	89 c5                	mov    %eax,%ebp$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	89 d8                	mov    %ebx,%eax$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	31 d2                	xor    %edx,%edx$/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	f7 f5                	div    %ebp$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	89 f0                	mov    %esi,%eax$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	f7 f5                	div    %ebp$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	89 d0                	mov    %edx,%eax$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	eb d4                	jmp    f01026eb <__umoddi3+0x2b>$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010271e	obj/kern/kernel.asm	/^f010271e:	66 90                	xchg   %ax,%ax$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	89 f1                	mov    %esi,%ecx$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	76 0a                	jbe    f0102730 <__umoddi3+0x70>$/;"	l
f0102726	obj/kern/kernel.asm	/^f0102726:	89 f0                	mov    %esi,%eax$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	5b                   	pop    %ebx$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	5e                   	pop    %esi$/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	5f                   	pop    %edi$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	5d                   	pop    %ebp$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	c3                   	ret    $/;"	l
f0102730	obj/kern/kernel.asm	/^f0102730:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	75 20                	jne    f0102758 <__umoddi3+0x98>$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	39 d8                	cmp    %ebx,%eax$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	0f 82 b0 00 00 00    	jb     f01027f0 <__umoddi3+0x130>$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	39 f7                	cmp    %esi,%edi$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	0f 86 a8 00 00 00    	jbe    f01027f0 <__umoddi3+0x130>$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	89 c8                	mov    %ecx,%eax$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	5b                   	pop    %ebx$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	5e                   	pop    %esi$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	5f                   	pop    %edi$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	5d                   	pop    %ebp$/;"	l
f0102751	obj/kern/kernel.asm	/^f0102751:	c3                   	ret    $/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	89 e9                	mov    %ebp,%ecx$/;"	l
f010275a	obj/kern/kernel.asm	/^f010275a:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	29 ea                	sub    %ebp,%edx$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	d3 e0                	shl    %cl,%eax$/;"	d
f0102763	obj/kern/kernel.asm	/^f0102763:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	89 d1                	mov    %edx,%ecx$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	89 f8                	mov    %edi,%eax$/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	d3 e8                	shr    %cl,%eax$/;"	d
f010276d	obj/kern/kernel.asm	/^f010276d:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0102771	obj/kern/kernel.asm	/^f0102771:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0102775	obj/kern/kernel.asm	/^f0102775:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	09 c1                	or     %eax,%ecx$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	89 d8                	mov    %ebx,%eax$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	89 e9                	mov    %ebp,%ecx$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	d3 e7                	shl    %cl,%edi$/;"	d
f0102785	obj/kern/kernel.asm	/^f0102785:	89 d1                	mov    %edx,%ecx$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	d3 e8                	shr    %cl,%eax$/;"	d
f0102789	obj/kern/kernel.asm	/^f0102789:	89 e9                	mov    %ebp,%ecx$/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	d3 e3                	shl    %cl,%ebx$/;"	d
f0102791	obj/kern/kernel.asm	/^f0102791:	89 c7                	mov    %eax,%edi$/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	89 d1                	mov    %edx,%ecx$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	89 f0                	mov    %esi,%eax$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	d3 e8                	shr    %cl,%eax$/;"	d
f0102799	obj/kern/kernel.asm	/^f0102799:	89 e9                	mov    %ebp,%ecx$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	89 fa                	mov    %edi,%edx$/;"	l
f010279d	obj/kern/kernel.asm	/^f010279d:	d3 e6                	shl    %cl,%esi$/;"	d
f010279f	obj/kern/kernel.asm	/^f010279f:	09 d8                	or     %ebx,%eax$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f01027a5	obj/kern/kernel.asm	/^f01027a5:	89 d1                	mov    %edx,%ecx$/;"	l
f01027a7	obj/kern/kernel.asm	/^f01027a7:	89 f3                	mov    %esi,%ebx$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	89 c6                	mov    %eax,%esi$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	89 d7                	mov    %edx,%edi$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	39 d1                	cmp    %edx,%ecx$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	72 06                	jb     f01027bb <__umoddi3+0xfb>$/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	75 10                	jne    f01027c7 <__umoddi3+0x107>$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	39 c3                	cmp    %eax,%ebx$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	73 0c                	jae    f01027c7 <__umoddi3+0x107>$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	2b 44 24 0c          	sub    0xc(%esp),%eax$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	1b 54 24 08          	sbb    0x8(%esp),%edx$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	89 d7                	mov    %edx,%edi$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	89 c6                	mov    %eax,%esi$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	89 ca                	mov    %ecx,%edx$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	29 f3                	sub    %esi,%ebx$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	19 fa                	sbb    %edi,%edx$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	89 d0                	mov    %edx,%eax$/;"	l
f01027d4	obj/kern/kernel.asm	/^f01027d4:	d3 e0                	shl    %cl,%eax$/;"	d
f01027d6	obj/kern/kernel.asm	/^f01027d6:	89 e9                	mov    %ebp,%ecx$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	d3 eb                	shr    %cl,%ebx$/;"	d
f01027da	obj/kern/kernel.asm	/^f01027da:	d3 ea                	shr    %cl,%edx$/;"	d
f01027dc	obj/kern/kernel.asm	/^f01027dc:	09 d8                	or     %ebx,%eax$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	5b                   	pop    %ebx$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	5e                   	pop    %esi$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	5f                   	pop    %edi$/;"	l
f01027e4	obj/kern/kernel.asm	/^f01027e4:	5d                   	pop    %ebp$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	c3                   	ret    $/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01027ed	obj/kern/kernel.asm	/^f01027ed:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	89 da                	mov    %ebx,%edx$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	29 fe                	sub    %edi,%esi$/;"	l
f01027f4	obj/kern/kernel.asm	/^f01027f4:	19 c2                	sbb    %eax,%edx$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	89 f1                	mov    %esi,%ecx$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	89 c8                	mov    %ecx,%eax$/;"	l
f01027fa	obj/kern/kernel.asm	/^f01027fa:	e9 4b ff ff ff       	jmp    f010274a <__umoddi3+0x8a>$/;"	l
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
fs_test	fs/test.c	/^fs_test(void)$/;"	f	typeref:typename:void
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	typeref:typename:int (*)(int argc,char ** argv,struct Trapframe * tf)	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	typeref:typename:unsigned:5
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	typeref:typename:unsigned:2
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:3
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	typeref:typename:unsigned:4
gdb	GNUmakefile	/^gdb:$/;"	t
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getchar	kern/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	typeref:typename:long long	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)\/\/ap = arg pointer$/;"	f	typeref:typename:unsigned long long	file:
git-handin	GNUmakefile	/^git-handin: handin-check$/;"	t
grade	GNUmakefile	/^grade:$/;"	t
handin	GNUmakefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	GNUmakefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
hook-stop	.gdbinit	/^define hook-stop$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	typeref:typename:void	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f	typeref:typename:void
inb	inc/x86.h	/^inb(int port)$/;"	f	typeref:typename:uint8_t
inl	inc/x86.h	/^inl(int port)$/;"	f	typeref:typename:uint32_t
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	typeref:typename:short
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	typeref:typename:int
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	typeref:typename:long long
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	typeref:typename:__signed char
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	typeref:typename:void
inw	inc/x86.h	/^inw(int port)$/;"	f	typeref:typename:uint16_t
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	typeref:typename:void	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	typeref:typename:void
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	typeref:typename:int	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v	typeref:typename:pde_t *
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lastcs	.gdbinit	/^set $lastcs = -1$/;"	t
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	typeref:typename:void
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	typeref:typename:void
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	typeref:typename:void
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	typeref:typename:void
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	typeref:typename:void
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	typeref:typename:void
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	typeref:typename:void	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	typeref:typename:void
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	typeref:typename:unsigned
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	typeref:typename:void
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	typeref:typename:void
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	typeref:typename:int
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	typeref:typename:void *
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	typeref:typename:void
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:char *	file:
myapi.key	GNUmakefile	/^myapi.key:$/;"	t
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	typeref:typename:uint16_t
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	typeref:typename:uint8_t
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	typeref:typename:uint32_t
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	typeref:typename:uint8_t
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	typeref:typename:uintptr_t
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	typeref:typename:const char *	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v	typeref:typename:size_t
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	typeref:typename:size_t	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	typeref:typename:int	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	typeref:typename:void
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	typeref:typename:void
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	typeref:typename:void
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	typeref:struct:PageInfo *
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	typeref:typename:void *
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	typeref:typename:physaddr_t
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	typeref:struct:PageInfo *
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	typeref:typename:void
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	typeref:typename:void
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo *	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	typeref:typename:void
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	typeref:typename:int
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	typeref:struct:PageInfo *
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo *
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*) boot_alloc(PGSIZE * npages);$/;"	d
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v	typeref:typename:const char *
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	typeref:typename:uint32_t
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	typeref:typename:uint16_t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	typeref:typename:uint32_t
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	typeref:typename:pte_t *
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo *
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	typeref:typename:uint16_t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	typeref:typename:uint32_t
pre-qemu	GNUmakefile	/^pre-qemu: .gdbinit$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;\/\/精度$/;"	d
print-gdbport	GNUmakefile	/^print-gdbport:$/;"	t
print-qemu	GNUmakefile	/^print-qemu:$/;"	t
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	typeref:typename:void
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	typeref:typename:void	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	typeref:typename:uint32_t
ptr_ebp	obj/kern/kernel.asm	/^		ptr_ebp = (uint32_t *)ebp;$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	typeref:typename:void	file:
qemu	GNUmakefile	/^qemu: $(IMAGES) pre-qemu$/;"	t
qemu-gdb	GNUmakefile	/^qemu-gdb: $(IMAGES) pre-qemu$/;"	t
qemu-nox	GNUmakefile	/^qemu-nox: $(IMAGES) pre-qemu$/;"	t
qemu-nox-gdb	GNUmakefile	/^qemu-nox-gdb: $(IMAGES) pre-qemu$/;"	t
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	typeref:typename:uint32_t
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	typeref:typename:uint32_t
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	typeref:typename:uint32_t
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	typeref:typename:uint32_t
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	typeref:typename:uint32_t
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	typeref:typename:uint32_t
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	typeref:typename:uint32_t
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	typeref:typename:uint64_t
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	typeref:typename:char *
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	typeref:typename:void
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	typeref:typename:void
realclean	GNUmakefile	/^realclean: clean$/;"	t
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	typeref:typename:unsigned:2
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	typeref:typename:bool	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	typeref:typename:void	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	typeref:typename:void
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	typeref:typename:int	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	typeref:typename:void	file:
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	typeref:typename:uint32_t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	typeref:typename:int
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	typeref:typename:void	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	typeref:typename:int32_t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	typeref:typename:void	file:
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v	typeref:typename:const char *
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v	typeref:typename:const char *
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	typeref:typename:char *
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	typeref:typename:char *
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	typeref:typename:int
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	typeref:typename:char *
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	typeref:typename:int
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	typeref:typename:long
tarball-pref	GNUmakefile	/^tarball-pref: handin-check$/;"	t
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f	typeref:typename:void
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	typeref:typename:void
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	typeref:typename:physaddr_t
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	typeref:typename:uint16_t
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	inc/stdarg.h	/^#define va_start(/;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	typeref:typename:void
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;\/\/总宽度$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	typeref:typename:void
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	typeref:typename:uint32_t
