!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
$(OBJDIR)/.deps	GNUmakefile	/^$(OBJDIR)\/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)\/$(dir)\/*.d))$/;"	t
$(OBJDIR)/.vars.%	GNUmakefile	/^$(OBJDIR)\/.vars.%: FORCE$/;"	t
.bss	kern/kernel.ld	/^	.bss : {$/;"	S
.data	kern/kernel.ld	/^	.data : {$/;"	S
.gdbinit	GNUmakefile	/^.gdbinit: .gdbinit.tmpl$/;"	t
.rodata	kern/kernel.ld	/^	.rodata : {$/;"	S
.stab	kern/kernel.ld	/^	.stab : {$/;"	S
.stabstr	kern/kernel.ld	/^	.stabstr : {$/;"	S
.text	kern/kernel.ld	/^	.text : AT(0x100000) {$/;"	S
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAY_SIZE	inc/types.h	/^#define ARRAY_SIZE(/;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM /;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM /;"	d	file:
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PE_ON	boot/boot.S	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PE_ON	obj/boot/boot.asm	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3824070e0103
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3824070e0103
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3824070e0103
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3824070e0103
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3824070e0103
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3824070e0103
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=2$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3824070e0103
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS /;"	d	file:
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC /;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018$/;"	m
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PROT_MODE_CSEG	boot/boot.S	/^.set PROT_MODE_CSEG, 0x8         # kernel code segment selector$/;"	d
PROT_MODE_DSEG	boot/boot.S	/^.set PROT_MODE_DSEG, 0x10        # kernel data segment selector$/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:std/;"	m
RELOC	kern/entry.S	/^#define	RELOC(/;"	d	file:
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SRL	kern/entry.S	/^#define SRL(/;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | aw/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
V	conf/env.mk	/^V = @$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
_Bool	inc/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__STABSTR_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STABSTR_BEGIN__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_END__	kern/kernel.ld	/^		PROVIDE(__STABSTR_END__ = .);$/;"	s	section:.stabstr	assignment:provide
__STAB_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STAB_BEGIN__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_END__	kern/kernel.ld	/^		PROVIDE(__STAB_END__ = .);$/;"	s	section:.stab	assignment:provide
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3824070e0103	inc/error.h	/^enum {$/;"	g
__anon9d6ad5280108	kern/console.c	/^static struct {$/;"	s	file:
__anoncaf80a390103	inc/types.h	/^enum { false, true };$/;"	g
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	typeref:typename:unsigned	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
all	GNUmakefile	/^all:$/;"	t
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
always	GNUmakefile	/^always:$/;"	t
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	typeref:typename:void *	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	typeref:typename:void	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f	typeref:typename:void
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	typeref:typename:void
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint8_t[]	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	typeref:typename:char[]	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	typeref:typename:void	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	typeref:typename:void	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	typeref:typename:uint8_t * [4]	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	typeref:typename:void	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	typeref:typename:void	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	typeref:typename:void	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	typeref:typename:void	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	typeref:typename:void	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	typeref:typename:physaddr_t	file:
clean	GNUmakefile	/^clean:$/;"	t
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	typeref:typename:int	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command[]	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9d6ad5280108
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	typeref:typename:int
cons_init	kern/console.c	/^cons_init(void)$/;"	f	typeref:typename:void
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	typeref:typename:void	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	typeref:typename:void	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	typeref:typename:void
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	typeref:typename:void
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	typeref:typename:uint16_t *	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	typeref:typename:uint16_t	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	typeref:typename:int
delay	kern/console.c	/^delay(void)$/;"	f	typeref:typename:void	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	typeref:typename:const char *	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
distclean	GNUmakefile	/^distclean: realclean$/;"	t
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	typeref:typename:uint8_t[12]
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	typeref:typename:uint32_t
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	typeref:typename:uint32_t
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
edata	kern/kernel.ld	/^		PROVIDE(edata = .);$/;"	s	section:.bss	assignment:provide
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	typeref:typename:uintptr_t
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:int
end	kern/kernel.ld	/^		PROVIDE(end = .);$/;"	s	section:.bss	assignment:provide
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v	typeref:typename:pde_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v	typeref:typename:pte_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v	typeref:typename:pte_t[]
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	typeref:typename:const char * const[]	file:
etext	kern/kernel.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 20 11 00       	mov    $0x112000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 00 11 f0       	mov    $0xf0110000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 68 00 00 00       	call   f01000a6 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	e8 72 01 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	81 c3 02 30 01 00    	add    $0x13002,%ebx$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100053	obj/kern/kernel.asm	/^f0100053:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100056	obj/kern/kernel.asm	/^f0100056:	56                   	push   %esi$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	8d 83 94 e9 fe ff    	lea    -0x1166c(%ebx),%eax$/;"	l
f010005d	obj/kern/kernel.asm	/^f010005d:	50                   	push   %eax$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	e8 bb 09 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	85 f6                	test   %esi,%esi$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	7e 29                	jle    f0100093 <test_backtrace+0x53>$/;"	l
f010006a	obj/kern/kernel.asm	/^f010006a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	50                   	push   %eax$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	e8 ca ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100079	obj/kern/kernel.asm	/^f0100079:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	56                   	push   %esi$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	8d 83 b0 e9 fe ff    	lea    -0x11650(%ebx),%eax$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	50                   	push   %eax$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	e8 95 09 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	5b                   	pop    %ebx$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	5e                   	pop    %esi$/;"	l
f0100091	obj/kern/kernel.asm	/^f0100091:	5d                   	pop    %ebp$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c3                   	ret    $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100096	obj/kern/kernel.asm	/^f0100096:	6a 00                	push   $0x0$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	6a 00                	push   $0x0$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	6a 00                	push   $0x0$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	e8 b1 07 00 00       	call   f0100852 <mon_backtrace>$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	eb d3                	jmp    f0100079 <test_backtrace+0x39>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6 <i386_init>:$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	55                   	push   %ebp$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	53                   	push   %ebx$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	e8 0a 01 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	81 c3 9a 2f 01 00    	add    $0x12f9a,%ebx$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	c7 c2 60 30 11 f0    	mov    $0xf0113060,%edx$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 c0 a0 36 11 f0    	mov    $0xf01136a0,%eax$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	29 d0                	sub    %edx,%eax$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	50                   	push   %eax$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	6a 00                	push   $0x0$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	52                   	push   %edx$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	e8 c7 14 00 00       	call   f0101596 <memset>$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 10 05 00 00       	call   f01005e4 <cons_init>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	8d 83 cb e9 fe ff    	lea    -0x11635(%ebx),%eax$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	50                   	push   %eax$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	e8 36 09 00 00       	call   f0100a1e <cprintf>$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 4c ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	6a 00                	push   $0x0$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 57 07 00 00       	call   f0100858 <monitor>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	eb f1                	jmp    f01000f7 <i386_init+0x51>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106 <_panic>:$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	55                   	push   %ebp$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	89 e5                	mov    %esp,%ebp$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	57                   	push   %edi$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	56                   	push   %esi$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	53                   	push   %ebx$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	e8 a8 00 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	81 c3 38 2f 01 00    	add    $0x12f38,%ebx$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 c0 a4 36 11 f0    	mov    $0xf01136a4,%eax$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	74 0f                	je     f0100137 <_panic+0x31>$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	6a 00                	push   $0x0$/;"	l
f010012d	obj/kern/kernel.asm	/^f010012d:	e8 26 07 00 00       	call   f0100858 <monitor>$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	eb f1                	jmp    f0100128 <_panic+0x22>$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	89 38                	mov    %edi,(%eax)$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	fa                   	cli    $/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	fc                   	cld    $/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	8d 83 e6 e9 fe ff    	lea    -0x1161a(%ebx),%eax$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	50                   	push   %eax$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	e8 cb 08 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	56                   	push   %esi$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	57                   	push   %edi$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	e8 8a 08 00 00       	call   f01009e7 <vcprintf>$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	8d 83 22 ea fe ff    	lea    -0x115de(%ebx),%eax$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	e8 b3 08 00 00       	call   f0100a1e <cprintf>$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	eb b8                	jmp    f0100128 <_panic+0x22>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170 <_warn>:$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	55                   	push   %ebp$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	89 e5                	mov    %esp,%ebp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	56                   	push   %esi$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	53                   	push   %ebx$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 42 00 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	81 c3 d2 2e 01 00    	add    $0x12ed2,%ebx$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010018c	obj/kern/kernel.asm	/^f010018c:	8d 83 fe e9 fe ff    	lea    -0x11602(%ebx),%eax$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	50                   	push   %eax$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	e8 86 08 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	83 c4 08             	add    $0x8,%esp$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	56                   	push   %esi$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	e8 43 08 00 00       	call   f01009e7 <vcprintf>$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	8d 83 22 ea fe ff    	lea    -0x115de(%ebx),%eax$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	e8 6c 08 00 00       	call   f0100a1e <cprintf>$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	5b                   	pop    %ebx$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	5e                   	pop    %esi$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	5d                   	pop    %ebp$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	c3                   	ret    $/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc <__x86.get_pc_thunk.bx>:$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	c3                   	ret    $/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0 <serial_proc_data>:$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	ec                   	in     (%dx),%al$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	a8 01                	test   $0x1,%al$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	74 0a                	je     f01001d4 <serial_proc_data+0x14>$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	ec                   	in     (%dx),%al$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	c3                   	ret    $/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	c3                   	ret    $/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da <cons_intr>:$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	55                   	push   %ebp$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	89 e5                	mov    %esp,%ebp$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	56                   	push   %esi$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	53                   	push   %ebx$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	e8 d8 ff ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	81 c3 68 2e 01 00    	add    $0x12e68,%ebx$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	89 c6                	mov    %eax,%esi$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	ff d6                	call   *%esi$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	74 2a                	je     f010021d <cons_intr+0x43>$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	85 c0                	test   %eax,%eax$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	74 f5                	je     f01001ec <cons_intr+0x12>$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	8b 8b 38 02 00 00    	mov    0x238(%ebx),%ecx$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100200	obj/kern/kernel.asm	/^f0100200:	88 84 0b 34 00 00 00 	mov    %al,0x34(%ebx,%ecx,1)$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	89 93 38 02 00 00    	mov    %edx,0x238(%ebx)$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	eb cf                	jmp    f01001ec <cons_intr+0x12>$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	5b                   	pop    %ebx$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	5e                   	pop    %esi$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	5d                   	pop    %ebp$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	c3                   	ret    $/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221 <kbd_proc_data>:$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	55                   	push   %ebp$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	89 e5                	mov    %esp,%ebp$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	56                   	push   %esi$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	53                   	push   %ebx$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	e8 91 ff ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	81 c3 21 2e 01 00    	add    $0x12e21,%ebx$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	ec                   	in     (%dx),%al$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	a8 01                	test   $0x1,%al$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	0f 84 fb 00 00 00    	je     f010033a <kbd_proc_data+0x119>$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	a8 20                	test   $0x20,%al$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	0f 85 fa 00 00 00    	jne    f0100341 <kbd_proc_data+0x120>$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	ec                   	in     (%dx),%al$/;"	l
f010024d	obj/kern/kernel.asm	/^f010024d:	89 c2                	mov    %eax,%edx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	74 64                	je     f01002b7 <kbd_proc_data+0x96>$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	84 c0                	test   %al,%al$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	78 75                	js     f01002cc <kbd_proc_data+0xab>$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	8b 8b 14 00 00 00    	mov    0x14(%ebx),%ecx$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	74 0e                	je     f0100270 <kbd_proc_data+0x4f>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	89 c2                	mov    %eax,%edx$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	89 8b 14 00 00 00    	mov    %ecx,0x14(%ebx)$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	0f b6 84 13 54 eb fe 	movzbl -0x114ac(%ebx,%edx,1),%eax$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	ff $/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	0b 83 14 00 00 00    	or     0x14(%ebx),%eax$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	0f b6 8c 13 54 ea fe 	movzbl -0x115ac(%ebx,%edx,1),%ecx$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	ff $/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	31 c8                	xor    %ecx,%eax$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	89 83 14 00 00 00    	mov    %eax,0x14(%ebx)$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	89 c1                	mov    %eax,%ecx$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	8b 8c 8b b4 ff ff ff 	mov    -0x4c(%ebx,%ecx,4),%ecx$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	a8 08                	test   $0x8,%al$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	74 65                	je     f010030d <kbd_proc_data+0xec>$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	89 f2                	mov    %esi,%edx$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	8d 4e 9f             	lea    -0x61(%esi),%ecx$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	77 4f                	ja     f0100301 <kbd_proc_data+0xe0>$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	83 ee 20             	sub    $0x20,%esi$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	eb 0c                	jmp    f01002c3 <kbd_proc_data+0xa2>$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	83 8b 14 00 00 00 40 	orl    $0x40,0x14(%ebx)$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	89 f0                	mov    %esi,%eax$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	5b                   	pop    %ebx$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	5e                   	pop    %esi$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	5d                   	pop    %ebp$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	c3                   	ret    $/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	8b 8b 14 00 00 00    	mov    0x14(%ebx),%ecx$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	89 ce                	mov    %ecx,%esi$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	83 e6 40             	and    $0x40,%esi$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	85 f6                	test   %esi,%esi$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	0f b6 84 13 54 eb fe 	movzbl -0x114ac(%ebx,%edx,1),%eax$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	ff $/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	83 c8 40             	or     $0x40,%eax$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	f7 d0                	not    %eax$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	21 c8                	and    %ecx,%eax$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	89 83 14 00 00 00    	mov    %eax,0x14(%ebx)$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	eb c2                	jmp    f01002c3 <kbd_proc_data+0xa2>$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	8d 4e 20             	lea    0x20(%esi),%ecx$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	0f 42 f1             	cmovb  %ecx,%esi$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	f7 d0                	not    %eax$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	a8 06                	test   $0x6,%al$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	75 b0                	jne    f01002c3 <kbd_proc_data+0xa2>$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	81 fe e9 00 00 00    	cmp    $0xe9,%esi$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	75 a8                	jne    f01002c3 <kbd_proc_data+0xa2>$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	8d 83 18 ea fe ff    	lea    -0x115e8(%ebx),%eax$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	50                   	push   %eax$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	e8 f4 06 00 00       	call   f0100a1e <cprintf>$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	ee                   	out    %al,(%dx)$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	eb 89                	jmp    f01002c3 <kbd_proc_data+0xa2>$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	eb 82                	jmp    f01002c3 <kbd_proc_data+0xa2>$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	e9 78 ff ff ff       	jmp    f01002c3 <kbd_proc_data+0xa2>$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b <cons_putc>:$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	55                   	push   %ebp$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	89 e5                	mov    %esp,%ebp$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	57                   	push   %edi$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	56                   	push   %esi$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	53                   	push   %ebx$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	e8 63 fe ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	81 c3 f3 2c 01 00    	add    $0x12cf3,%ebx$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	89 c7                	mov    %eax,%edi$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	ec                   	in     (%dx),%al$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	a8 20                	test   $0x20,%al$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	75 13                	jne    f0100388 <cons_putc+0x3d>$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	7f 0b                	jg     f0100388 <cons_putc+0x3d>$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	89 ca                	mov    %ecx,%edx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	ec                   	in     (%dx),%al$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	ec                   	in     (%dx),%al$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	ec                   	in     (%dx),%al$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	ec                   	in     (%dx),%al$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	eb e3                	jmp    f010036b <cons_putc+0x20>$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	89 f8                	mov    %edi,%eax$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	ee                   	out    %al,(%dx)$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	ec                   	in     (%dx),%al$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	7f 0f                	jg     f01003ba <cons_putc+0x6f>$/;"	l
f01003ab	obj/kern/kernel.asm	/^f01003ab:	84 c0                	test   %al,%al$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	78 0b                	js     f01003ba <cons_putc+0x6f>$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	89 ca                	mov    %ecx,%edx$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	ec                   	in     (%dx),%al$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	ec                   	in     (%dx),%al$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	ec                   	in     (%dx),%al$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	ec                   	in     (%dx),%al$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	83 c6 01             	add    $0x1,%esi$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	eb e3                	jmp    f010039d <cons_putc+0x52>$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	ee                   	out    %al,(%dx)$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	ee                   	out    %al,(%dx)$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	ee                   	out    %al,(%dx)$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	89 fa                	mov    %edi,%edx$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	89 f8                	mov    %edi,%eax$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	80 cc 07             	or     $0x7,%ah$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	85 d2                	test   %edx,%edx$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	89 f8                	mov    %edi,%eax$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	0f 84 b4 00 00 00    	je     f01004a9 <cons_putc+0x15e>$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	7e 74                	jle    f010046b <cons_putc+0x120>$/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	0f 84 9c 00 00 00    	je     f010049c <cons_putc+0x151>$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	0f 85 d7 00 00 00    	jne    f01004e0 <cons_putc+0x195>$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	0f b7 83 3c 02 00 00 	movzwl 0x23c(%ebx),%eax$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	66 89 83 3c 02 00 00 	mov    %ax,0x23c(%ebx)$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	66 81 bb 3c 02 00 00 	cmpw   $0x7cf,0x23c(%ebx)$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	cf 07 $/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	0f 87 ce 00 00 00    	ja     f0100503 <cons_putc+0x1b8>$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	8b 8b 44 02 00 00    	mov    0x244(%ebx),%ecx$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	89 ca                	mov    %ecx,%edx$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	ee                   	out    %al,(%dx)$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	0f b7 9b 3c 02 00 00 	movzwl 0x23c(%ebx),%ebx$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	89 d8                	mov    %ebx,%eax$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	89 f2                	mov    %esi,%edx$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	ee                   	out    %al,(%dx)$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	89 ca                	mov    %ecx,%edx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	ee                   	out    %al,(%dx)$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	89 d8                	mov    %ebx,%eax$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	89 f2                	mov    %esi,%edx$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	ee                   	out    %al,(%dx)$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	5b                   	pop    %ebx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	5e                   	pop    %esi$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	5f                   	pop    %edi$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	5d                   	pop    %ebp$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	c3                   	ret    $/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	75 70                	jne    f01004e0 <cons_putc+0x195>$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	0f b7 83 3c 02 00 00 	movzwl 0x23c(%ebx),%eax$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	66 85 c0             	test   %ax,%ax$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	74 b9                	je     f0100435 <cons_putc+0xea>$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	66 89 83 3c 02 00 00 	mov    %ax,0x23c(%ebx)$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	89 fa                	mov    %edi,%edx$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	b2 00                	mov    $0x0,%dl$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	83 ca 20             	or     $0x20,%edx$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	8b 8b 40 02 00 00    	mov    0x240(%ebx),%ecx$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	eb 8a                	jmp    f0100426 <cons_putc+0xdb>$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	66 83 83 3c 02 00 00 	addw   $0x50,0x23c(%ebx)$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	50 $/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	e9 60 ff ff ff       	jmp    f0100409 <cons_putc+0xbe>$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	e8 98 fe ff ff       	call   f010034b <cons_putc>$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	e8 8e fe ff ff       	call   f010034b <cons_putc>$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	e8 84 fe ff ff       	call   f010034b <cons_putc>$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	e8 7a fe ff ff       	call   f010034b <cons_putc>$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	e8 70 fe ff ff       	call   f010034b <cons_putc>$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	e9 46 ff ff ff       	jmp    f0100426 <cons_putc+0xdb>$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	0f b7 83 3c 02 00 00 	movzwl 0x23c(%ebx),%eax$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	66 89 93 3c 02 00 00 	mov    %dx,0x23c(%ebx)$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	8b 93 40 02 00 00    	mov    0x240(%ebx),%edx$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	e9 23 ff ff ff       	jmp    f0100426 <cons_putc+0xdb>$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	8b 83 40 02 00 00    	mov    0x240(%ebx),%eax$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	52                   	push   %edx$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	50                   	push   %eax$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	e8 c0 10 00 00       	call   f01015de <memmove>$/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	8b 93 40 02 00 00    	mov    0x240(%ebx),%edx$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	83 c0 02             	add    $0x2,%eax$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	39 d0                	cmp    %edx,%eax$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	75 f4                	jne    f0100533 <cons_putc+0x1e8>$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	66 83 ab 3c 02 00 00 	subw   $0x50,0x23c(%ebx)$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	50 $/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	e9 e9 fe ff ff       	jmp    f0100435 <cons_putc+0xea>$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c <serial_intr>:$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	e8 dc 01 00 00       	call   f010072d <__x86.get_pc_thunk.ax>$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	05 fb 2a 01 00       	add    $0x12afb,%eax$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	80 b8 48 02 00 00 00 	cmpb   $0x0,0x248(%eax)$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	75 01                	jne    f0100560 <serial_intr+0x14>$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	c3                   	ret    $/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	55                   	push   %ebp$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	89 e5                	mov    %esp,%ebp$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	8d 80 74 d1 fe ff    	lea    -0x12e8c(%eax),%eax$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	e8 69 fc ff ff       	call   f01001da <cons_intr>$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	c9                   	leave  $/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	c3                   	ret    $/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573 <kbd_intr>:$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	55                   	push   %ebp$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	89 e5                	mov    %esp,%ebp$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	e8 af 01 00 00       	call   f010072d <__x86.get_pc_thunk.ax>$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	05 ce 2a 01 00       	add    $0x12ace,%eax$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	8d 80 d5 d1 fe ff    	lea    -0x12e2b(%eax),%eax$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	e8 4c fc ff ff       	call   f01001da <cons_intr>$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	c9                   	leave  $/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	c3                   	ret    $/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590 <cons_getc>:$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	55                   	push   %ebp$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	89 e5                	mov    %esp,%ebp$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	53                   	push   %ebx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	e8 20 fc ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	81 c3 b0 2a 01 00    	add    $0x12ab0,%ebx$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	e8 a5 ff ff ff       	call   f010054c <serial_intr>$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	e8 c7 ff ff ff       	call   f0100573 <kbd_intr>$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	8b 8b 34 02 00 00    	mov    0x234(%ebx),%ecx$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	3b 8b 38 02 00 00    	cmp    0x238(%ebx),%ecx$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	74 1f                	je     f01005de <cons_getc+0x4e>$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	0f b6 84 0b 34 00 00 	movzbl 0x34(%ebx,%ecx,1),%eax$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	00 $/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f01005d8	obj/kern/kernel.asm	/^f01005d8:	89 93 34 02 00 00    	mov    %edx,0x234(%ebx)$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	83 c4 04             	add    $0x4,%esp$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	5b                   	pop    %ebx$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	5d                   	pop    %ebp$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	c3                   	ret    $/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4 <cons_init>:$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	55                   	push   %ebp$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	57                   	push   %edi$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	56                   	push   %esi$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	53                   	push   %ebx$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	e8 ca fb ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	81 c3 5a 2a 01 00    	add    $0x12a5a,%ebx$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	5a a5 $/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	0f 84 bc 00 00 00    	je     f01006d5 <cons_init+0xf1>$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	c7 83 44 02 00 00 b4 	movl   $0x3b4,0x244(%ebx)$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	03 00 00 $/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	8b bb 44 02 00 00    	mov    0x244(%ebx),%edi$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	89 fa                	mov    %edi,%edx$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	ee                   	out    %al,(%dx)$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	89 ca                	mov    %ecx,%edx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	ec                   	in     (%dx),%al$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	89 fa                	mov    %edi,%edx$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	ee                   	out    %al,(%dx)$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	89 ca                	mov    %ecx,%edx$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	ec                   	in     (%dx),%al$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	89 bb 40 02 00 00    	mov    %edi,0x240(%ebx)$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	09 c6                	or     %eax,%esi$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	66 89 b3 3c 02 00 00 	mov    %si,0x23c(%ebx)$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	89 c8                	mov    %ecx,%eax$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	ee                   	out    %al,(%dx)$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	89 fa                	mov    %edi,%edx$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	ee                   	out    %al,(%dx)$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	ee                   	out    %al,(%dx)$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	89 c8                	mov    %ecx,%eax$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	89 f2                	mov    %esi,%edx$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	ee                   	out    %al,(%dx)$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	89 fa                	mov    %edi,%edx$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	ee                   	out    %al,(%dx)$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	89 c8                	mov    %ecx,%eax$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	ee                   	out    %al,(%dx)$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	89 f2                	mov    %esi,%edx$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	ee                   	out    %al,(%dx)$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	ec                   	in     (%dx),%al$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	89 c1                	mov    %eax,%ecx$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	3c ff                	cmp    $0xff,%al$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	0f 95 83 48 02 00 00 	setne  0x248(%ebx)$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	ec                   	in     (%dx),%al$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	ec                   	in     (%dx),%al$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	74 25                	je     f01006f2 <cons_init+0x10e>$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	5b                   	pop    %ebx$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	5e                   	pop    %esi$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	5f                   	pop    %edi$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	5d                   	pop    %ebp$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	c3                   	ret    $/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	c7 83 44 02 00 00 d4 	movl   $0x3d4,0x244(%ebx)$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	03 00 00 $/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	e9 38 ff ff ff       	jmp    f010062a <cons_init+0x46>$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	8d 83 24 ea fe ff    	lea    -0x115dc(%ebx),%eax$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	50                   	push   %eax$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	e8 1d 03 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	eb c7                	jmp    f01006cd <cons_init+0xe9>$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706 <cputchar>:$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	55                   	push   %ebp$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	89 e5                	mov    %esp,%ebp$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	e8 37 fc ff ff       	call   f010034b <cons_putc>$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	c9                   	leave  $/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	c3                   	ret    $/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716 <getchar>:$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	55                   	push   %ebp$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	89 e5                	mov    %esp,%ebp$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	e8 6f fe ff ff       	call   f0100590 <cons_getc>$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	85 c0                	test   %eax,%eax$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	74 f7                	je     f010071c <getchar+0x6>$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	c9                   	leave  $/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	c3                   	ret    $/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727 <iscons>:$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	c3                   	ret    $/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d <__x86.get_pc_thunk.ax>:$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	c3                   	ret    $/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731 <mon_help>:$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	55                   	push   %ebp$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	89 e5                	mov    %esp,%ebp$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	56                   	push   %esi$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	53                   	push   %ebx$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	e8 81 fa ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	81 c3 11 29 01 00    	add    $0x12911,%ebx$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	8d 83 54 ec fe ff    	lea    -0x113ac(%ebx),%eax$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	50                   	push   %eax$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	8d 83 72 ec fe ff    	lea    -0x1138e(%ebx),%eax$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	50                   	push   %eax$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	8d b3 77 ec fe ff    	lea    -0x11389(%ebx),%esi$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	56                   	push   %esi$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	e8 c0 02 00 00       	call   f0100a1e <cprintf>$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	8d 83 e0 ec fe ff    	lea    -0x11320(%ebx),%eax$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	50                   	push   %eax$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	8d 83 80 ec fe ff    	lea    -0x11380(%ebx),%eax$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	50                   	push   %eax$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	56                   	push   %esi$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	e8 a9 02 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	5b                   	pop    %ebx$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	5e                   	pop    %esi$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	5d                   	pop    %ebp$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	c3                   	ret    $/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781 <mon_kerninfo>:$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	55                   	push   %ebp$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	89 e5                	mov    %esp,%ebp$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	57                   	push   %edi$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	56                   	push   %esi$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	53                   	push   %ebx$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	e8 2d fa ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	81 c3 bd 28 01 00    	add    $0x128bd,%ebx$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	8d 83 89 ec fe ff    	lea    -0x11377(%ebx),%eax$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	50                   	push   %eax$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	e8 7d 02 00 00       	call   f0100a1e <cprintf>$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	8d 83 08 ed fe ff    	lea    -0x112f8(%ebx),%eax$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	50                   	push   %eax$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	e8 68 02 00 00       	call   f0100a1e <cprintf>$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edi$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eax$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	50                   	push   %eax$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	57                   	push   %edi$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	8d 83 30 ed fe ff    	lea    -0x112d0(%ebx),%eax$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	50                   	push   %eax$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	e8 4b 02 00 00       	call   f0100a1e <cprintf>$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c7 c0 df 19 10 f0    	mov    $0xf01019df,%eax$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	52                   	push   %edx$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	50                   	push   %eax$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	8d 83 54 ed fe ff    	lea    -0x112ac(%ebx),%eax$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	50                   	push   %eax$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	e8 2e 02 00 00       	call   f0100a1e <cprintf>$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	c7 c0 60 30 11 f0    	mov    $0xf0113060,%eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	52                   	push   %edx$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	50                   	push   %eax$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	8d 83 78 ed fe ff    	lea    -0x11288(%ebx),%eax$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	50                   	push   %eax$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	e8 11 02 00 00       	call   f0100a1e <cprintf>$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	c7 c6 a0 36 11 f0    	mov    $0xf01136a0,%esi$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	50                   	push   %eax$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	56                   	push   %esi$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	8d 83 9c ed fe ff    	lea    -0x11264(%ebx),%eax$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	50                   	push   %eax$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	e8 f4 01 00 00       	call   f0100a1e <cprintf>$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	29 fe                	sub    %edi,%esi$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	81 c6 ff 03 00 00    	add    $0x3ff,%esi$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	c1 fe 0a             	sar    $0xa,%esi$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	56                   	push   %esi$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	8d 83 c0 ed fe ff    	lea    -0x11240(%ebx),%eax$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	50                   	push   %eax$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	e8 d9 01 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	5b                   	pop    %ebx$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	5e                   	pop    %esi$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	5f                   	pop    %edi$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	5d                   	pop    %ebp$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	c3                   	ret    $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852 <mon_backtrace>:$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	c3                   	ret    $/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858 <monitor>:$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	55                   	push   %ebp$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	89 e5                	mov    %esp,%ebp$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	57                   	push   %edi$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	56                   	push   %esi$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	53                   	push   %ebx$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	83 ec 68             	sub    $0x68,%esp$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	e8 56 f9 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	81 c3 e6 27 01 00    	add    $0x127e6,%ebx$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	8d 83 ec ed fe ff    	lea    -0x11214(%ebx),%eax$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	50                   	push   %eax$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	e8 a6 01 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	8d 83 10 ee fe ff    	lea    -0x111f0(%ebx),%eax$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	e8 98 01 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	8d 83 a6 ec fe ff    	lea    -0x1135a(%ebx),%eax$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	e9 dc 00 00 00       	jmp    f0100973 <monitor+0x11b>$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	0f be c0             	movsbl %al,%eax$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	50                   	push   %eax$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	ff 75 a0             	pushl  -0x60(%ebp)$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	e8 b3 0c 00 00       	call   f0101559 <strchr>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	85 c0                	test   %eax,%eax$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	74 74                	je     f0100921 <monitor+0xc9>$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	89 7d a4             	mov    %edi,-0x5c(%ebp)$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	8b 7d a4             	mov    -0x5c(%ebp),%edi$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	84 c0                	test   %al,%al$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	75 d7                	jne    f0100897 <monitor+0x3f>$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	c7 44 bd a8 00 00 00 	movl   $0x0,-0x58(%ebp,%edi,4)$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	00 $/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	85 ff                	test   %edi,%edi$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	0f 84 a3 00 00 00    	je     f0100973 <monitor+0x11b>$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	8d 83 72 ec fe ff    	lea    -0x1138e(%ebx),%eax$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	50                   	push   %eax$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	e8 19 0c 00 00       	call   f01014fb <strcmp>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	85 c0                	test   %eax,%eax$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	0f 84 b4 00 00 00    	je     f01009a1 <monitor+0x149>$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	8d 83 80 ec fe ff    	lea    -0x11380(%ebx),%eax$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	50                   	push   %eax$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	e8 fc 0b 00 00       	call   f01014fb <strcmp>$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	85 c0                	test   %eax,%eax$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	0f 84 92 00 00 00    	je     f010099c <monitor+0x144>$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	8d 83 c8 ec fe ff    	lea    -0x11338(%ebx),%eax$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	50                   	push   %eax$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	e8 02 01 00 00       	call   f0100a1e <cprintf>$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	eb 52                	jmp    f0100973 <monitor+0x11b>$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	80 3e 00             	cmpb   $0x0,(%esi)$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	74 9a                	je     f01008c0 <monitor+0x68>$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	83 ff 0f             	cmp    $0xf,%edi$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	74 34                	je     f010095f <monitor+0x107>$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	89 74 bd a8          	mov    %esi,-0x58(%ebp,%edi,4)$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	84 c0                	test   %al,%al$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	0f 84 76 ff ff ff    	je     f01008b6 <monitor+0x5e>$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	0f be c0             	movsbl %al,%eax$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	50                   	push   %eax$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	ff 75 a0             	pushl  -0x60(%ebp)$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	e8 0a 0c 00 00       	call   f0101559 <strchr>$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	85 c0                	test   %eax,%eax$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	0f 85 5c ff ff ff    	jne    f01008b6 <monitor+0x5e>$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	83 c6 01             	add    $0x1,%esi$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	eb d6                	jmp    f0100935 <monitor+0xdd>$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	6a 10                	push   $0x10$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	8d 83 ab ec fe ff    	lea    -0x11355(%ebx),%eax$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	50                   	push   %eax$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	e8 ae 00 00 00       	call   f0100a1e <cprintf>$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	8d bb a2 ec fe ff    	lea    -0x1135e(%ebx),%edi$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	57                   	push   %edi$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	e8 98 09 00 00       	call   f010131a <readline>$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	89 c6                	mov    %eax,%esi$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	85 c0                	test   %eax,%eax$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	74 ee                	je     f0100979 <monitor+0x121>$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	e9 1d ff ff ff       	jmp    f01008b9 <monitor+0x61>$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	52                   	push   %edx$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	57                   	push   %edi$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	ff 94 83 cc ff ff ff 	call   *-0x34(%ebx,%eax,4)$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	85 c0                	test   %eax,%eax$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	79 b6                	jns    f0100973 <monitor+0x11b>$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	5b                   	pop    %ebx$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	5e                   	pop    %esi$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	5f                   	pop    %edi$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	5d                   	pop    %ebp$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	c3                   	ret    $/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5 <putch>:$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	55                   	push   %ebp$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	53                   	push   %ebx$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	e8 eb f7 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	81 c3 7b 26 01 00    	add    $0x1267b,%ebx$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	e8 27 fd ff ff       	call   f0100706 <cputchar>$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	c9                   	leave  $/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	c3                   	ret    $/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7 <vcprintf>:$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	55                   	push   %ebp$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	53                   	push   %ebx$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	e8 c9 f7 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	81 c3 59 26 01 00    	add    $0x12659,%ebx$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	50                   	push   %eax$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	8d 83 79 d9 fe ff    	lea    -0x12687(%ebx),%eax$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	50                   	push   %eax$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	e8 17 04 00 00       	call   f0100e2d <vprintfmt>$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	c9                   	leave  $/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	c3                   	ret    $/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e <cprintf>:$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	55                   	push   %ebp$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	50                   	push   %eax$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	e8 b7 ff ff ff       	call   f01009e7 <vcprintf>$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	c9                   	leave  $/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	c3                   	ret    $/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32 <stab_binsearch>:$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	55                   	push   %ebp$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	57                   	push   %edi$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	56                   	push   %esi$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	53                   	push   %ebx$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	eb 23                	jmp    f0100a7a <stab_binsearch+0x48>$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	eb 1e                	jmp    f0100a7a <stab_binsearch+0x48>$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	73 41                	jae    f0100aac <stab_binsearch+0x7a>$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	7f 5a                	jg     f0100ad9 <stab_binsearch+0xa7>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	01 d8                	add    %ebx,%eax$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	89 c7                	mov    %eax,%edi$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	01 c7                	add    %eax,%edi$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	d1 ff                	sar    %edi$/;"	d
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	89 f8                	mov    %edi,%eax$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	7f ba                	jg     f0100a57 <stab_binsearch+0x25>$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	39 f1                	cmp    %esi,%ecx$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	74 b5                	je     f0100a5c <stab_binsearch+0x2a>$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	eb ed                	jmp    f0100a99 <stab_binsearch+0x67>$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	76 14                	jbe    f0100ac5 <stab_binsearch+0x93>$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	89 07                	mov    %eax,(%edi)$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	eb b5                	jmp    f0100a7a <stab_binsearch+0x48>$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	89 07                	mov    %eax,(%edi)$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	eb a1                	jmp    f0100a7a <stab_binsearch+0x48>$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	75 15                	jne    f0100af4 <stab_binsearch+0xc2>$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	89 06                	mov    %eax,(%esi)$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	5b                   	pop    %ebx$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	5e                   	pop    %esi$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	5f                   	pop    %edi$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	5d                   	pop    %ebp$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	c3                   	ret    $/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	8b 00                	mov    (%eax),%eax$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	eb 03                	jmp    f0100b0d <stab_binsearch+0xdb>$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	7d 0a                	jge    f0100b1b <stab_binsearch+0xe9>$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	75 ef                	jne    f0100b0a <stab_binsearch+0xd8>$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	89 06                	mov    %eax,(%esi)$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	eb ca                	jmp    f0100aec <stab_binsearch+0xba>$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22 <debuginfo_eip>:$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	55                   	push   %ebp$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	57                   	push   %edi$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	56                   	push   %esi$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	53                   	push   %ebx$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	e8 fa 01 00 00       	call   f0100d2a <__x86.get_pc_thunk.cx>$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	81 c1 1c 25 01 00    	add    $0x1251c,%ecx$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	8d 81 38 ee fe ff    	lea    -0x111c8(%ecx),%eax$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	89 07                	mov    %eax,(%edi)$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	89 47 08             	mov    %eax,0x8(%edi)$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	89 5f 10             	mov    %ebx,0x10(%edi)$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	0f 86 f4 00 00 00    	jbe    f0100c62 <debuginfo_eip+0x140>$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	c7 c0 a1 62 10 f0    	mov    $0xf01062a1,%eax$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	39 81 fc ff ff ff    	cmp    %eax,-0x4(%ecx)$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	0f 86 88 01 00 00    	jbe    f0100d08 <debuginfo_eip+0x1e6>$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	c7 c0 11 7c 10 f0    	mov    $0xf0107c11,%eax$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	0f 85 7c 01 00 00    	jne    f0100d0f <debuginfo_eip+0x1ed>$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	c7 c0 a0 20 10 f0    	mov    $0xf01020a0,%eax$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	c7 c2 a0 62 10 f0    	mov    $0xf01062a0,%edx$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	29 c2                	sub    %eax,%edx$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	53                   	push   %ebx$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	6a 64                	push   $0x64$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	e8 6a fe ff ff       	call   f0100a32 <stab_binsearch>$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	85 c0                	test   %eax,%eax$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	0f 84 40 01 00 00    	je     f0100d16 <debuginfo_eip+0x1f4>$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	53                   	push   %ebx$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	6a 24                	push   $0x24$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	c7 c0 a0 20 10 f0    	mov    $0xf01020a0,%eax$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	e8 39 fe ff ff       	call   f0100a32 <stab_binsearch>$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	3b 75 d8             	cmp    -0x28(%ebp),%esi$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	7f 79                	jg     f0100c7d <debuginfo_eip+0x15b>$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	c7 c2 a0 20 10 f0    	mov    $0xf01020a0,%edx$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	8d 0c 82             	lea    (%edx,%eax,4),%ecx$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	8b 11                	mov    (%ecx),%edx$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	c7 c0 11 7c 10 f0    	mov    $0xf0107c11,%eax$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	81 e8 a1 62 10 f0    	sub    $0xf01062a1,%eax$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	39 c2                	cmp    %eax,%edx$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	73 09                	jae    f0100c2e <debuginfo_eip+0x10c>$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	81 c2 a1 62 10 f0    	add    $0xf01062a1,%edx$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	89 57 08             	mov    %edx,0x8(%edi)$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	8b 41 08             	mov    0x8(%ecx),%eax$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	89 47 10             	mov    %eax,0x10(%edi)$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	6a 3a                	push   $0x3a$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	e8 36 09 00 00       	call   f010157a <strfind>$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	c7 c2 a0 20 10 f0    	mov    $0xf01020a0,%edx$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	8d 44 82 04          	lea    0x4(%edx,%eax,4),%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	eb 29                	jmp    f0100c8b <debuginfo_eip+0x169>$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	8d 83 42 ee fe ff    	lea    -0x111be(%ebx),%eax$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	50                   	push   %eax$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	6a 7f                	push   $0x7f$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	8d 83 4f ee fe ff    	lea    -0x111b1(%ebx),%eax$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	50                   	push   %eax$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	e8 89 f4 ff ff       	call   f0100106 <_panic>$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	89 5f 10             	mov    %ebx,0x10(%edi)$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	eb af                	jmp    f0100c34 <debuginfo_eip+0x112>$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	7f 3a                	jg     f0100cc9 <debuginfo_eip+0x1a7>$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	74 0b                	je     f0100ca2 <debuginfo_eip+0x180>$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	75 e9                	jne    f0100c85 <debuginfo_eip+0x163>$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	83 78 04 00          	cmpl   $0x0,0x4(%eax)$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	74 e3                	je     f0100c85 <debuginfo_eip+0x163>$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	8d 14 76             	lea    (%esi,%esi,2),%edx$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	c7 c0 a0 20 10 f0    	mov    $0xf01020a0,%eax$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	8b 14 90             	mov    (%eax,%edx,4),%edx$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	c7 c0 11 7c 10 f0    	mov    $0xf0107c11,%eax$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	81 e8 a1 62 10 f0    	sub    $0xf01062a1,%eax$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	39 c2                	cmp    %eax,%edx$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	73 08                	jae    f0100cc9 <debuginfo_eip+0x1a7>$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	81 c2 a1 62 10 f0    	add    $0xf01062a1,%edx$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	89 17                	mov    %edx,(%edi)$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	7d 4a                	jge    f0100d22 <debuginfo_eip+0x200>$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	8d 1c 5b             	lea    (%ebx,%ebx,2),%ebx$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	c7 c0 a0 20 10 f0    	mov    $0xf01020a0,%eax$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	8d 44 98 10          	lea    0x10(%eax,%ebx,4),%eax$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	eb 07                	jmp    f0100cf4 <debuginfo_eip+0x1d2>$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	74 25                	je     f0100d1d <debuginfo_eip+0x1fb>$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	74 ec                	je     f0100ced <debuginfo_eip+0x1cb>$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	eb 1a                	jmp    f0100d22 <debuginfo_eip+0x200>$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	eb 13                	jmp    f0100d22 <debuginfo_eip+0x200>$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	eb 0c                	jmp    f0100d22 <debuginfo_eip+0x200>$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	eb 05                	jmp    f0100d22 <debuginfo_eip+0x200>$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	5b                   	pop    %ebx$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	5e                   	pop    %esi$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	5f                   	pop    %edi$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	5d                   	pop    %ebp$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	c3                   	ret    $/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a <__x86.get_pc_thunk.cx>:$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	c3                   	ret    $/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e <printnum>:$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	55                   	push   %ebp$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	57                   	push   %edi$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	56                   	push   %esi$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	53                   	push   %ebx$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	e8 ee ff ff ff       	call   f0100d2a <__x86.get_pc_thunk.cx>$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	81 c1 10 23 01 00    	add    $0x12310,%ecx$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	89 c7                	mov    %eax,%edi$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	89 d6                	mov    %edx,%esi$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	89 d0                	mov    %edx,%eax$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	1b 45 e4             	sbb    -0x1c(%ebp),%eax$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	73 15                	jae    f0100d85 <printnum+0x57>$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	85 db                	test   %ebx,%ebx$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	7e 46                	jle    f0100dbd <printnum+0x8f>$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	56                   	push   %esi$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	ff d7                	call   *%edi$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	eb eb                	jmp    f0100d70 <printnum+0x42>$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	53                   	push   %ebx$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	e8 e4 09 00 00       	call   f0101790 <__udivdi3>$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	52                   	push   %edx$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	50                   	push   %eax$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	89 f2                	mov    %esi,%edx$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	89 f8                	mov    %edi,%eax$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	e8 74 ff ff ff       	call   f0100d2e <printnum>$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	56                   	push   %esi$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	89 f3                	mov    %esi,%ebx$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	e8 c6 0a 00 00       	call   f01018a0 <__umoddi3>$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	0f be 84 06 5d ee fe 	movsbl -0x111a3(%esi,%eax,1),%eax$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	ff $/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	50                   	push   %eax$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	ff d7                	call   *%edi$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	5b                   	pop    %ebx$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	5e                   	pop    %esi$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	5f                   	pop    %edi$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	5d                   	pop    %ebp$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	c3                   	ret    $/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3 <sprintputch>:$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	55                   	push   %ebp$/;"	l
f0100df4	obj/kern/kernel.asm	/^f0100df4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	8b 10                	mov    (%eax),%edx$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	73 0a                	jae    f0100e0e <sprintputch+0x1b>$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	88 02                	mov    %al,(%edx)$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	5d                   	pop    %ebp$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	c3                   	ret    $/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10 <printfmt>:$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	55                   	push   %ebp$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	50                   	push   %eax$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	e8 05 00 00 00       	call   f0100e2d <vprintfmt>$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	c9                   	leave  $/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	c3                   	ret    $/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d <vprintfmt>:$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	55                   	push   %ebp$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	57                   	push   %edi$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	56                   	push   %esi$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	53                   	push   %ebx$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	e8 f2 f8 ff ff       	call   f010072d <__x86.get_pc_thunk.ax>$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	05 11 22 01 00       	add    $0x12211,%eax$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	e9 99 03 00 00       	jmp    f01011ea <.L26+0x48>$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	c6 45 cf 20          	movb   $0x20,-0x31(%ebp)$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	3c 55                	cmp    $0x55,%al$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	0f 87 ed 03 00 00    	ja     f0101276 <.L21>$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	89 ce                	mov    %ecx,%esi$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	03 b4 81 ec ee fe ff 	add    -0x11114(%ecx,%eax,4),%esi$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	ff e6                	jmp    *%esi$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a <.L66>:$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	c6 45 cf 2d          	movb   $0x2d,-0x31(%ebp)$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	eb d2                	jmp    f0100e75 <vprintfmt+0x48>$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3 <.L33>:$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	c6 45 cf 30          	movb   $0x30,-0x31(%ebp)$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	eb c9                	jmp    f0100e75 <vprintfmt+0x48>$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac <.L32>:$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	0f be 13             	movsbl (%ebx),%edx$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	77 58                	ja     f0100f24 <.L37+0xf>$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	eb e9                	jmp    f0100eba <.L32+0xe>$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1 <.L35>:$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	79 8a                	jns    f0100e75 <vprintfmt+0x48>$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	e9 78 ff ff ff       	jmp    f0100e75 <vprintfmt+0x48>$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd <.L34>:$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	85 c0                	test   %eax,%eax$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	e9 60 ff ff ff       	jmp    f0100e75 <vprintfmt+0x48>$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15 <.L37>:$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	e9 51 ff ff ff       	jmp    f0100e75 <vprintfmt+0x48>$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	eb b9                	jmp    f0100ee5 <.L35+0x14>$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c <.L28>:$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	e9 3d ff ff ff       	jmp    f0100e75 <vprintfmt+0x48>$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38 <.L31>:$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	8d 58 04             	lea    0x4(%eax),%ebx$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	57                   	push   %edi$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	ff 30                	pushl  (%eax)$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	ff d6                	call   *%esi$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	e9 93 02 00 00       	jmp    f01011e7 <.L26+0x45>$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54 <.L29>:$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	8d 58 04             	lea    0x4(%eax),%ebx$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	99                   	cltd   $/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	31 d0                	xor    %edx,%eax$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	29 d0                	sub    %edx,%eax$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	7f 2b                	jg     f0100f94 <.L29+0x40>$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	8b 94 82 dc ff ff ff 	mov    -0x24(%edx,%eax,4),%edx$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	85 d2                	test   %edx,%edx$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	74 1d                	je     f0100f94 <.L29+0x40>$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	52                   	push   %edx$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	8d 80 7e ee fe ff    	lea    -0x11182(%eax),%eax$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	50                   	push   %eax$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	57                   	push   %edi$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	56                   	push   %esi$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	e8 87 fe ff ff       	call   f0100e10 <printfmt>$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	e9 53 02 00 00       	jmp    f01011e7 <.L26+0x45>$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	50                   	push   %eax$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	8d 80 75 ee fe ff    	lea    -0x1118b(%eax),%eax$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	50                   	push   %eax$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	57                   	push   %edi$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	56                   	push   %esi$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	e8 6a fe ff ff       	call   f0100e10 <printfmt>$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	e9 36 02 00 00       	jmp    f01011e7 <.L26+0x45>$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1 <.L25>:$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	8b 10                	mov    (%eax),%edx$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	85 d2                	test   %edx,%edx$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	8d 80 6e ee fe ff    	lea    -0x11192(%eax),%eax$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	7e 06                	jle    f0100fdf <.L25+0x2e>$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	80 7d cf 2d          	cmpb   $0x2d,-0x31(%ebp)$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	75 0d                	jne    f0100fec <.L25+0x3b>$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	89 c3                	mov    %eax,%ebx$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	03 45 d0             	add    -0x30(%ebp),%eax$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	eb 42                	jmp    f010102e <.L25+0x7d>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	50                   	push   %eax$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	e8 34 04 00 00       	call   f010142f <strnlen>$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	29 c2                	sub    %eax,%edx$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	89 d3                	mov    %edx,%ebx$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	0f be 45 cf          	movsbl -0x31(%ebp),%eax$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	85 db                	test   %ebx,%ebx$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	7e 58                	jle    f010106b <.L25+0xba>$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	57                   	push   %edi$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	ff d6                	call   *%esi$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	eb eb                	jmp    f010100f <.L25+0x5e>$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	57                   	push   %edi$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	52                   	push   %edx$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	ff d6                	call   *%esi$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	29 d9                	sub    %ebx,%ecx$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	0f be d0             	movsbl %al,%edx$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	85 d2                	test   %edx,%edx$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	74 45                	je     f0101086 <.L25+0xd5>$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	78 06                	js     f010104d <.L25+0x9c>$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	83 6d d8 01          	subl   $0x1,-0x28(%ebp)$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	78 35                	js     f0101082 <.L25+0xd1>$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	74 d1                	je     f0101024 <.L25+0x73>$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	0f be c0             	movsbl %al,%eax$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	76 c6                	jbe    f0101024 <.L25+0x73>$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	57                   	push   %edi$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	6a 3f                	push   $0x3f$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	ff d6                	call   *%esi$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	eb c3                	jmp    f010102e <.L25+0x7d>$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	85 d2                	test   %edx,%edx$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	29 c2                	sub    %eax,%edx$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	e9 5d ff ff ff       	jmp    f0100fdf <.L25+0x2e>$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	89 cb                	mov    %ecx,%ebx$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	eb 02                	jmp    f0101088 <.L25+0xd7>$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	89 cb                	mov    %ecx,%ebx$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	85 db                	test   %ebx,%ebx$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	7e 10                	jle    f010109c <.L25+0xeb>$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	57                   	push   %edi$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	6a 20                	push   $0x20$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	ff d6                	call   *%esi$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	83 c4 10             	add    $0x10,%esp$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	eb ec                	jmp    f0101088 <.L25+0xd7>$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	e9 40 01 00 00       	jmp    f01011e7 <.L26+0x45>$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7 <.L30>:$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	7f 1b                	jg     f01010cd <.L30+0x26>$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	85 c9                	test   %ecx,%ecx$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	74 63                	je     f0101119 <.L30+0x72>$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	8b 00                	mov    (%eax),%eax$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	99                   	cltd   $/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	eb 17                	jmp    f01010e4 <.L30+0x3d>$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	8b 00                	mov    (%eax),%eax$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	85 c9                	test   %ecx,%ecx$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	0f 89 d6 00 00 00    	jns    f01011cd <.L26+0x2b>$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	57                   	push   %edi$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	6a 2d                	push   $0x2d$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	ff d6                	call   *%esi$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	f7 da                	neg    %edx$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	f7 d9                	neg    %ecx$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	e9 b4 00 00 00       	jmp    f01011cd <.L26+0x2b>$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	8b 00                	mov    (%eax),%eax$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	99                   	cltd   $/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	eb b4                	jmp    f01010e4 <.L30+0x3d>$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130 <.L24>:$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	7f 1b                	jg     f0101156 <.L24+0x26>$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	85 c9                	test   %ecx,%ecx$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	74 2c                	je     f010116b <.L24+0x3b>$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	8b 10                	mov    (%eax),%edx$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	eb 77                	jmp    f01011cd <.L26+0x2b>$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	8b 10                	mov    (%eax),%edx$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	eb 62                	jmp    f01011cd <.L26+0x2b>$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	8b 10                	mov    (%eax),%edx$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	eb 4b                	jmp    f01011cd <.L26+0x2b>$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182 <.L27>:$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	57                   	push   %edi$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	6a 58                	push   $0x58$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	ff d6                	call   *%esi$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	57                   	push   %edi$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	6a 58                	push   $0x58$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	ff d6                	call   *%esi$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	57                   	push   %edi$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	6a 58                	push   $0x58$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	ff d6                	call   *%esi$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	eb 45                	jmp    f01011e7 <.L26+0x45>$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2 <.L26>:$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	57                   	push   %edi$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	6a 30                	push   $0x30$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	ff d6                	call   *%esi$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	57                   	push   %edi$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	6a 78                	push   $0x78$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	ff d6                	call   *%esi$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	8b 10                	mov    (%eax),%edx$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	0f be 5d cf          	movsbl -0x31(%ebp),%ebx$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	53                   	push   %ebx$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	50                   	push   %eax$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	51                   	push   %ecx$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	52                   	push   %edx$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	89 fa                	mov    %edi,%edx$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	89 f0                	mov    %esi,%eax$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	e8 4a fb ff ff       	call   f0100d2e <printnum>$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	0f 84 57 fc ff ff    	je     f0100e51 <vprintfmt+0x24>$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	85 c0                	test   %eax,%eax$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	0f 84 97 00 00 00    	je     f0101299 <.L21+0x23>$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	57                   	push   %edi$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	50                   	push   %eax$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	ff d6                	call   *%esi$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	83 c4 10             	add    $0x10,%esp$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	eb dc                	jmp    f01011ea <.L26+0x48>$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e <.L22>:$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	7f 1b                	jg     f0101234 <.L22+0x26>$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	85 c9                	test   %ecx,%ecx$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	74 2c                	je     f0101249 <.L22+0x3b>$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	8b 10                	mov    (%eax),%edx$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	eb 99                	jmp    f01011cd <.L26+0x2b>$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	8b 10                	mov    (%eax),%edx$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	eb 84                	jmp    f01011cd <.L26+0x2b>$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	8b 10                	mov    (%eax),%edx$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	e9 6a ff ff ff       	jmp    f01011cd <.L26+0x2b>$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263 <.L36>:$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	57                   	push   %edi$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	6a 25                	push   $0x25$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	ff d6                	call   *%esi$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	e9 71 ff ff ff       	jmp    f01011e7 <.L26+0x45>$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276 <.L21>:$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	57                   	push   %edi$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	6a 25                	push   $0x25$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	ff d6                	call   *%esi$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	89 d8                	mov    %ebx,%eax$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	eb 03                	jmp    f010128b <.L21+0x15>$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	75 f7                	jne    f0101288 <.L21+0x12>$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	e9 4e ff ff ff       	jmp    f01011e7 <.L26+0x45>$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	5b                   	pop    %ebx$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	5e                   	pop    %esi$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	5f                   	pop    %edi$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	5d                   	pop    %ebp$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	c3                   	ret    $/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1 <vsnprintf>:$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	55                   	push   %ebp$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	53                   	push   %ebx$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	e8 0f ef ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	81 c3 9f 1d 01 00    	add    $0x11d9f,%ebx$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	85 c0                	test   %eax,%eax$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	74 2b                	je     f01012f9 <vsnprintf+0x58>$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	85 d2                	test   %edx,%edx$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	7e 27                	jle    f01012f9 <vsnprintf+0x58>$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	50                   	push   %eax$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	8d 83 a7 dd fe ff    	lea    -0x12259(%ebx),%eax$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	50                   	push   %eax$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	e8 45 fb ff ff       	call   f0100e2d <vprintfmt>$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	c9                   	leave  $/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	c3                   	ret    $/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	eb f4                	jmp    f01012f4 <vsnprintf+0x53>$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300 <snprintf>:$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	55                   	push   %ebp$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	89 e5                	mov    %esp,%ebp$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	50                   	push   %eax$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	e8 89 ff ff ff       	call   f01012a1 <vsnprintf>$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	c9                   	leave  $/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	c3                   	ret    $/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a <readline>:$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	55                   	push   %ebp$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	89 e5                	mov    %esp,%ebp$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	57                   	push   %edi$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	56                   	push   %esi$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	53                   	push   %ebx$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	e8 94 ee ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	81 c3 24 1d 01 00    	add    $0x11d24,%ebx$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	85 c0                	test   %eax,%eax$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	74 13                	je     f0101348 <readline+0x2e>$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	50                   	push   %eax$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	8d 83 7e ee fe ff    	lea    -0x11182(%ebx),%eax$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	50                   	push   %eax$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	e8 d9 f6 ff ff       	call   f0100a1e <cprintf>$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	6a 00                	push   $0x0$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	e8 d5 f3 ff ff       	call   f0100727 <iscons>$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	eb 52                	jmp    f01013b1 <readline+0x97>$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	50                   	push   %eax$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	8d 83 44 f0 fe ff    	lea    -0x10fbc(%ebx),%eax$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	50                   	push   %eax$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	e8 af f6 ff ff       	call   f0100a1e <cprintf>$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	5b                   	pop    %ebx$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	5e                   	pop    %esi$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	5f                   	pop    %edi$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	5d                   	pop    %ebp$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	c3                   	ret    $/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	75 05                	jne    f010138a <readline+0x70>$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	eb 27                	jmp    f01013b1 <readline+0x97>$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	6a 08                	push   $0x8$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	e8 72 f3 ff ff       	call   f0100706 <cputchar>$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	eb ec                	jmp    f0101385 <readline+0x6b>$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	56                   	push   %esi$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	e8 64 f3 ff ff       	call   f0100706 <cputchar>$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	89 f0                	mov    %esi,%eax$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	88 84 3b 54 02 00 00 	mov    %al,0x254(%ebx,%edi,1)$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	8d 7f 01             	lea    0x1(%edi),%edi$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	e8 60 f3 ff ff       	call   f0100716 <getchar>$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	89 c6                	mov    %eax,%esi$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	85 c0                	test   %eax,%eax$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	78 a3                	js     f010135f <readline+0x45>$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	0f 94 c2             	sete   %dl$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	0f 94 c0             	sete   %al$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	08 c2                	or     %al,%dl$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	74 04                	je     f01013d0 <readline+0xb6>$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	85 ff                	test   %edi,%edi$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	7f af                	jg     f010137f <readline+0x65>$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	83 fe 1f             	cmp    $0x1f,%esi$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	7e 10                	jle    f01013e5 <readline+0xcb>$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	81 ff fe 03 00 00    	cmp    $0x3fe,%edi$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	7f 08                	jg     f01013e5 <readline+0xcb>$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	74 c2                	je     f01013a5 <readline+0x8b>$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	eb b4                	jmp    f0101399 <readline+0x7f>$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	74 05                	je     f01013ef <readline+0xd5>$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	83 fe 0d             	cmp    $0xd,%esi$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	75 c2                	jne    f01013b1 <readline+0x97>$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	75 13                	jne    f0101408 <readline+0xee>$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	c6 84 3b 54 02 00 00 	movb   $0x0,0x254(%ebx,%edi,1)$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	00 $/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	8d 83 54 02 00 00    	lea    0x254(%ebx),%eax$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	e9 6f ff ff ff       	jmp    f0101377 <readline+0x5d>$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	6a 0a                	push   $0xa$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	e8 f4 f2 ff ff       	call   f0100706 <cputchar>$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	eb de                	jmp    f01013f5 <readline+0xdb>$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417 <strlen>:$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	55                   	push   %ebp$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	89 e5                	mov    %esp,%ebp$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	74 05                	je     f010142d <strlen+0x16>$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	83 c0 01             	add    $0x1,%eax$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	eb f5                	jmp    f0101422 <strlen+0xb>$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	5d                   	pop    %ebp$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	c3                   	ret    $/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f <strnlen>:$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	55                   	push   %ebp$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	89 e5                	mov    %esp,%ebp$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	39 c2                	cmp    %eax,%edx$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	74 0d                	je     f010144e <strnlen+0x1f>$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	74 05                	je     f010144c <strnlen+0x1d>$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	83 c2 01             	add    $0x1,%edx$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	eb f1                	jmp    f010143d <strnlen+0xe>$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	89 d0                	mov    %edx,%eax$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	5d                   	pop    %ebp$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	c3                   	ret    $/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450 <strcpy>:$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	55                   	push   %ebp$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	89 e5                	mov    %esp,%ebp$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	53                   	push   %ebx$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	84 c9                	test   %cl,%cl$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	75 f2                	jne    f010145f <strcpy+0xf>$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	5b                   	pop    %ebx$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	5d                   	pop    %ebp$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	c3                   	ret    $/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470 <strcat>:$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	55                   	push   %ebp$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	89 e5                	mov    %esp,%ebp$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	53                   	push   %ebx$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	53                   	push   %ebx$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	e8 97 ff ff ff       	call   f0101417 <strlen>$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	01 d8                	add    %ebx,%eax$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	50                   	push   %eax$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	e8 c2 ff ff ff       	call   f0101450 <strcpy>$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	c9                   	leave  $/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	c3                   	ret    $/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495 <strncpy>:$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	55                   	push   %ebp$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	89 e5                	mov    %esp,%ebp$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	56                   	push   %esi$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	53                   	push   %ebx$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	89 c6                	mov    %eax,%esi$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	89 c2                	mov    %eax,%edx$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	39 f2                	cmp    %esi,%edx$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	74 11                	je     f01014bc <strncpy+0x27>$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	83 c2 01             	add    $0x1,%edx$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	80 fb 01             	cmp    $0x1,%bl$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	eb eb                	jmp    f01014a7 <strncpy+0x12>$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	5b                   	pop    %ebx$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	5e                   	pop    %esi$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	5d                   	pop    %ebp$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	c3                   	ret    $/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0 <strlcpy>:$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	55                   	push   %ebp$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	56                   	push   %esi$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	53                   	push   %ebx$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	89 f0                	mov    %esi,%eax$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	85 d2                	test   %edx,%edx$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	74 21                	je     f01014f5 <strlcpy+0x35>$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	89 f2                	mov    %esi,%edx$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	39 c2                	cmp    %eax,%edx$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	74 14                	je     f01014f2 <strlcpy+0x32>$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	84 db                	test   %bl,%bl$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	74 0b                	je     f01014f0 <strlcpy+0x30>$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	eb ea                	jmp    f01014da <strlcpy+0x1a>$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	89 d0                	mov    %edx,%eax$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	29 f0                	sub    %esi,%eax$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	5b                   	pop    %ebx$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	5e                   	pop    %esi$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	5d                   	pop    %ebp$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	c3                   	ret    $/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb <strcmp>:$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	55                   	push   %ebp$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	84 c0                	test   %al,%al$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	74 0c                	je     f0101517 <strcmp+0x1c>$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	3a 02                	cmp    (%edx),%al$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	75 08                	jne    f0101517 <strcmp+0x1c>$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	eb ed                	jmp    f0101504 <strcmp+0x9>$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	29 d0                	sub    %edx,%eax$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	5d                   	pop    %ebp$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	c3                   	ret    $/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521 <strncmp>:$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	55                   	push   %ebp$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	89 e5                	mov    %esp,%ebp$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	53                   	push   %ebx$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	89 c3                	mov    %eax,%ebx$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	eb 06                	jmp    f0101538 <strncmp+0x17>$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	39 d8                	cmp    %ebx,%eax$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	74 16                	je     f0101552 <strncmp+0x31>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	84 c9                	test   %cl,%cl$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	74 04                	je     f0101547 <strncmp+0x26>$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	74 eb                	je     f0101532 <strncmp+0x11>$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	29 d0                	sub    %edx,%eax$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	5b                   	pop    %ebx$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	5d                   	pop    %ebp$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	c3                   	ret    $/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	eb f6                	jmp    f010154f <strncmp+0x2e>$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559 <strchr>:$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	55                   	push   %ebp$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	89 e5                	mov    %esp,%ebp$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	84 d2                	test   %dl,%dl$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	74 09                	je     f0101573 <strchr+0x1a>$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	38 ca                	cmp    %cl,%dl$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	74 0a                	je     f0101578 <strchr+0x1f>$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	eb f0                	jmp    f0101563 <strchr+0xa>$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	5d                   	pop    %ebp$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	c3                   	ret    $/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a <strfind>:$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	55                   	push   %ebp$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	89 e5                	mov    %esp,%ebp$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	38 ca                	cmp    %cl,%dl$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	74 09                	je     f0101594 <strfind+0x1a>$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	84 d2                	test   %dl,%dl$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	74 05                	je     f0101594 <strfind+0x1a>$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	eb f0                	jmp    f0101584 <strfind+0xa>$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	5d                   	pop    %ebp$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	c3                   	ret    $/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596 <memset>:$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	55                   	push   %ebp$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	89 e5                	mov    %esp,%ebp$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	57                   	push   %edi$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	56                   	push   %esi$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	53                   	push   %ebx$/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	85 c9                	test   %ecx,%ecx$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	74 31                	je     f01015d7 <memset+0x41>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	89 f8                	mov    %edi,%eax$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	09 c8                	or     %ecx,%eax$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	a8 03                	test   $0x3,%al$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	75 23                	jne    f01015d1 <memset+0x3b>$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	89 d3                	mov    %edx,%ebx$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	89 d0                	mov    %edx,%eax$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	89 d6                	mov    %edx,%esi$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	09 f0                	or     %esi,%eax$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	09 c2                	or     %eax,%edx$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	09 da                	or     %ebx,%edx$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	89 d0                	mov    %edx,%eax$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	fc                   	cld    $/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	eb 06                	jmp    f01015d7 <memset+0x41>$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	fc                   	cld    $/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	89 f8                	mov    %edi,%eax$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	5b                   	pop    %ebx$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	5e                   	pop    %esi$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	5f                   	pop    %edi$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	5d                   	pop    %ebp$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	c3                   	ret    $/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de <memmove>:$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	55                   	push   %ebp$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	89 e5                	mov    %esp,%ebp$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	57                   	push   %edi$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	56                   	push   %esi$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	39 c6                	cmp    %eax,%esi$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	73 32                	jae    f0101622 <memmove+0x44>$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	39 c2                	cmp    %eax,%edx$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	76 2b                	jbe    f0101622 <memmove+0x44>$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	89 fe                	mov    %edi,%esi$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	09 ce                	or     %ecx,%esi$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	09 d6                	or     %edx,%esi$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	75 0e                	jne    f0101616 <memmove+0x38>$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	fd                   	std    $/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	eb 09                	jmp    f010161f <memmove+0x41>$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	fd                   	std    $/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	fc                   	cld    $/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	eb 1a                	jmp    f010163c <memmove+0x5e>$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	89 c2                	mov    %eax,%edx$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	09 ca                	or     %ecx,%edx$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	09 f2                	or     %esi,%edx$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	75 0a                	jne    f0101637 <memmove+0x59>$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	89 c7                	mov    %eax,%edi$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	fc                   	cld    $/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	eb 05                	jmp    f010163c <memmove+0x5e>$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	89 c7                	mov    %eax,%edi$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	fc                   	cld    $/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	5e                   	pop    %esi$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	5f                   	pop    %edi$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	5d                   	pop    %ebp$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	c3                   	ret    $/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640 <memcpy>:$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	55                   	push   %ebp$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	89 e5                	mov    %esp,%ebp$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	e8 8a ff ff ff       	call   f01015de <memmove>$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	c9                   	leave  $/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	c3                   	ret    $/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656 <memcmp>:$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	55                   	push   %ebp$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	89 e5                	mov    %esp,%ebp$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	56                   	push   %esi$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	53                   	push   %ebx$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	89 c6                	mov    %eax,%esi$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	39 f0                	cmp    %esi,%eax$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	74 1c                	je     f0101686 <memcmp+0x30>$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	38 d9                	cmp    %bl,%cl$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	75 08                	jne    f010167c <memcmp+0x26>$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	83 c2 01             	add    $0x1,%edx$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	eb ea                	jmp    f0101666 <memcmp+0x10>$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	29 d8                	sub    %ebx,%eax$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	eb 05                	jmp    f010168b <memcmp+0x35>$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	5b                   	pop    %ebx$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	5e                   	pop    %esi$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	5d                   	pop    %ebp$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	c3                   	ret    $/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f <memfind>:$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	55                   	push   %ebp$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	89 e5                	mov    %esp,%ebp$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	89 c2                	mov    %eax,%edx$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	39 d0                	cmp    %edx,%eax$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	73 09                	jae    f01016aa <memfind+0x1b>$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	38 08                	cmp    %cl,(%eax)$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	74 05                	je     f01016aa <memfind+0x1b>$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	eb f3                	jmp    f010169d <memfind+0xe>$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	5d                   	pop    %ebp$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	c3                   	ret    $/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac <strtol>:$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	55                   	push   %ebp$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	57                   	push   %edi$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	56                   	push   %esi$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	53                   	push   %ebx$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	eb 03                	jmp    f01016bd <strtol+0x11>$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	3c 20                	cmp    $0x20,%al$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	74 f6                	je     f01016ba <strtol+0xe>$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	3c 09                	cmp    $0x9,%al$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	74 f2                	je     f01016ba <strtol+0xe>$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	74 2a                	je     f01016f6 <strtol+0x4a>$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	74 2b                	je     f0101700 <strtol+0x54>$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	75 0f                	jne    f01016ec <strtol+0x40>$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	74 28                	je     f010170a <strtol+0x5e>$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	85 db                	test   %ebx,%ebx$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	0f 44 d8             	cmove  %eax,%ebx$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	eb 50                	jmp    f0101746 <strtol+0x9a>$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	eb d5                	jmp    f01016d5 <strtol+0x29>$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	eb cb                	jmp    f01016d5 <strtol+0x29>$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	74 0e                	je     f010171e <strtol+0x72>$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	85 db                	test   %ebx,%ebx$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	75 d8                	jne    f01016ec <strtol+0x40>$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	eb ce                	jmp    f01016ec <strtol+0x40>$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	eb c4                	jmp    f01016ec <strtol+0x40>$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	89 f3                	mov    %esi,%ebx$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	77 29                	ja     f010175b <strtol+0xaf>$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	7d 30                	jge    f010176d <strtol+0xc1>$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	01 d0                	add    %edx,%eax$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	89 f3                	mov    %esi,%ebx$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	77 d5                	ja     f0101728 <strtol+0x7c>$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	eb dd                	jmp    f0101738 <strtol+0x8c>$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	89 f3                	mov    %esi,%ebx$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	77 08                	ja     f010176d <strtol+0xc1>$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	eb cb                	jmp    f0101738 <strtol+0x8c>$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	74 05                	je     f0101778 <strtol+0xcc>$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	89 c2                	mov    %eax,%edx$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	f7 da                	neg    %edx$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	85 ff                	test   %edi,%edi$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	5b                   	pop    %ebx$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	5e                   	pop    %esi$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	5f                   	pop    %edi$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	5d                   	pop    %ebp$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	c3                   	ret    $/;"	l
f0101786	obj/kern/kernel.asm	/^f0101786:	66 90                	xchg   %ax,%ax$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	66 90                	xchg   %ax,%ax$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	66 90                	xchg   %ax,%ax$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	66 90                	xchg   %ax,%ax$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	66 90                	xchg   %ax,%ax$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790 <__udivdi3>:$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	f3 0f 1e fb          	endbr32 $/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	55                   	push   %ebp$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	57                   	push   %edi$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	56                   	push   %esi$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	53                   	push   %ebx$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	85 d2                	test   %edx,%edx$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	75 49                	jne    f01017f8 <__udivdi3+0x68>$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	39 f3                	cmp    %esi,%ebx$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	76 15                	jbe    f01017c8 <__udivdi3+0x38>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	31 ff                	xor    %edi,%edi$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	89 e8                	mov    %ebp,%eax$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	89 f2                	mov    %esi,%edx$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	f7 f3                	div    %ebx$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	89 fa                	mov    %edi,%edx$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	5b                   	pop    %ebx$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	5e                   	pop    %esi$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	5f                   	pop    %edi$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	5d                   	pop    %ebp$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	c3                   	ret    $/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	89 d9                	mov    %ebx,%ecx$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	85 db                	test   %ebx,%ebx$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	75 0b                	jne    f01017d9 <__udivdi3+0x49>$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	31 d2                	xor    %edx,%edx$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	f7 f3                	div    %ebx$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	89 c1                	mov    %eax,%ecx$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	31 d2                	xor    %edx,%edx$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	89 f0                	mov    %esi,%eax$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	f7 f1                	div    %ecx$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	89 c6                	mov    %eax,%esi$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	89 e8                	mov    %ebp,%eax$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	89 f7                	mov    %esi,%edi$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	f7 f1                	div    %ecx$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	89 fa                	mov    %edi,%edx$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	5b                   	pop    %ebx$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	5e                   	pop    %esi$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	5f                   	pop    %edi$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	5d                   	pop    %ebp$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	c3                   	ret    $/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	39 f2                	cmp    %esi,%edx$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	77 1c                	ja     f0101818 <__udivdi3+0x88>$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	0f bd fa             	bsr    %edx,%edi$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	75 2c                	jne    f0101830 <__udivdi3+0xa0>$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	39 f2                	cmp    %esi,%edx$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	72 06                	jb     f010180e <__udivdi3+0x7e>$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	31 c0                	xor    %eax,%eax$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	39 eb                	cmp    %ebp,%ebx$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	77 ad                	ja     f01017bb <__udivdi3+0x2b>$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	eb a6                	jmp    f01017bb <__udivdi3+0x2b>$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	31 ff                	xor    %edi,%edi$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	31 c0                	xor    %eax,%eax$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	89 fa                	mov    %edi,%edx$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	5b                   	pop    %ebx$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	5e                   	pop    %esi$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	5f                   	pop    %edi$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	5d                   	pop    %ebp$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	c3                   	ret    $/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	89 f9                	mov    %edi,%ecx$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	29 f8                	sub    %edi,%eax$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	d3 e2                	shl    %cl,%edx$/;"	d
f010183b	obj/kern/kernel.asm	/^f010183b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	89 c1                	mov    %eax,%ecx$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	89 da                	mov    %ebx,%edx$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	d3 ea                	shr    %cl,%edx$/;"	d
f0101845	obj/kern/kernel.asm	/^f0101845:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	09 d1                	or     %edx,%ecx$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	89 f2                	mov    %esi,%edx$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	89 f9                	mov    %edi,%ecx$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101855	obj/kern/kernel.asm	/^f0101855:	89 c1                	mov    %eax,%ecx$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	d3 ea                	shr    %cl,%edx$/;"	d
f0101859	obj/kern/kernel.asm	/^f0101859:	89 f9                	mov    %edi,%ecx$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	89 eb                	mov    %ebp,%ebx$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	d3 e6                	shl    %cl,%esi$/;"	d
f0101863	obj/kern/kernel.asm	/^f0101863:	89 c1                	mov    %eax,%ecx$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	d3 eb                	shr    %cl,%ebx$/;"	d
f0101867	obj/kern/kernel.asm	/^f0101867:	09 de                	or     %ebx,%esi$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	89 f0                	mov    %esi,%eax$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	89 d6                	mov    %edx,%esi$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	89 c3                	mov    %eax,%ebx$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	39 d6                	cmp    %edx,%esi$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	72 15                	jb     f0101890 <__udivdi3+0x100>$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	89 f9                	mov    %edi,%ecx$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	d3 e5                	shl    %cl,%ebp$/;"	d
f010187f	obj/kern/kernel.asm	/^f010187f:	39 c5                	cmp    %eax,%ebp$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	73 04                	jae    f0101887 <__udivdi3+0xf7>$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	39 d6                	cmp    %edx,%esi$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	74 09                	je     f0101890 <__udivdi3+0x100>$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	89 d8                	mov    %ebx,%eax$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	31 ff                	xor    %edi,%edi$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	e9 2b ff ff ff       	jmp    f01017bb <__udivdi3+0x2b>$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	31 ff                	xor    %edi,%edi$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	e9 21 ff ff ff       	jmp    f01017bb <__udivdi3+0x2b>$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	66 90                	xchg   %ax,%ax$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	66 90                	xchg   %ax,%ax$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	66 90                	xchg   %ax,%ax$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0 <__umoddi3>:$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	f3 0f 1e fb          	endbr32 $/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	55                   	push   %ebp$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	57                   	push   %edi$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	56                   	push   %esi$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	53                   	push   %ebx$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	8b 44 24 3c          	mov    0x3c(%esp),%eax$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	89 da                	mov    %ebx,%edx$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	85 c0                	test   %eax,%eax$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	75 3f                	jne    f0101900 <__umoddi3+0x60>$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	39 df                	cmp    %ebx,%edi$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	76 13                	jbe    f01018d8 <__umoddi3+0x38>$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	89 f0                	mov    %esi,%eax$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	f7 f7                	div    %edi$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	89 d0                	mov    %edx,%eax$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	31 d2                	xor    %edx,%edx$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	5b                   	pop    %ebx$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	5e                   	pop    %esi$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	5f                   	pop    %edi$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	5d                   	pop    %ebp$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	c3                   	ret    $/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	89 fd                	mov    %edi,%ebp$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	85 ff                	test   %edi,%edi$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	75 0b                	jne    f01018e9 <__umoddi3+0x49>$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	31 d2                	xor    %edx,%edx$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	f7 f7                	div    %edi$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	89 c5                	mov    %eax,%ebp$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	89 d8                	mov    %ebx,%eax$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	31 d2                	xor    %edx,%edx$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	f7 f5                	div    %ebp$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	89 f0                	mov    %esi,%eax$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	f7 f5                	div    %ebp$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	89 d0                	mov    %edx,%eax$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	eb d4                	jmp    f01018cb <__umoddi3+0x2b>$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	66 90                	xchg   %ax,%ax$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	89 f1                	mov    %esi,%ecx$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	39 d8                	cmp    %ebx,%eax$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	76 0a                	jbe    f0101910 <__umoddi3+0x70>$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	89 f0                	mov    %esi,%eax$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	5b                   	pop    %ebx$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	5e                   	pop    %esi$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	5f                   	pop    %edi$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	5d                   	pop    %ebp$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	c3                   	ret    $/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	75 20                	jne    f0101938 <__umoddi3+0x98>$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	39 d8                	cmp    %ebx,%eax$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	0f 82 b0 00 00 00    	jb     f01019d0 <__umoddi3+0x130>$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	39 f7                	cmp    %esi,%edi$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	0f 86 a8 00 00 00    	jbe    f01019d0 <__umoddi3+0x130>$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	89 c8                	mov    %ecx,%eax$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	5b                   	pop    %ebx$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	5e                   	pop    %esi$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	5f                   	pop    %edi$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	5d                   	pop    %ebp$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	c3                   	ret    $/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	89 e9                	mov    %ebp,%ecx$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	29 ea                	sub    %ebp,%edx$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	d3 e0                	shl    %cl,%eax$/;"	d
f0101943	obj/kern/kernel.asm	/^f0101943:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	89 d1                	mov    %edx,%ecx$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	89 f8                	mov    %edi,%eax$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	d3 e8                	shr    %cl,%eax$/;"	d
f010194d	obj/kern/kernel.asm	/^f010194d:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	09 c1                	or     %eax,%ecx$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	89 d8                	mov    %ebx,%eax$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	d3 e7                	shl    %cl,%edi$/;"	d
f0101965	obj/kern/kernel.asm	/^f0101965:	89 d1                	mov    %edx,%ecx$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	d3 e8                	shr    %cl,%eax$/;"	d
f0101969	obj/kern/kernel.asm	/^f0101969:	89 e9                	mov    %ebp,%ecx$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101971	obj/kern/kernel.asm	/^f0101971:	89 c7                	mov    %eax,%edi$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	89 d1                	mov    %edx,%ecx$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	89 f0                	mov    %esi,%eax$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	d3 e8                	shr    %cl,%eax$/;"	d
f0101979	obj/kern/kernel.asm	/^f0101979:	89 e9                	mov    %ebp,%ecx$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	89 fa                	mov    %edi,%edx$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	d3 e6                	shl    %cl,%esi$/;"	d
f010197f	obj/kern/kernel.asm	/^f010197f:	09 d8                	or     %ebx,%eax$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	89 d1                	mov    %edx,%ecx$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	89 f3                	mov    %esi,%ebx$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	89 c6                	mov    %eax,%esi$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	89 d7                	mov    %edx,%edi$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	72 06                	jb     f010199b <__umoddi3+0xfb>$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	75 10                	jne    f01019a7 <__umoddi3+0x107>$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	73 0c                	jae    f01019a7 <__umoddi3+0x107>$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	2b 44 24 0c          	sub    0xc(%esp),%eax$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	1b 54 24 08          	sbb    0x8(%esp),%edx$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	89 d7                	mov    %edx,%edi$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	89 c6                	mov    %eax,%esi$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	89 ca                	mov    %ecx,%edx$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	29 f3                	sub    %esi,%ebx$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	19 fa                	sbb    %edi,%edx$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	89 d0                	mov    %edx,%eax$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	d3 e0                	shl    %cl,%eax$/;"	d
f01019b6	obj/kern/kernel.asm	/^f01019b6:	89 e9                	mov    %ebp,%ecx$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	d3 eb                	shr    %cl,%ebx$/;"	d
f01019ba	obj/kern/kernel.asm	/^f01019ba:	d3 ea                	shr    %cl,%edx$/;"	d
f01019bc	obj/kern/kernel.asm	/^f01019bc:	09 d8                	or     %ebx,%eax$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	5b                   	pop    %ebx$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	5e                   	pop    %esi$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	5f                   	pop    %edi$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	5d                   	pop    %ebp$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	c3                   	ret    $/;"	l
f01019c6	obj/kern/kernel.asm	/^f01019c6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	89 da                	mov    %ebx,%edx$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	29 fe                	sub    %edi,%esi$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	19 c2                	sbb    %eax,%edx$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	89 f1                	mov    %esi,%ecx$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	89 c8                	mov    %ecx,%eax$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	e9 4b ff ff ff       	jmp    f010192a <__umoddi3+0x8a>$/;"	l
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
fs_test	fs/test.c	/^fs_test(void)$/;"	f	typeref:typename:void
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	typeref:typename:int (*)(int argc,char ** argv,struct Trapframe * tf)	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	typeref:typename:unsigned:5
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	typeref:typename:unsigned:2
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:3
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	typeref:typename:unsigned:4
gdb	GNUmakefile	/^gdb:$/;"	t
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getchar	kern/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	typeref:typename:long long	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)\/\/ap = arg pointer$/;"	f	typeref:typename:unsigned long long	file:
git-handin	GNUmakefile	/^git-handin: handin-check$/;"	t
grade	GNUmakefile	/^grade:$/;"	t
handin	GNUmakefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	GNUmakefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
hook-stop	.gdbinit	/^define hook-stop$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	typeref:typename:void	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f	typeref:typename:void
inb	inc/x86.h	/^inb(int port)$/;"	f	typeref:typename:uint8_t
inl	inc/x86.h	/^inl(int port)$/;"	f	typeref:typename:uint32_t
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	typeref:typename:short
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	typeref:typename:int
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	typeref:typename:long long
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	typeref:typename:__signed char
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	typeref:typename:void
inw	inc/x86.h	/^inw(int port)$/;"	f	typeref:typename:uint16_t
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	typeref:typename:void	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	typeref:typename:void
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	typeref:typename:int	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v	typeref:typename:pde_t *
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lastcs	.gdbinit	/^set $lastcs = -1$/;"	t
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	typeref:typename:void
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	typeref:typename:void
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	typeref:typename:void
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	typeref:typename:void
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	typeref:typename:void
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	typeref:typename:void
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	typeref:typename:void	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	typeref:typename:void
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	typeref:typename:void
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	typeref:typename:int
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	typeref:typename:void *
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	typeref:typename:void
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:char *	file:
myapi.key	GNUmakefile	/^myapi.key:$/;"	t
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	typeref:typename:uint16_t
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	typeref:typename:uint8_t
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	typeref:typename:uint32_t
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	typeref:typename:uint8_t
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	typeref:typename:uintptr_t
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	typeref:typename:const char *	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v	typeref:typename:size_t
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	typeref:typename:size_t	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	typeref:typename:int	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	typeref:typename:void
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	typeref:typename:void
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	typeref:typename:void
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	typeref:struct:PageInfo *
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	typeref:typename:void
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	typeref:typename:void
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo *	file:
page_init	kern/pmap.c	/^page_init(void)$/;"	f	typeref:typename:void
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	typeref:typename:int
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	typeref:struct:PageInfo *
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo *
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v	typeref:typename:const char *
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	typeref:typename:uint32_t
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	typeref:typename:uint16_t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	typeref:typename:uint32_t
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	typeref:typename:pte_t *
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo *
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	typeref:typename:uint16_t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	typeref:typename:uint32_t
pre-qemu	GNUmakefile	/^pre-qemu: .gdbinit$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
print-gdbport	GNUmakefile	/^print-gdbport:$/;"	t
print-qemu	GNUmakefile	/^print-qemu:$/;"	t
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	typeref:typename:void
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	typeref:typename:void	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	typeref:typename:uint32_t
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	typeref:typename:void	file:
qemu	GNUmakefile	/^qemu: $(IMAGES) pre-qemu$/;"	t
qemu-gdb	GNUmakefile	/^qemu-gdb: $(IMAGES) pre-qemu$/;"	t
qemu-nox	GNUmakefile	/^qemu-nox: $(IMAGES) pre-qemu$/;"	t
qemu-nox-gdb	GNUmakefile	/^qemu-nox-gdb: $(IMAGES) pre-qemu$/;"	t
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	typeref:typename:uint32_t
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	typeref:typename:uint32_t
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	typeref:typename:uint32_t
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	typeref:typename:uint32_t
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	typeref:typename:uint32_t
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	typeref:typename:uint32_t
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	typeref:typename:uint32_t
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	typeref:typename:uint64_t
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	typeref:typename:char *
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	typeref:typename:void
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	typeref:typename:void
realclean	GNUmakefile	/^realclean: clean$/;"	t
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	typeref:typename:unsigned:2
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	typeref:typename:bool	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	typeref:typename:void	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	typeref:typename:void
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	typeref:typename:int	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	typeref:typename:void	file:
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	typeref:typename:uint32_t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	typeref:typename:int
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	typeref:typename:void	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	typeref:typename:int32_t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	typeref:typename:void	file:
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v	typeref:typename:const char *
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v	typeref:typename:const char *
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	typeref:typename:char *
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	typeref:typename:char *
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	typeref:typename:int
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	typeref:typename:char *
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	typeref:typename:int
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	typeref:typename:long
tarball-pref	GNUmakefile	/^tarball-pref: handin-check$/;"	t
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f	typeref:typename:void
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	typeref:typename:void
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	typeref:typename:physaddr_t
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	typeref:typename:uint16_t
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	inc/stdarg.h	/^#define va_start(/;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	typeref:typename:void
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	typeref:typename:void
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	typeref:typename:uint32_t
