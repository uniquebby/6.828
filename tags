!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
$(OBJDIR)/.deps	GNUmakefile	/^$(OBJDIR)\/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)\/$(dir)\/*.d))$/;"	t
$(OBJDIR)/.vars.%	GNUmakefile	/^$(OBJDIR)\/.vars.%: FORCE$/;"	t
.bss	kern/kernel.ld	/^	.bss : {$/;"	S
.bss	user/user.ld	/^	.bss : {$/;"	S
.data	kern/kernel.ld	/^	.data : {$/;"	S
.data	user/user.ld	/^	.data : {$/;"	S
.gdbinit	GNUmakefile	/^.gdbinit: .gdbinit.tmpl$/;"	t
.rodata	kern/kernel.ld	/^	.rodata : {$/;"	S
.rodata	user/user.ld	/^	.rodata : {$/;"	S
.stab	kern/kernel.ld	/^	.stab : {$/;"	S
.stab	user/user.ld	/^	.stab : {$/;"	S
.stab_info	user/user.ld	/^	.stab_info 0x200000 : {$/;"	S
.stabstr	kern/kernel.ld	/^	.stabstr : {$/;"	S
.stabstr	user/user.ld	/^	.stabstr : {$/;"	S
.text	kern/kernel.ld	/^	.text : AT(0x100000) {$/;"	S
.text	user/user.ld	/^	.text : {$/;"	S
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anond42707880103
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	/^#define ARRAYSIZE /;"	d	file:
ARRAY_SIZE	inc/types.h	/^#define ARRAY_SIZE(/;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM /;"	d	file:
ASM	obj/user/badsegment.asm	/^#define ASM /;"	d	file:
ASM	obj/user/breakpoint.asm	/^#define ASM /;"	d	file:
ASM	obj/user/buggyhello.asm	/^#define ASM /;"	d	file:
ASM	obj/user/buggyhello2.asm	/^#define ASM /;"	d	file:
ASM	obj/user/divzero.asm	/^#define ASM /;"	d	file:
ASM	obj/user/evilhello.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultread.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultreadkernel.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultwrite.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultwritekernel.asm	/^#define ASM /;"	d	file:
ASM	obj/user/hello.asm	/^#define ASM /;"	d	file:
ASM	obj/user/softint.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testbss.asm	/^#define ASM /;"	d	file:
ASSERT	kern/lapic.c	/^	#define ASSERT /;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	/^	#define BCAST /;"	d	file:
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN /;"	d	file:
BUSY	kern/lapic.c	/^	#define BUSY /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECK	user/faultregs.c	/^#define CHECK(/;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM /;"	d	file:
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon98e956820103
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon98e956820103
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon98e956820103
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PE_ON	boot/boot.S	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PE_ON	obj/boot/boot.asm	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	/^	#define DEASSERT /;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	/^#define DEBUG_SPINLOCK$/;"	d
DELIVS	kern/lapic.c	/^	#define DELIVS /;"	d	file:
DEPTH	user/forktree.c	/^#define DEPTH /;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
ENABLE	kern/lapic.c	/^	#define ENABLE /;"	d	file:
ENVGENSHIFT	kern/env.c	/^#define ENVGENSHIFT	/;"	d	file:
ENVX	inc/env.h	/^#define ENVX(/;"	d
ENV_CREATE	kern/env.h	/^#define ENV_CREATE(/;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon773a49cd0103
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon773a49cd0103
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon773a49cd0103
ENV_PASTE3	kern/env.h	/^#define ENV_PASTE3(/;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon773a49cd0103
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon773a49cd0103
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	/^#define EOI /;"	d	file:
ERROR	kern/lapic.c	/^#define ERROR /;"	d	file:
ESR	kern/lapic.c	/^#define ESR /;"	d	file:
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3824070e0103
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon3824070e0103
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3824070e0103
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3824070e0103
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon3824070e0103
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3824070e0103
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3824070e0103
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3824070e0103
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FIXED	kern/lapic.c	/^	#define FIXED /;"	d	file:
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	/^#define ICRHI /;"	d	file:
ICRLO	kern/lapic.c	/^#define ICRLO /;"	d	file:
ID	kern/lapic.c	/^#define ID /;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	/^	#define INIT /;"	d	file:
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
IO_PIC1	kern/picirq.h	/^#define IO_PIC1	/;"	d
IO_PIC2	kern/picirq.h	/^#define IO_PIC2	/;"	d
IO_RTC	kern/kclock.h	/^#define	IO_RTC	/;"	d
IO_RTC	kern/lapic.c	/^#define IO_RTC /;"	d	file:
IRQ_ERROR	inc/trap.h	/^#define IRQ_ERROR /;"	d
IRQ_IDE	inc/trap.h	/^#define IRQ_IDE /;"	d
IRQ_KBD	inc/trap.h	/^#define IRQ_KBD /;"	d
IRQ_OFFSET	inc/trap.h	/^#define IRQ_OFFSET	/;"	d
IRQ_SERIAL	inc/trap.h	/^#define IRQ_SERIAL /;"	d
IRQ_SLAVE	kern/picirq.h	/^#define IRQ_SLAVE	/;"	d
IRQ_SPURIOUS	inc/trap.h	/^#define IRQ_SPURIOUS /;"	d
IRQ_TIMER	inc/trap.h	/^#define IRQ_TIMER /;"	d
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_CPU_H	kern/cpu.h	/^#define JOS_INC_CPU_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ENV_H	inc/env.h	/^#define JOS_INC_ENV_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_LIB_H	inc/lib.h	/^#define JOS_INC_LIB_H /;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	/^#define JOS_INC_SPINLOCK_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	/^#define JOS_INC_SYSCALL_H$/;"	d
JOS_INC_TRAP_H	inc/trap.h	/^#define JOS_INC_TRAP_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_ENV_H	kern/env.h	/^#define JOS_KERN_ENV_H$/;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	/^#define JOS_KERN_KCLOCK_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	/^#define JOS_KERN_PICIRQ_H$/;"	d
JOS_KERN_PMAP_H	kern/pmap.h	/^#define JOS_KERN_PMAP_H$/;"	d
JOS_KERN_SCHED_H	kern/sched.h	/^#define JOS_KERN_SCHED_H$/;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	/^#define JOS_KERN_SYSCALL_H$/;"	d
JOS_KERN_TRAP_H	kern/trap.h	/^#define JOS_KERN_TRAP_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KADDR	kern/pmap.h	/^#define KADDR(/;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(/;"	d	file:
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	/^	#define LEVEL /;"	d	file:
LINT0	kern/lapic.c	/^#define LINT0 /;"	d	file:
LINT1	kern/lapic.c	/^#define LINT1 /;"	d	file:
LOAD_REGS	user/faultregs.c	/^#define LOAD_REGS(/;"	d	file:
LOG2NENV	inc/env.h	/^#define LOG2NENV	/;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	/^	#define MASKED /;"	d	file:
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3824070e0103
MAX_IRQS	kern/picirq.h	/^#define MAX_IRQS	/;"	d
MC_NVRAM_SIZE	kern/kclock.h	/^#define	MC_NVRAM_SIZE	/;"	d
MC_NVRAM_START	kern/kclock.h	/^#define	MC_NVRAM_START	/;"	d
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(/;"	d	file:
MPBUS	kern/mpconfig.c	/^#define MPBUS /;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	/^#define MPENTRY_PADDR	/;"	d
MPIOAPIC	kern/mpconfig.c	/^#define MPIOAPIC /;"	d	file:
MPIOINTR	kern/mpconfig.c	/^#define MPIOINTR /;"	d	file:
MPLINTR	kern/mpconfig.c	/^#define MPLINTR /;"	d	file:
MPPROC	kern/mpconfig.c	/^#define MPPROC /;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	/^#define MPPROC_BOOT /;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS /;"	d	file:
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC /;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	/^#define NCPU /;"	d
NENV	inc/env.h	/^#define NENV	/;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anond5c7ce3f0103
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
NVRAM_BASEHI	kern/kclock.h	/^#define NVRAM_BASEHI	/;"	d
NVRAM_BASELO	kern/kclock.h	/^#define NVRAM_BASELO	/;"	d
NVRAM_EXT16HI	kern/kclock.h	/^#define NVRAM_EXT16HI	/;"	d
NVRAM_EXT16LO	kern/kclock.h	/^#define NVRAM_EXT16LO	/;"	d
NVRAM_EXTHI	kern/kclock.h	/^#define NVRAM_EXTHI	/;"	d
NVRAM_EXTLO	kern/kclock.h	/^#define NVRAM_EXTLO	/;"	d
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	/^	#define OTHERS /;"	d	file:
O_ACCMODE	inc/lib.h	/^#define	O_ACCMODE	/;"	d
O_CREAT	inc/lib.h	/^#define	O_CREAT	/;"	d
O_EXCL	inc/lib.h	/^#define	O_EXCL	/;"	d
O_MKDIR	inc/lib.h	/^#define O_MKDIR	/;"	d
O_RDONLY	inc/lib.h	/^#define	O_RDONLY	/;"	d
O_RDWR	inc/lib.h	/^#define	O_RDWR	/;"	d
O_TRUNC	inc/lib.h	/^#define	O_TRUNC	/;"	d
O_WRONLY	inc/lib.h	/^#define	O_WRONLY	/;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Oct 8 21:31:51 PDT 2018$/;"	m
PADDR	kern/pmap.h	/^#define PADDR(/;"	d
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PCINT	kern/lapic.c	/^#define PCINT /;"	d	file:
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERIODIC	kern/lapic.c	/^	#define PERIODIC /;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PROT_MODE_CSEG	boot/boot.S	/^.set PROT_MODE_CSEG, 0x8         # kernel code segment selector$/;"	d
PROT_MODE_CSEG	kern/mpentry.S	/^.set PROT_MODE_CSEG, 0x8	# kernel code segment selector$/;"	d
PROT_MODE_DSEG	boot/boot.S	/^.set PROT_MODE_DSEG, 0x10        # kernel data segment selector$/;"	d
PROT_MODE_DSEG	kern/mpentry.S	/^.set PROT_MODE_DSEG, 0x10	# kernel data segment selector$/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_COW	lib/fork.c	/^#define PTE_COW	/;"	d	file:
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SHARE	inc/lib.h	/^#define	PTE_SHARE	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:std/;"	m
RELOC	kern/entry.S	/^#define	RELOC(/;"	d	file:
RELOC	kern/mpentry.S	/^#define RELOC(/;"	d	file:
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	/^#define SAVE_REGS(/;"	d	file:
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SRL	kern/entry.S	/^#define SRL(/;"	d	file:
STARTUP	kern/lapic.c	/^	#define STARTUP /;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
SVR	kern/lapic.c	/^#define SVR /;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anond5c7ce3f0103
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anond5c7ce3f0103
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anond5c7ce3f0103
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anond5c7ce3f0103
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anond5c7ce3f0103
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anond5c7ce3f0103
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anond5c7ce3f0103
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	/^#define TCCR /;"	d	file:
TDCR	kern/lapic.c	/^#define TDCR /;"	d	file:
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	/^#define TICR /;"	d	file:
TIMER	kern/lapic.c	/^#define TIMER /;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
TPR	kern/lapic.c	/^#define TPR /;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(/;"	d	file:
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(/;"	d	file:
T_ALIGN	inc/trap.h	/^#define T_ALIGN /;"	d
T_BOUND	inc/trap.h	/^#define T_BOUND /;"	d
T_BRKPT	inc/trap.h	/^#define T_BRKPT /;"	d
T_DBLFLT	inc/trap.h	/^#define T_DBLFLT /;"	d
T_DEBUG	inc/trap.h	/^#define T_DEBUG /;"	d
T_DEFAULT	inc/trap.h	/^#define T_DEFAULT /;"	d
T_DEVICE	inc/trap.h	/^#define T_DEVICE /;"	d
T_DIVIDE	inc/trap.h	/^#define T_DIVIDE /;"	d
T_FPERR	inc/trap.h	/^#define T_FPERR /;"	d
T_GPFLT	inc/trap.h	/^#define T_GPFLT /;"	d
T_ILLOP	inc/trap.h	/^#define T_ILLOP /;"	d
T_MCHK	inc/trap.h	/^#define T_MCHK /;"	d
T_NMI	inc/trap.h	/^#define T_NMI /;"	d
T_OFLOW	inc/trap.h	/^#define T_OFLOW /;"	d
T_PGFLT	inc/trap.h	/^#define T_PGFLT /;"	d
T_SEGNP	inc/trap.h	/^#define T_SEGNP /;"	d
T_SIMDERR	inc/trap.h	/^#define T_SIMDERR /;"	d
T_STACK	inc/trap.h	/^#define T_STACK /;"	d
T_SYSCALL	inc/trap.h	/^#define T_SYSCALL /;"	d
T_TSS	inc/trap.h	/^#define T_TSS /;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | aw/;"	m
USED	inc/lib.h	/^#define USED(/;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	/^#define VER /;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
X1	kern/lapic.c	/^	#define X1 /;"	d	file:
_Bool	inc/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__STABSTR_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STABSTR_BEGIN__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_BEGIN__	user/user.ld	/^		__STABSTR_BEGIN__ = DEFINED(__STABSTR_BEGIN__) ? __STABSTR_BEGIN__ : .;$/;"	s	section:.stabstr
__STABSTR_END__	kern/kernel.ld	/^		PROVIDE(__STABSTR_END__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_END__	user/user.ld	/^		__STABSTR_END__ = DEFINED(__STABSTR_END__) ? __STABSTR_END__ : .;$/;"	s	section:.stabstr
__STAB_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STAB_BEGIN__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_BEGIN__	user/user.ld	/^		__STAB_BEGIN__ = DEFINED(__STAB_BEGIN__) ? __STAB_BEGIN__ : .;$/;"	s	section:.stab
__STAB_END__	kern/kernel.ld	/^		PROVIDE(__STAB_END__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_END__	user/user.ld	/^		__STAB_END__ = DEFINED(__STAB_END__) ? __STAB_END__ : .;$/;"	s	section:.stab
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3824070e0103	inc/error.h	/^enum {$/;"	g
__anon773a49cd0103	inc/env.h	/^enum {$/;"	g
__anon98e956820103	kern/cpu.h	/^enum {$/;"	g
__anon9d6ad5280108	kern/console.c	/^static struct {$/;"	s	file:
__anoncaf80a390103	inc/types.h	/^enum { false, true };$/;"	g
__anond42707880103	kern/pmap.h	/^enum {$/;"	g
__anond5c7ce3f0103	inc/syscall.h	/^enum {$/;"	g
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	typeref:typename:void
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	typeref:typename:void *
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	typeref:typename:physaddr_t
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	typeref:typename:void
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v	typeref:typename:void (*)(struct UTrapframe * utf)
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	typeref:typename:unsigned	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
all	GNUmakefile	/^all:$/;"	t
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
always	GNUmakefile	/^always:$/;"	t
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v	typeref:typename:uint32_t[]
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v	typeref:typename:const char *
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	typeref:typename:void *	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	typeref:typename:void	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	typeref:typename:void	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo *
bootmain	boot/main.c	/^bootmain(void)$/;"	f	typeref:typename:void
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	typeref:typename:void
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint8_t[]	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	typeref:typename:char[256]	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	typeref:typename:char[]	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	typeref:typename:void	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	typeref:typename:void	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	typeref:typename:uint8_t * [4]	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	typeref:typename:void	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	typeref:typename:void	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	typeref:typename:void	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	typeref:typename:void	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	typeref:typename:void	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	typeref:typename:void	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	typeref:typename:physaddr_t	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	typeref:typename:uint8_t	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
clean	GNUmakefile	/^clean:$/;"	t
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	typeref:typename:int	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	typeref:typename:int	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command[]	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9d6ad5280108
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	typeref:typename:int
cons_init	kern/console.c	/^cons_init(void)$/;"	f	typeref:typename:void
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	typeref:typename:void	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	typeref:typename:void	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v	typeref:typename:volatile int
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:CpuInfo *
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:Env *
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	typeref:typename:uint8_t
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	typeref:typename:volatile unsigned
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	typeref:typename:void
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	typeref:typename:int
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo[]
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	typeref:typename:void
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	typeref:typename:void
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	typeref:typename:uint16_t *	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	typeref:typename:uint16_t	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
curenv	kern/env.h	/^#define curenv /;"	d
curenv	obj/kern/kernel.asm	/^		 curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	typeref:typename:int
delay	kern/console.c	/^delay(void)$/;"	f	typeref:typename:void	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	typeref:typename:const char *	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	typeref:typename:bool	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
distclean	GNUmakefile	/^distclean: realclean$/;"	t
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	typeref:typename:envid_t
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	typeref:typename:int	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	typeref:typename:void
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	typeref:typename:uint8_t[12]
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	typeref:typename:uint32_t
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	typeref:typename:uint32_t
ebp	obj/kern/kernel.asm	/^		ebp = *ptr_ebp;$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
edata	kern/kernel.ld	/^		PROVIDE(edata = .);$/;"	s	section:.bss	assignment:provide
edata	user/user.ld	/^	PROVIDE(edata = .);$/;"	s	assignment:provide
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	typeref:typename:uint32_t	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	typeref:typename:uintptr_t	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	typeref:typename:uintptr_t
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:int
end	kern/kernel.ld	/^		PROVIDE(end = .);$/;"	s	section:.bss	assignment:provide
end	user/user.ld	/^	PROVIDE(end = .);$/;"	s	assignment:provide
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	typeref:typename:uint8_t[0]	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v	typeref:typename:pde_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v	typeref:typename:pte_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v	typeref:typename:pte_t[]
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	typeref:typename:int
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	typeref:typename:int
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	typeref:typename:void
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	typeref:typename:void
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	typeref:typename:void
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env *	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	typeref:typename:envid_t
env_init	kern/env.c	/^env_init(void)$/;"	f	typeref:typename:void
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	typeref:typename:void
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	typeref:typename:void *
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	typeref:typename:envid_t
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	typeref:typename:int
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	typeref:typename:bool
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	typeref:typename:uint32_t
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env *
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	typeref:typename:envid_t
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	typeref:typename:pde_t *
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	typeref:typename:void *
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	typeref:typename:void
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	typeref:typename:void
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	typeref:typename:uint32_t
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	typeref:typename:int	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	typeref:typename:unsigned
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:EnvType
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	typeref:typename:int
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t	typeref:typename:int32_t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env *
envs	lib/entry.S	/^	.set envs, UENVS$/;"	d
envs	obj/kern/kernel.asm	/^	envs = (struct Env*) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elf->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	typeref:typename:const char * const[]	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	typeref:typename:uintptr_t	file:
etext	kern/kernel.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
etext	user/user.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
exit	lib/exit.c	/^exit(void)$/;"	f	typeref:typename:void
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 e0 18 00       	mov    $0x18e000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 b0 11 f0       	mov    $0xf011b000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 68 00 00 00       	call   f01000a6 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	e8 8f 01 00 00       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	81 c3 aa f0 08 00    	add    $0x8f0aa,%ebx$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100053	obj/kern/kernel.asm	/^f0100053:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100056	obj/kern/kernel.asm	/^f0100056:	56                   	push   %esi$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	8d 83 2c 5c f7 ff    	lea    -0x8a3d4(%ebx),%eax$/;"	l
f010005d	obj/kern/kernel.asm	/^f010005d:	50                   	push   %eax$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	e8 d4 37 00 00       	call   f0103837 <cprintf>$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	85 f6                	test   %esi,%esi$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	7e 29                	jle    f0100093 <test_backtrace+0x53>$/;"	l
f010006a	obj/kern/kernel.asm	/^f010006a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	50                   	push   %eax$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	e8 ca ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100079	obj/kern/kernel.asm	/^f0100079:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	56                   	push   %esi$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	8d 83 48 5c f7 ff    	lea    -0x8a3b8(%ebx),%eax$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	50                   	push   %eax$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	e8 ae 37 00 00       	call   f0103837 <cprintf>$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	5b                   	pop    %ebx$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	5e                   	pop    %esi$/;"	l
f0100091	obj/kern/kernel.asm	/^f0100091:	5d                   	pop    %ebp$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c3                   	ret    $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100096	obj/kern/kernel.asm	/^f0100096:	6a 00                	push   $0x0$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	6a 00                	push   $0x0$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	6a 00                	push   $0x0$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	e8 e5 07 00 00       	call   f0100886 <mon_backtrace>$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	eb d3                	jmp    f0100079 <test_backtrace+0x39>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6 <i386_init>:$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	55                   	push   %ebp$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	53                   	push   %ebx$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	e8 27 01 00 00       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	81 c3 42 f0 08 00    	add    $0x8f042,%ebx$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	c7 c0 00 00 19 f0    	mov    $0xf0190000,%eax$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 c2 00 f1 18 f0    	mov    $0xf018f100,%edx$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	29 d0                	sub    %edx,%eax$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	50                   	push   %eax$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	6a 00                	push   $0x0$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	52                   	push   %edx$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	e8 04 48 00 00       	call   f01048d3 <memset>$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 2d 05 00 00       	call   f0100601 <cons_init>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	8d 83 63 5c f7 ff    	lea    -0x8a39d(%ebx),%eax$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	50                   	push   %eax$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	e8 4f 37 00 00       	call   f0103837 <cprintf>$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 4c ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 99 12 00 00       	call   f0101392 <mem_init>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 63 30 00 00       	call   f0103161 <env_init>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	e8 e7 37 00 00       	call   f01038ea <trap_init>$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	6a 00                	push   $0x0$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	e8 37 32 00 00       	call   f010334a <env_create>$/;"	l
f0100113	obj/kern/kernel.asm	/^f0100113:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	c7 c0 48 f3 18 f0    	mov    $0xf018f348,%eax$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	ff 30                	pushl  (%eax)$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	e8 18 36 00 00       	call   f010373b <env_run>$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123 <_panic>:$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	55                   	push   %ebp$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	89 e5                	mov    %esp,%ebp$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	57                   	push   %edi$/;"	l
f0100127	obj/kern/kernel.asm	/^f0100127:	56                   	push   %esi$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	53                   	push   %ebx$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010012c	obj/kern/kernel.asm	/^f010012c:	e8 a8 00 00 00       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	81 c3 c3 ef 08 00    	add    $0x8efc3,%ebx$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	c7 c0 00 00 19 f0    	mov    $0xf0190000,%eax$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	74 0f                	je     f0100154 <_panic+0x31>$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	6a 00                	push   $0x0$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	e8 d9 07 00 00       	call   f0100928 <monitor>$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	eb f1                	jmp    f0100145 <_panic+0x22>$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	89 38                	mov    %edi,(%eax)$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	fa                   	cli    $/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	fc                   	cld    $/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	8d 83 7e 5c f7 ff    	lea    -0x8a382(%ebx),%eax$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	50                   	push   %eax$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 c7 36 00 00       	call   f0103837 <cprintf>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	56                   	push   %esi$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	57                   	push   %edi$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 86 36 00 00       	call   f0103800 <vcprintf>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	8d 83 d6 6b f7 ff    	lea    -0x8942a(%ebx),%eax$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	e8 af 36 00 00       	call   f0103837 <cprintf>$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	83 c4 10             	add    $0x10,%esp$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	eb b8                	jmp    f0100145 <_panic+0x22>$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d <_warn>:$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	55                   	push   %ebp$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	56                   	push   %esi$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	53                   	push   %ebx$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	e8 42 00 00 00       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	81 c3 5d ef 08 00    	add    $0x8ef5d,%ebx$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	8d 83 96 5c f7 ff    	lea    -0x8a36a(%ebx),%eax$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	50                   	push   %eax$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	e8 82 36 00 00       	call   f0103837 <cprintf>$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	56                   	push   %esi$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	e8 3f 36 00 00       	call   f0103800 <vcprintf>$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	8d 83 d6 6b f7 ff    	lea    -0x8942a(%ebx),%eax$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	e8 68 36 00 00       	call   f0103837 <cprintf>$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	5b                   	pop    %ebx$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	5e                   	pop    %esi$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	5d                   	pop    %ebp$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	c3                   	ret    $/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9 <__x86.get_pc_thunk.bx>:$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	c3                   	ret    $/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd <serial_proc_data>:$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	ec                   	in     (%dx),%al$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	a8 01                	test   $0x1,%al$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	74 0a                	je     f01001f1 <serial_proc_data+0x14>$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	ec                   	in     (%dx),%al$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	c3                   	ret    $/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	c3                   	ret    $/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7 <cons_intr>:$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	55                   	push   %ebp$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	56                   	push   %esi$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	53                   	push   %ebx$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	e8 d8 ff ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	81 c3 f3 ee 08 00    	add    $0x8eef3,%ebx$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	89 c6                	mov    %eax,%esi$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	ff d6                	call   *%esi$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	74 2a                	je     f010023a <cons_intr+0x43>$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	85 c0                	test   %eax,%eax$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	74 f5                	je     f0100209 <cons_intr+0x12>$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	8b 8b 30 02 00 00    	mov    0x230(%ebx),%ecx$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	88 84 0b 2c 00 00 00 	mov    %al,0x2c(%ebx,%ecx,1)$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	89 93 30 02 00 00    	mov    %edx,0x230(%ebx)$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	eb cf                	jmp    f0100209 <cons_intr+0x12>$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	5b                   	pop    %ebx$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	5e                   	pop    %esi$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	5d                   	pop    %ebp$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	c3                   	ret    $/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e <kbd_proc_data>:$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	55                   	push   %ebp$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	56                   	push   %esi$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	53                   	push   %ebx$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	e8 91 ff ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	81 c3 ac ee 08 00    	add    $0x8eeac,%ebx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	ec                   	in     (%dx),%al$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	a8 01                	test   $0x1,%al$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	0f 84 fb 00 00 00    	je     f0100357 <kbd_proc_data+0x119>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	a8 20                	test   $0x20,%al$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	0f 85 fa 00 00 00    	jne    f010035e <kbd_proc_data+0x120>$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	ec                   	in     (%dx),%al$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	89 c2                	mov    %eax,%edx$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	3c e0                	cmp    $0xe0,%al$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	74 64                	je     f01002d4 <kbd_proc_data+0x96>$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	84 c0                	test   %al,%al$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	78 75                	js     f01002e9 <kbd_proc_data+0xab>$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	8b 8b 0c 00 00 00    	mov    0xc(%ebx),%ecx$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	74 0e                	je     f010028d <kbd_proc_data+0x4f>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	89 c2                	mov    %eax,%edx$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	89 8b 0c 00 00 00    	mov    %ecx,0xc(%ebx)$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	0f b6 84 13 ec 5d f7 	movzbl -0x8a214(%ebx,%edx,1),%eax$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	ff $/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	0b 83 0c 00 00 00    	or     0xc(%ebx),%eax$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	0f b6 8c 13 ec 5c f7 	movzbl -0x8a314(%ebx,%edx,1),%ecx$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	ff $/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	31 c8                	xor    %ecx,%eax$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	89 83 0c 00 00 00    	mov    %eax,0xc(%ebx)$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	89 c1                	mov    %eax,%ecx$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	8b 8c 8b 2c ff ff ff 	mov    -0xd4(%ebx,%ecx,4),%ecx$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	a8 08                	test   $0x8,%al$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	74 65                	je     f010032a <kbd_proc_data+0xec>$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	89 f2                	mov    %esi,%edx$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	8d 4e 9f             	lea    -0x61(%esi),%ecx$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	77 4f                	ja     f010031e <kbd_proc_data+0xe0>$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	83 ee 20             	sub    $0x20,%esi$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	eb 0c                	jmp    f01002e0 <kbd_proc_data+0xa2>$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	83 8b 0c 00 00 00 40 	orl    $0x40,0xc(%ebx)$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	89 f0                	mov    %esi,%eax$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	5b                   	pop    %ebx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	5e                   	pop    %esi$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	5d                   	pop    %ebp$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	c3                   	ret    $/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	8b 8b 0c 00 00 00    	mov    0xc(%ebx),%ecx$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	89 ce                	mov    %ecx,%esi$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	83 e6 40             	and    $0x40,%esi$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	85 f6                	test   %esi,%esi$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	0f b6 84 13 ec 5d f7 	movzbl -0x8a214(%ebx,%edx,1),%eax$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	ff $/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	83 c8 40             	or     $0x40,%eax$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	f7 d0                	not    %eax$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	21 c8                	and    %ecx,%eax$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	89 83 0c 00 00 00    	mov    %eax,0xc(%ebx)$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	eb c2                	jmp    f01002e0 <kbd_proc_data+0xa2>$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	8d 4e 20             	lea    0x20(%esi),%ecx$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	0f 42 f1             	cmovb  %ecx,%esi$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	f7 d0                	not    %eax$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	a8 06                	test   $0x6,%al$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	75 b0                	jne    f01002e0 <kbd_proc_data+0xa2>$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	81 fe e9 00 00 00    	cmp    $0xe9,%esi$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	75 a8                	jne    f01002e0 <kbd_proc_data+0xa2>$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	8d 83 b0 5c f7 ff    	lea    -0x8a350(%ebx),%eax$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	50                   	push   %eax$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	e8 f0 34 00 00       	call   f0103837 <cprintf>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	ee                   	out    %al,(%dx)$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	eb 89                	jmp    f01002e0 <kbd_proc_data+0xa2>$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	eb 82                	jmp    f01002e0 <kbd_proc_data+0xa2>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	e9 78 ff ff ff       	jmp    f01002e0 <kbd_proc_data+0xa2>$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368 <cons_putc>:$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	55                   	push   %ebp$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	89 e5                	mov    %esp,%ebp$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	57                   	push   %edi$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	56                   	push   %esi$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	53                   	push   %ebx$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	e8 63 fe ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	81 c3 7e ed 08 00    	add    $0x8ed7e,%ebx$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	89 c7                	mov    %eax,%edi$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	ec                   	in     (%dx),%al$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	a8 20                	test   $0x20,%al$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	75 13                	jne    f01003a5 <cons_putc+0x3d>$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	7f 0b                	jg     f01003a5 <cons_putc+0x3d>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	89 ca                	mov    %ecx,%edx$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	ec                   	in     (%dx),%al$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	ec                   	in     (%dx),%al$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	ec                   	in     (%dx),%al$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	ec                   	in     (%dx),%al$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	83 c6 01             	add    $0x1,%esi$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	eb e3                	jmp    f0100388 <cons_putc+0x20>$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	89 f8                	mov    %edi,%eax$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	ee                   	out    %al,(%dx)$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	ec                   	in     (%dx),%al$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	7f 0f                	jg     f01003d7 <cons_putc+0x6f>$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	84 c0                	test   %al,%al$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	78 0b                	js     f01003d7 <cons_putc+0x6f>$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	89 ca                	mov    %ecx,%edx$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	ec                   	in     (%dx),%al$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	ec                   	in     (%dx),%al$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	ec                   	in     (%dx),%al$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	ec                   	in     (%dx),%al$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	83 c6 01             	add    $0x1,%esi$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	eb e3                	jmp    f01003ba <cons_putc+0x52>$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	ee                   	out    %al,(%dx)$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	ee                   	out    %al,(%dx)$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	ee                   	out    %al,(%dx)$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	89 fa                	mov    %edi,%edx$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	89 f8                	mov    %edi,%eax$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	80 cc 07             	or     $0x7,%ah$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	85 d2                	test   %edx,%edx$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	89 f8                	mov    %edi,%eax$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	0f 84 b4 00 00 00    	je     f01004c6 <cons_putc+0x15e>$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	7e 74                	jle    f0100488 <cons_putc+0x120>$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	0f 84 9c 00 00 00    	je     f01004b9 <cons_putc+0x151>$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	0f 85 d7 00 00 00    	jne    f01004fd <cons_putc+0x195>$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	0f b7 83 34 02 00 00 	movzwl 0x234(%ebx),%eax$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	66 89 83 34 02 00 00 	mov    %ax,0x234(%ebx)$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	66 81 bb 34 02 00 00 	cmpw   $0x7cf,0x234(%ebx)$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	cf 07 $/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	0f 87 ce 00 00 00    	ja     f0100520 <cons_putc+0x1b8>$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	8b 8b 3c 02 00 00    	mov    0x23c(%ebx),%ecx$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	89 ca                	mov    %ecx,%edx$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	ee                   	out    %al,(%dx)$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	0f b7 9b 34 02 00 00 	movzwl 0x234(%ebx),%ebx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	89 d8                	mov    %ebx,%eax$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	89 f2                	mov    %esi,%edx$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	ee                   	out    %al,(%dx)$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	89 ca                	mov    %ecx,%edx$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	ee                   	out    %al,(%dx)$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	89 d8                	mov    %ebx,%eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	89 f2                	mov    %esi,%edx$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	ee                   	out    %al,(%dx)$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	5b                   	pop    %ebx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	5e                   	pop    %esi$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	5f                   	pop    %edi$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	5d                   	pop    %ebp$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	c3                   	ret    $/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	75 70                	jne    f01004fd <cons_putc+0x195>$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	0f b7 83 34 02 00 00 	movzwl 0x234(%ebx),%eax$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	66 85 c0             	test   %ax,%ax$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	74 b9                	je     f0100452 <cons_putc+0xea>$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	66 89 83 34 02 00 00 	mov    %ax,0x234(%ebx)$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	89 fa                	mov    %edi,%edx$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	b2 00                	mov    $0x0,%dl$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	83 ca 20             	or     $0x20,%edx$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	8b 8b 38 02 00 00    	mov    0x238(%ebx),%ecx$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	eb 8a                	jmp    f0100443 <cons_putc+0xdb>$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	66 83 83 34 02 00 00 	addw   $0x50,0x234(%ebx)$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	50 $/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	e9 60 ff ff ff       	jmp    f0100426 <cons_putc+0xbe>$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	e8 98 fe ff ff       	call   f0100368 <cons_putc>$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	e8 8e fe ff ff       	call   f0100368 <cons_putc>$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	e8 84 fe ff ff       	call   f0100368 <cons_putc>$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	e8 7a fe ff ff       	call   f0100368 <cons_putc>$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	e8 70 fe ff ff       	call   f0100368 <cons_putc>$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	e9 46 ff ff ff       	jmp    f0100443 <cons_putc+0xdb>$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	0f b7 83 34 02 00 00 	movzwl 0x234(%ebx),%eax$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	66 89 93 34 02 00 00 	mov    %dx,0x234(%ebx)$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	8b 93 38 02 00 00    	mov    0x238(%ebx),%edx$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	e9 23 ff ff ff       	jmp    f0100443 <cons_putc+0xdb>$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	52                   	push   %edx$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	50                   	push   %eax$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	e8 e0 43 00 00       	call   f010491b <memmove>$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	8b 93 38 02 00 00    	mov    0x238(%ebx),%edx$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	39 d0                	cmp    %edx,%eax$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	75 f4                	jne    f0100550 <cons_putc+0x1e8>$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	66 83 ab 34 02 00 00 	subw   $0x50,0x234(%ebx)$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	50 $/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	e9 e9 fe ff ff       	jmp    f0100452 <cons_putc+0xea>$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569 <serial_intr>:$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	e8 dc 01 00 00       	call   f010074a <__x86.get_pc_thunk.ax>$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	05 86 eb 08 00       	add    $0x8eb86,%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	80 b8 40 02 00 00 00 	cmpb   $0x0,0x240(%eax)$/;"	l
f010057a	obj/kern/kernel.asm	/^f010057a:	75 01                	jne    f010057d <serial_intr+0x14>$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	c3                   	ret    $/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	55                   	push   %ebp$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	8d 80 e9 10 f7 ff    	lea    -0x8ef17(%eax),%eax$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	e8 69 fc ff ff       	call   f01001f7 <cons_intr>$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	c9                   	leave  $/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	c3                   	ret    $/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590 <kbd_intr>:$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	55                   	push   %ebp$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	89 e5                	mov    %esp,%ebp$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	e8 af 01 00 00       	call   f010074a <__x86.get_pc_thunk.ax>$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	05 59 eb 08 00       	add    $0x8eb59,%eax$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	8d 80 4a 11 f7 ff    	lea    -0x8eeb6(%eax),%eax$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	e8 4c fc ff ff       	call   f01001f7 <cons_intr>$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	c9                   	leave  $/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	c3                   	ret    $/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad <cons_getc>:$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	55                   	push   %ebp$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	53                   	push   %ebx$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	e8 20 fc ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	81 c3 3b eb 08 00    	add    $0x8eb3b,%ebx$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	e8 a5 ff ff ff       	call   f0100569 <serial_intr>$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	e8 c7 ff ff ff       	call   f0100590 <kbd_intr>$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	8b 8b 2c 02 00 00    	mov    0x22c(%ebx),%ecx$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	3b 8b 30 02 00 00    	cmp    0x230(%ebx),%ecx$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	74 1f                	je     f01005fb <cons_getc+0x4e>$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	0f b6 84 0b 2c 00 00 	movzbl 0x2c(%ebx,%ecx,1),%eax$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	00 $/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 93 2c 02 00 00    	mov    %edx,0x22c(%ebx)$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	83 c4 04             	add    $0x4,%esp$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	5b                   	pop    %ebx$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	5d                   	pop    %ebp$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	c3                   	ret    $/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601 <cons_init>:$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	55                   	push   %ebp$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	89 e5                	mov    %esp,%ebp$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	57                   	push   %edi$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	56                   	push   %esi$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	53                   	push   %ebx$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	e8 ca fb ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	81 c3 e5 ea 08 00    	add    $0x8eae5,%ebx$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	5a a5 $/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	0f 84 bc 00 00 00    	je     f01006f2 <cons_init+0xf1>$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	c7 83 3c 02 00 00 b4 	movl   $0x3b4,0x23c(%ebx)$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	03 00 00 $/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	8b bb 3c 02 00 00    	mov    0x23c(%ebx),%edi$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	89 fa                	mov    %edi,%edx$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	ee                   	out    %al,(%dx)$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	89 ca                	mov    %ecx,%edx$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	ec                   	in     (%dx),%al$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	89 fa                	mov    %edi,%edx$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	ee                   	out    %al,(%dx)$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	89 ca                	mov    %ecx,%edx$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	ec                   	in     (%dx),%al$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	89 bb 38 02 00 00    	mov    %edi,0x238(%ebx)$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	09 c6                	or     %eax,%esi$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	66 89 b3 34 02 00 00 	mov    %si,0x234(%ebx)$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	89 c8                	mov    %ecx,%eax$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	ee                   	out    %al,(%dx)$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	89 fa                	mov    %edi,%edx$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	ee                   	out    %al,(%dx)$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	ee                   	out    %al,(%dx)$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	89 c8                	mov    %ecx,%eax$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	89 f2                	mov    %esi,%edx$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	ee                   	out    %al,(%dx)$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	89 fa                	mov    %edi,%edx$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	ee                   	out    %al,(%dx)$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	89 c8                	mov    %ecx,%eax$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	ee                   	out    %al,(%dx)$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	89 f2                	mov    %esi,%edx$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	ee                   	out    %al,(%dx)$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	ec                   	in     (%dx),%al$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	89 c1                	mov    %eax,%ecx$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	3c ff                	cmp    $0xff,%al$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	0f 95 83 40 02 00 00 	setne  0x240(%ebx)$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	ec                   	in     (%dx),%al$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	ec                   	in     (%dx),%al$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	74 25                	je     f010070f <cons_init+0x10e>$/;"	l
f01006ea	obj/kern/kernel.asm	/^f01006ea:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	5b                   	pop    %ebx$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	5e                   	pop    %esi$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	5f                   	pop    %edi$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	5d                   	pop    %ebp$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	c3                   	ret    $/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	c7 83 3c 02 00 00 d4 	movl   $0x3d4,0x23c(%ebx)$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	03 00 00 $/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	e9 38 ff ff ff       	jmp    f0100647 <cons_init+0x46>$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	8d 83 bc 5c f7 ff    	lea    -0x8a344(%ebx),%eax$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	50                   	push   %eax$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	e8 19 31 00 00       	call   f0103837 <cprintf>$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	eb c7                	jmp    f01006ea <cons_init+0xe9>$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723 <cputchar>:$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	55                   	push   %ebp$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	89 e5                	mov    %esp,%ebp$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	e8 37 fc ff ff       	call   f0100368 <cons_putc>$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	c9                   	leave  $/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	c3                   	ret    $/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733 <getchar>:$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	55                   	push   %ebp$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	89 e5                	mov    %esp,%ebp$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	e8 6f fe ff ff       	call   f01005ad <cons_getc>$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	85 c0                	test   %eax,%eax$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	74 f7                	je     f0100739 <getchar+0x6>$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	c9                   	leave  $/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	c3                   	ret    $/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744 <iscons>:$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	c3                   	ret    $/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a <__x86.get_pc_thunk.ax>:$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	c3                   	ret    $/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e <mon_help>:$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	55                   	push   %ebp$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	56                   	push   %esi$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	53                   	push   %ebx$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	e8 81 fa ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	81 c3 9c e9 08 00    	add    $0x8e99c,%ebx$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	8d 83 ec 5e f7 ff    	lea    -0x8a114(%ebx),%eax$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	50                   	push   %eax$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	8d 83 0a 5f f7 ff    	lea    -0x8a0f6(%ebx),%eax$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	50                   	push   %eax$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	8d b3 0f 5f f7 ff    	lea    -0x8a0f1(%ebx),%esi$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	56                   	push   %esi$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	e8 bc 30 00 00       	call   f0103837 <cprintf>$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	8d 83 bc 5f f7 ff    	lea    -0x8a044(%ebx),%eax$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	50                   	push   %eax$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	8d 83 18 5f f7 ff    	lea    -0x8a0e8(%ebx),%eax$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	50                   	push   %eax$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	56                   	push   %esi$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	e8 a5 30 00 00       	call   f0103837 <cprintf>$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	8d 83 21 5f f7 ff    	lea    -0x8a0df(%ebx),%eax$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	50                   	push   %eax$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	8d 83 38 5f f7 ff    	lea    -0x8a0c8(%ebx),%eax$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	50                   	push   %eax$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	56                   	push   %esi$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	e8 8e 30 00 00       	call   f0103837 <cprintf>$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	5b                   	pop    %ebx$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	5e                   	pop    %esi$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	5d                   	pop    %ebp$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	c3                   	ret    $/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5 <mon_kerninfo>:$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	55                   	push   %ebp$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	57                   	push   %edi$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	56                   	push   %esi$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	53                   	push   %ebx$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	e8 16 fa ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	81 c3 31 e9 08 00    	add    $0x8e931,%ebx$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	8d 83 42 5f f7 ff    	lea    -0x8a0be(%ebx),%eax$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	50                   	push   %eax$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	e8 62 30 00 00       	call   f0103837 <cprintf>$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	ff b3 fc ff ff ff    	pushl  -0x4(%ebx)$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	8d 83 e4 5f f7 ff    	lea    -0x8a01c(%ebx),%eax$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	50                   	push   %eax$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	e8 4d 30 00 00       	call   f0103837 <cprintf>$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edi$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	50                   	push   %eax$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	57                   	push   %edi$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	8d 83 0c 60 f7 ff    	lea    -0x89ff4(%ebx),%eax$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	50                   	push   %eax$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	e8 30 30 00 00       	call   f0103837 <cprintf>$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	c7 c0 1f 4d 10 f0    	mov    $0xf0104d1f,%eax$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	52                   	push   %edx$/;"	l
f0100817	obj/kern/kernel.asm	/^f0100817:	50                   	push   %eax$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	8d 83 30 60 f7 ff    	lea    -0x89fd0(%ebx),%eax$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	50                   	push   %eax$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	e8 13 30 00 00       	call   f0103837 <cprintf>$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	c7 c0 00 f1 18 f0    	mov    $0xf018f100,%eax$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	52                   	push   %edx$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	50                   	push   %eax$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	8d 83 54 60 f7 ff    	lea    -0x89fac(%ebx),%eax$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	50                   	push   %eax$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	e8 f6 2f 00 00       	call   f0103837 <cprintf>$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	c7 c6 00 00 19 f0    	mov    $0xf0190000,%esi$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	50                   	push   %eax$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	56                   	push   %esi$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	8d 83 78 60 f7 ff    	lea    -0x89f88(%ebx),%eax$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	50                   	push   %eax$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	e8 d9 2f 00 00       	call   f0103837 <cprintf>$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	29 fe                	sub    %edi,%esi$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	81 c6 ff 03 00 00    	add    $0x3ff,%esi$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	c1 fe 0a             	sar    $0xa,%esi$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	56                   	push   %esi$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	8d 83 9c 60 f7 ff    	lea    -0x89f64(%ebx),%eax$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	50                   	push   %eax$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	e8 be 2f 00 00       	call   f0103837 <cprintf>$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	5b                   	pop    %ebx$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	5e                   	pop    %esi$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	5f                   	pop    %edi$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	5d                   	pop    %ebp$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	c3                   	ret    $/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886 <mon_backtrace>:$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	55                   	push   %ebp$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	89 e5                	mov    %esp,%ebp$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	57                   	push   %edi$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	56                   	push   %esi$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	53                   	push   %ebx$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	83 ec 48             	sub    $0x48,%esp$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	e8 45 f9 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	81 c3 60 e8 08 00    	add    $0x8e860,%ebx$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	89 ee                	mov    %ebp,%esi$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	8d 83 5b 5f f7 ff    	lea    -0x8a0a5(%ebx),%eax$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	50                   	push   %eax$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	e8 8f 2f 00 00       	call   f0103837 <cprintf>$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	8d 83 c8 60 f7 ff    	lea    -0x89f38(%ebx),%eax$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	eb 27                	jmp    f01008e3 <mon_backtrace+0x5d>$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	8d 83 6d 5f f7 ff    	lea    -0x8a093(%ebx),%eax$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	50                   	push   %eax$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	e8 59 2f 00 00       	call   f0103837 <cprintf>$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	83 c4 20             	add    $0x20,%esp$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	8b 37                	mov    (%edi),%esi$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	85 f6                	test   %esi,%esi$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	74 34                	je     f010091b <mon_backtrace+0x95>$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	89 f7                	mov    %esi,%edi$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	ff 76 0c             	pushl  0xc(%esi)$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	56                   	push   %esi$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	e8 33 2f 00 00       	call   f0103837 <cprintf>$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	e8 cb 34 00 00       	call   f0103ddd <debuginfo_eip>$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	85 c0                	test   %eax,%eax$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	75 c8                	jne    f01008e1 <mon_backtrace+0x5b>$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	eb a1                	jmp    f01008bc <mon_backtrace+0x36>$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	5b                   	pop    %ebx$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	5e                   	pop    %esi$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	5f                   	pop    %edi$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	5d                   	pop    %ebp$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	c3                   	ret    $/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928 <monitor>:$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	55                   	push   %ebp$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	89 e5                	mov    %esp,%ebp$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	57                   	push   %edi$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	56                   	push   %esi$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	53                   	push   %ebx$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	83 ec 68             	sub    $0x68,%esp$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	e8 a3 f8 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	81 c3 be e7 08 00    	add    $0x8e7be,%ebx$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	8d 83 f8 60 f7 ff    	lea    -0x89f08(%ebx),%eax$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	50                   	push   %eax$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	e8 ef 2e 00 00       	call   f0103837 <cprintf>$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	8d 83 1c 61 f7 ff    	lea    -0x89ee4(%ebx),%eax$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	e8 e1 2e 00 00       	call   f0103837 <cprintf>$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	74 0e                	je     f010096d <monitor+0x45>$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	e8 36 30 00 00       	call   f01039a0 <print_trapframe>$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	8d 83 83 5f f7 ff    	lea    -0x8a07d(%ebx),%eax$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	e9 d1 00 00 00       	jmp    f0100a4c <monitor+0x124>$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	50                   	push   %eax$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	ff 75 a0             	pushl  -0x60(%ebp)$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	e8 0c 3f 00 00       	call   f0104896 <strchr>$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	85 c0                	test   %eax,%eax$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	74 6d                	je     f01009fe <monitor+0xd6>$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	89 7d a4             	mov    %edi,-0x5c(%ebp)$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	8b 7d a4             	mov    -0x5c(%ebp),%edi$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	84 c0                	test   %al,%al$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	75 d7                	jne    f010097b <monitor+0x53>$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	c7 44 bd a8 00 00 00 	movl   $0x0,-0x58(%ebp,%edi,4)$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	00 $/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	85 ff                	test   %edi,%edi$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	0f 84 98 00 00 00    	je     f0100a4c <monitor+0x124>$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	8d b3 4c ff ff ff    	lea    -0xb4(%ebx),%esi$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	89 7d a4             	mov    %edi,-0x5c(%ebp)$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	89 c7                	mov    %eax,%edi$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	ff 36                	pushl  (%esi)$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	e8 67 3e 00 00       	call   f0104838 <strcmp>$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	85 c0                	test   %eax,%eax$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	0f 84 99 00 00 00    	je     f0100a75 <monitor+0x14d>$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	83 c7 01             	add    $0x1,%edi$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	83 c6 0c             	add    $0xc,%esi$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	83 ff 03             	cmp    $0x3,%edi$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	75 dd                	jne    f01009c4 <monitor+0x9c>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	8d 83 a5 5f f7 ff    	lea    -0x8a05b(%ebx),%eax$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	50                   	push   %eax$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	e8 3e 2e 00 00       	call   f0103837 <cprintf>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	eb 4e                	jmp    f0100a4c <monitor+0x124>$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	80 3e 00             	cmpb   $0x0,(%esi)$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	74 a1                	je     f01009a4 <monitor+0x7c>$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	83 ff 0f             	cmp    $0xf,%edi$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	74 30                	je     f0100a38 <monitor+0x110>$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	89 74 bd a8          	mov    %esi,-0x58(%ebp,%edi,4)$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	84 c0                	test   %al,%al$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	74 81                	je     f010099a <monitor+0x72>$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	50                   	push   %eax$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	ff 75 a0             	pushl  -0x60(%ebp)$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	e8 6e 3e 00 00       	call   f0104896 <strchr>$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	85 c0                	test   %eax,%eax$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	0f 85 67 ff ff ff    	jne    f010099a <monitor+0x72>$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	eb da                	jmp    f0100a12 <monitor+0xea>$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	6a 10                	push   $0x10$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	8d 83 88 5f f7 ff    	lea    -0x8a078(%ebx),%eax$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	50                   	push   %eax$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	e8 ee 2d 00 00       	call   f0103837 <cprintf>$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	8d bb 7f 5f f7 ff    	lea    -0x8a081(%ebx),%edi$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	57                   	push   %edi$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	e8 fc 3b 00 00       	call   f0104657 <readline>$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	85 c0                	test   %eax,%eax$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	74 f0                	je     f0100a52 <monitor+0x12a>$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	89 c6                	mov    %eax,%esi$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	e9 28 ff ff ff       	jmp    f010099d <monitor+0x75>$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	89 f8                	mov    %edi,%eax$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	8b 7d a4             	mov    -0x5c(%ebp),%edi$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	52                   	push   %edx$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	57                   	push   %edi$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	ff 94 83 54 ff ff ff 	call   *-0xac(%ebx,%eax,4)$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	85 c0                	test   %eax,%eax$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	79 b6                	jns    f0100a4c <monitor+0x124>$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	5b                   	pop    %ebx$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	5e                   	pop    %esi$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	5f                   	pop    %edi$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	5d                   	pop    %ebp$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	c3                   	ret    $/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e <boot_alloc>:$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	e8 51 25 00 00       	call   f0102ff4 <__x86.get_pc_thunk.cx>$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	81 c1 51 e6 08 00    	add    $0x8e651,%ecx$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	89 c2                	mov    %eax,%edx$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	83 b9 44 02 00 00 00 	cmpl   $0x0,0x244(%ecx)$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	74 1b                	je     f0100acf <boot_alloc+0x31>$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	8b 81 44 02 00 00    	mov    0x244(%ecx),%eax$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	01 c2                	add    %eax,%edx$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	89 91 44 02 00 00    	mov    %edx,0x244(%ecx)$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	c3                   	ret    $/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	c7 c0 00 00 19 f0    	mov    $0xf0190000,%eax$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	05 0f 10 00 00       	add    $0x100f,%eax$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	89 81 44 02 00 00    	mov    %eax,0x244(%ecx)$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	eb cd                	jmp    f0100ab4 <boot_alloc+0x16>$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7 <nvram_read>:$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	55                   	push   %ebp$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	57                   	push   %edi$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	56                   	push   %esi$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	53                   	push   %ebx$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	e8 e4 f6 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	81 c3 ff e5 08 00    	add    $0x8e5ff,%ebx$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	89 c7                	mov    %eax,%edi$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	50                   	push   %eax$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	e8 ad 2c 00 00       	call   f01037b0 <mc146818_read>$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	89 c6                	mov    %eax,%esi$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	e8 a0 2c 00 00       	call   f01037b0 <mc146818_read>$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	09 f0                	or     %esi,%eax$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	5b                   	pop    %ebx$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	5e                   	pop    %esi$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	5f                   	pop    %edi$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	5d                   	pop    %ebp$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	c3                   	ret    $/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d <check_va2pa>:$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	55                   	push   %ebp$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	56                   	push   %esi$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	53                   	push   %ebx$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	e8 cd 24 00 00       	call   f0102ff4 <__x86.get_pc_thunk.cx>$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	81 c1 cd e5 08 00    	add    $0x8e5cd,%ecx$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	89 d3                	mov    %edx,%ebx$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	8b 04 98             	mov    (%eax,%ebx,4),%eax$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	a8 01                	test   $0x1,%al$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	74 5a                	je     f0100b93 <check_va2pa+0x76>$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	89 c6                	mov    %eax,%esi$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	c7 c3 04 00 19 f0    	mov    $0xf0190004,%ebx$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	3b 33                	cmp    (%ebx),%esi$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	73 2b                	jae    f0100b78 <check_va2pa+0x5b>$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	89 c2                	mov    %eax,%edx$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	85 d2                	test   %edx,%edx$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	5b                   	pop    %ebx$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	5e                   	pop    %esi$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	5d                   	pop    %ebp$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	c3                   	ret    $/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	50                   	push   %eax$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	8d 81 44 61 f7 ff    	lea    -0x89ebc(%ecx),%eax$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	50                   	push   %eax$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	68 3c 03 00 00       	push   $0x33c$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	8d 81 25 69 f7 ff    	lea    -0x896db(%ecx),%eax$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	50                   	push   %eax$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	e8 90 f5 ff ff       	call   f0100123 <_panic>$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	eb d7                	jmp    f0100b71 <check_va2pa+0x54>$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a <check_page_free_list>:$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	55                   	push   %ebp$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	57                   	push   %edi$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	56                   	push   %esi$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	53                   	push   %ebx$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	e8 50 24 00 00       	call   f0102ff8 <__x86.get_pc_thunk.si>$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	81 c6 4c e5 08 00    	add    $0x8e54c,%esi$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	84 c0                	test   %al,%al$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	0f 85 ec 02 00 00    	jne    f0100ea5 <check_page_free_list+0x30b>$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	83 b8 48 02 00 00 00 	cmpl   $0x0,0x248(%eax)$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	74 21                	je     f0100be6 <check_page_free_list+0x4c>$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	c7 45 d4 00 04 00 00 	movl   $0x400,-0x2c(%ebp)$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	8b b0 48 02 00 00    	mov    0x248(%eax),%esi$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	c7 c7 0c 00 19 f0    	mov    $0xf019000c,%edi$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	c7 c0 04 00 19 f0    	mov    $0xf0190004,%eax$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	eb 39                	jmp    f0100c1f <check_page_free_list+0x85>$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	8d 83 68 61 f7 ff    	lea    -0x89e98(%ebx),%eax$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	50                   	push   %eax$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	68 71 02 00 00       	push   $0x271$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	50                   	push   %eax$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	e8 1f f5 ff ff       	call   f0100123 <_panic>$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	50                   	push   %eax$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	50                   	push   %eax$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	6a 56                	push   $0x56$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	50                   	push   %eax$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	e8 06 f5 ff ff       	call   f0100123 <_panic>$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	8b 36                	mov    (%esi),%esi$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	85 f6                	test   %esi,%esi$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	74 40                	je     f0100c63 <check_page_free_list+0xc9>$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	89 f0                	mov    %esi,%eax$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	2b 07                	sub    (%edi),%eax$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	89 c2                	mov    %eax,%edx$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	73 e6                	jae    f0100c1d <check_page_free_list+0x83>$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	89 c2                	mov    %eax,%edx$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	3b 11                	cmp    (%ecx),%edx$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	73 c1                	jae    f0100c04 <check_page_free_list+0x6a>$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	68 80 00 00 00       	push   $0x80$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	68 97 00 00 00       	push   $0x97$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	50                   	push   %eax$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	e8 75 3c 00 00       	call   f01048d3 <memset>$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	eb ba                	jmp    f0100c1d <check_page_free_list+0x83>$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	e8 31 fe ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	8b 7d c8             	mov    -0x38(%ebp),%edi$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	8b 97 48 02 00 00    	mov    0x248(%edi),%edx$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	8b 08                	mov    (%eax),%ecx$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	c7 c0 04 00 19 f0    	mov    $0xf0190004,%eax$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	8d 3c c1             	lea    (%ecx,%eax,8),%edi$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	e9 08 01 00 00       	jmp    f0100da4 <check_page_free_list+0x20a>$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	8d 83 3f 69 f7 ff    	lea    -0x896c1(%ebx),%eax$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	50                   	push   %eax$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	50                   	push   %eax$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	68 8b 02 00 00       	push   $0x28b$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	50                   	push   %eax$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	e8 65 f4 ff ff       	call   f0100123 <_panic>$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	8d 83 60 69 f7 ff    	lea    -0x896a0(%ebx),%eax$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	50                   	push   %eax$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	50                   	push   %eax$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	68 8c 02 00 00       	push   $0x28c$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	50                   	push   %eax$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	e8 43 f4 ff ff       	call   f0100123 <_panic>$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	8d 83 8c 61 f7 ff    	lea    -0x89e74(%ebx),%eax$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	50                   	push   %eax$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	50                   	push   %eax$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	68 8d 02 00 00       	push   $0x28d$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	50                   	push   %eax$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	e8 21 f4 ff ff       	call   f0100123 <_panic>$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	8d 83 74 69 f7 ff    	lea    -0x8968c(%ebx),%eax$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	50                   	push   %eax$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	50                   	push   %eax$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	68 90 02 00 00       	push   $0x290$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	50                   	push   %eax$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	e8 ff f3 ff ff       	call   f0100123 <_panic>$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	8d 83 85 69 f7 ff    	lea    -0x8967b(%ebx),%eax$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	50                   	push   %eax$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	50                   	push   %eax$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	68 91 02 00 00       	push   $0x291$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	50                   	push   %eax$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	e8 dd f3 ff ff       	call   f0100123 <_panic>$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	8d 83 c0 61 f7 ff    	lea    -0x89e40(%ebx),%eax$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	50                   	push   %eax$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	50                   	push   %eax$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	68 92 02 00 00       	push   $0x292$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	50                   	push   %eax$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	e8 bb f3 ff ff       	call   f0100123 <_panic>$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	8d 83 9e 69 f7 ff    	lea    -0x89662(%ebx),%eax$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	50                   	push   %eax$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	50                   	push   %eax$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	68 93 02 00 00       	push   $0x293$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	50                   	push   %eax$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	e8 99 f3 ff ff       	call   f0100123 <_panic>$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	89 c3                	mov    %eax,%ebx$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	76 6d                	jbe    f0100e01 <check_page_free_list+0x267>$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	77 7c                	ja     f0100e1a <check_page_free_list+0x280>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	8b 12                	mov    (%edx),%edx$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	85 d2                	test   %edx,%edx$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	0f 84 90 00 00 00    	je     f0100e3c <check_page_free_list+0x2a2>$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	0f 87 e8 fe ff ff    	ja     f0100c9c <check_page_free_list+0x102>$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	39 d7                	cmp    %edx,%edi$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	0f 86 02 ff ff ff    	jbe    f0100cbe <check_page_free_list+0x124>$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	89 d0                	mov    %edx,%eax$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	29 c8                	sub    %ecx,%eax$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	a8 07                	test   $0x7,%al$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	0f 85 18 ff ff ff    	jne    f0100ce0 <check_page_free_list+0x146>$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	0f 84 2e ff ff ff    	je     f0100d02 <check_page_free_list+0x168>$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	0f 84 45 ff ff ff    	je     f0100d24 <check_page_free_list+0x18a>$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	0f 84 5c ff ff ff    	je     f0100d46 <check_page_free_list+0x1ac>$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	0f 84 73 ff ff ff    	je     f0100d68 <check_page_free_list+0x1ce>$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	77 8e                	ja     f0100d8a <check_page_free_list+0x1f0>$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	eb a1                	jmp    f0100da2 <check_page_free_list+0x208>$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	50                   	push   %eax$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	50                   	push   %eax$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	6a 56                	push   $0x56$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	50                   	push   %eax$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	e8 09 f3 ff ff       	call   f0100123 <_panic>$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	8d 83 e4 61 f7 ff    	lea    -0x89e1c(%ebx),%eax$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	50                   	push   %eax$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	50                   	push   %eax$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	68 94 02 00 00       	push   $0x294$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	50                   	push   %eax$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	e8 e7 f2 ff ff       	call   f0100123 <_panic>$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	85 f6                	test   %esi,%esi$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	7e 1e                	jle    f0100e61 <check_page_free_list+0x2c7>$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	85 db                	test   %ebx,%ebx$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	7e 3c                	jle    f0100e83 <check_page_free_list+0x2e9>$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	8d 83 2c 62 f7 ff    	lea    -0x89dd4(%ebx),%eax$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	50                   	push   %eax$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	e8 de 29 00 00       	call   f0103837 <cprintf>$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	5b                   	pop    %ebx$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	5e                   	pop    %esi$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	5f                   	pop    %edi$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	5d                   	pop    %ebp$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	c3                   	ret    $/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	8d 83 b8 69 f7 ff    	lea    -0x89648(%ebx),%eax$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	50                   	push   %eax$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	50                   	push   %eax$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	68 9c 02 00 00       	push   $0x29c$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	50                   	push   %eax$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	e8 a0 f2 ff ff       	call   f0100123 <_panic>$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	8d 83 ca 69 f7 ff    	lea    -0x89636(%ebx),%eax$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	50                   	push   %eax$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	50                   	push   %eax$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	68 9d 02 00 00       	push   $0x29d$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	50                   	push   %eax$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	e8 7e f2 ff ff       	call   f0100123 <_panic>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	8b 80 48 02 00 00    	mov    0x248(%eax),%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	85 c0                	test   %eax,%eax$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	0f 84 30 fd ff ff    	je     f0100be6 <check_page_free_list+0x4c>$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	8b 75 c8             	mov    -0x38(%ebp),%esi$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	c7 c3 0c 00 19 f0    	mov    $0xf019000c,%ebx$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	89 c2                	mov    %eax,%edx$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	2b 13                	sub    (%ebx),%edx$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	0f 95 c2             	setne  %dl$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	85 c0                	test   %eax,%eax$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	75 e0                	jne    f0100ecb <check_page_free_list+0x331>$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 10                	mov    %edx,(%eax)$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	8b 75 c8             	mov    -0x38(%ebp),%esi$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	89 86 48 02 00 00    	mov    %eax,0x248(%esi)$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	e9 b8 fc ff ff       	jmp    f0100bcc <check_page_free_list+0x32>$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14 <page_init>:$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	55                   	push   %ebp$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	57                   	push   %edi$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	56                   	push   %esi$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	53                   	push   %ebx$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	e8 da 20 00 00       	call   f0102ffc <__x86.get_pc_thunk.di>$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	81 c7 d2 e1 08 00    	add    $0x8e1d2,%edi$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	89 fe                	mov    %edi,%esi$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	8b bf 4c 02 00 00    	mov    0x24c(%edi),%edi$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	8b 9e 48 02 00 00    	mov    0x248(%esi),%ebx$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	c7 c6 0c 00 19 f0    	mov    $0xf019000c,%esi$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	eb 1f                	jmp    f0100f78 <page_init+0x64>$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	89 d1                	mov    %edx,%ecx$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	03 0e                	add    (%esi),%ecx$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	89 d3                	mov    %edx,%ebx$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	03 1e                	add    (%esi),%ebx$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	39 c7                	cmp    %eax,%edi$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	77 dd                	ja     f0100f59 <page_init+0x45>$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	84 d2                	test   %dl,%dl$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	74 09                	je     f0100f89 <page_init+0x75>$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	89 98 48 02 00 00    	mov    %ebx,0x248(%eax)$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	e8 0b fb ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	76 47                	jbe    f0100fe1 <page_init+0xcd>$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	8d 91 04 05 00 00    	lea    0x504(%ecx),%edx$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	81 c1 04 08 00 00    	add    $0x804,%ecx$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	66 c7 02 01 00       	movw   $0x1,(%edx)$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	83 c2 08             	add    $0x8,%edx$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	75 f4                	jne    f0100fb6 <page_init+0xa2>$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	8b 9e 48 02 00 00    	mov    0x248(%esi),%ebx$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	c7 c7 04 00 19 f0    	mov    $0xf0190004,%edi$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	c7 c6 0c 00 19 f0    	mov    $0xf019000c,%esi$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	eb 3b                	jmp    f010101c <page_init+0x108>$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	50                   	push   %eax$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	50                   	push   %eax$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	68 2c 01 00 00       	push   $0x12c$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	50                   	push   %eax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	e8 26 f1 ff ff       	call   f0100123 <_panic>$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	89 d1                	mov    %edx,%ecx$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	03 0e                	add    (%esi),%ecx$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	89 d3                	mov    %edx,%ebx$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	03 1e                	add    (%esi),%ebx$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	39 07                	cmp    %eax,(%edi)$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	77 dd                	ja     f0100ffd <page_init+0xe9>$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	84 d2                	test   %dl,%dl$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	74 09                	je     f010102d <page_init+0x119>$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	89 98 48 02 00 00    	mov    %ebx,0x248(%eax)$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	5b                   	pop    %ebx$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	5e                   	pop    %esi$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	5f                   	pop    %edi$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	5d                   	pop    %ebp$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	c3                   	ret    $/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035 <page_alloc>:$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	55                   	push   %ebp$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	89 e5                	mov    %esp,%ebp$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	56                   	push   %esi$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	53                   	push   %ebx$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	e8 9a f1 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	81 c3 b5 e0 08 00    	add    $0x8e0b5,%ebx$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	8b b3 48 02 00 00    	mov    0x248(%ebx),%esi$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	85 f6                	test   %esi,%esi$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	74 14                	je     f0101063 <page_alloc+0x2e>$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	8b 06                	mov    (%esi),%eax$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	89 83 48 02 00 00    	mov    %eax,0x248(%ebx)$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	75 09                	jne    f010106c <page_alloc+0x37>$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	89 f0                	mov    %esi,%eax$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	5b                   	pop    %ebx$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	5e                   	pop    %esi$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	5d                   	pop    %ebp$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	c3                   	ret    $/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	89 f2                	mov    %esi,%edx$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	2b 10                	sub    (%eax),%edx$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	89 d0                	mov    %edx,%eax$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	89 c1                	mov    %eax,%ecx$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	73 1a                	jae    f01010a7 <page_alloc+0x72>$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	6a 00                	push   $0x0$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	50                   	push   %eax$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	e8 31 38 00 00       	call   f01048d3 <memset>$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	eb bc                	jmp    f0101063 <page_alloc+0x2e>$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	50                   	push   %eax$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	50                   	push   %eax$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	6a 56                	push   $0x56$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	50                   	push   %eax$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	e8 66 f0 ff ff       	call   f0100123 <_panic>$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd <page_free>:$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	55                   	push   %ebp$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	89 e5                	mov    %esp,%ebp$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	53                   	push   %ebx$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	e8 10 f1 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	81 c3 2b e0 08 00    	add    $0x8e02b,%ebx$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	75 18                	jne    f01010f1 <page_free+0x34>$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	75 13                	jne    f01010f1 <page_free+0x34>$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	8b 8b 48 02 00 00    	mov    0x248(%ebx),%ecx$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	89 08                	mov    %ecx,(%eax)$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	89 83 48 02 00 00    	mov    %eax,0x248(%ebx)$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	c9                   	leave  $/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	c3                   	ret    $/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	8d 83 74 62 f7 ff    	lea    -0x89d8c(%ebx),%eax$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	50                   	push   %eax$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	68 67 01 00 00       	push   $0x167$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	50                   	push   %eax$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	e8 17 f0 ff ff       	call   f0100123 <_panic>$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c <page_decref>:$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	55                   	push   %ebp$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	89 e5                	mov    %esp,%ebp$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	66 85 c0             	test   %ax,%ax$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	74 02                	je     f0101127 <page_decref+0x1b>$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	c9                   	leave  $/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	c3                   	ret    $/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	52                   	push   %edx$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	e8 8d ff ff ff       	call   f01010bd <page_free>$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	eb f0                	jmp    f0101125 <page_decref+0x19>$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135 <pgdir_walk>:$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	55                   	push   %ebp$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	89 e5                	mov    %esp,%ebp$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	57                   	push   %edi$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	56                   	push   %esi$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	53                   	push   %ebx$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	e8 96 f0 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	81 c3 b1 df 08 00    	add    $0x8dfb1,%ebx$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	89 c6                	mov    %eax,%esi$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	8d 3c 85 00 00 00 00 	lea    0x0(,%eax,4),%edi$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	03 7d 08             	add    0x8(%ebp),%edi$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	8b 07                	mov    (%edi),%eax$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	a8 01                	test   $0x1,%al$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	74 3d                	je     f01011a7 <pgdir_walk+0x72>$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	89 c2                	mov    %eax,%edx$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	c7 c1 04 00 19 f0    	mov    $0xf0190004,%ecx$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	39 11                	cmp    %edx,(%ecx)$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	76 10                	jbe    f010118e <pgdir_walk+0x59>$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	8d 04 b0             	lea    (%eax,%esi,4),%eax$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	5b                   	pop    %ebx$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	5e                   	pop    %esi$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	5f                   	pop    %edi$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	5d                   	pop    %ebp$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	c3                   	ret    $/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	50                   	push   %eax$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	50                   	push   %eax$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	68 97 01 00 00       	push   $0x197$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	50                   	push   %eax$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	e8 7c ef ff ff       	call   f0100123 <_panic>$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	74 58                	je     f0101205 <pgdir_walk+0xd0>$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	6a 01                	push   $0x1$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	e8 7e fe ff ff       	call   f0101035 <page_alloc>$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	85 c0                	test   %eax,%eax$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	74 51                	je     f010120f <pgdir_walk+0xda>$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	2b 02                	sub    (%edx),%eax$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	89 c2                	mov    %eax,%edx$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	89 d1                	mov    %edx,%ecx$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	c7 c0 04 00 19 f0    	mov    $0xf0190004,%eax$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	3b 08                	cmp    (%eax),%ecx$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	73 0d                	jae    f01011ef <pgdir_walk+0xba>$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	83 ca 07             	or     $0x7,%edx$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	89 17                	mov    %edx,(%edi)$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	eb 94                	jmp    f0101183 <pgdir_walk+0x4e>$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	52                   	push   %edx$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	50                   	push   %eax$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	6a 56                	push   $0x56$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	50                   	push   %eax$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	e8 1e ef ff ff       	call   f0100123 <_panic>$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	e9 77 ff ff ff       	jmp    f0101186 <pgdir_walk+0x51>$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	e9 6d ff ff ff       	jmp    f0101186 <pgdir_walk+0x51>$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219 <boot_map_region>:$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	55                   	push   %ebp$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	89 e5                	mov    %esp,%ebp$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	57                   	push   %edi$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	56                   	push   %esi$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	53                   	push   %ebx$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	89 c7                	mov    %eax,%edi$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	01 c1                	add    %eax,%ecx$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	89 c3                	mov    %eax,%ebx$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	89 d6                	mov    %edx,%esi$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	29 c6                	sub    %eax,%esi$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	74 28                	je     f0101265 <boot_map_region+0x4c>$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	6a 01                	push   $0x1$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	50                   	push   %eax$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	57                   	push   %edi$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	e8 e9 fe ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	85 c0                	test   %eax,%eax$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	74 12                	je     f0101265 <boot_map_region+0x4c>$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	89 da                	mov    %ebx,%edx$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	0b 55 0c             	or     0xc(%ebp),%edx$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	83 ca 01             	or     $0x1,%edx$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	89 10                	mov    %edx,(%eax)$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	eb d3                	jmp    f0101238 <boot_map_region+0x1f>$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	5b                   	pop    %ebx$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	5e                   	pop    %esi$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	5f                   	pop    %edi$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	5d                   	pop    %ebp$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	c3                   	ret    $/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d <page_lookup>:$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	55                   	push   %ebp$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	53                   	push   %ebx$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	e8 60 ef ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	81 c3 7b de 08 00    	add    $0x8de7b,%ebx$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	6a 00                	push   $0x0$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	e8 a9 fe ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	85 c0                	test   %eax,%eax$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	74 47                	je     f01012da <page_lookup+0x6d>$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	89 02                	mov    %eax,(%edx)$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	8b 10                	mov    (%eax),%edx$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	85 d2                	test   %edx,%edx$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	75 05                	jne    f01012a8 <page_lookup+0x3b>$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	c9                   	leave  $/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	c3                   	ret    $/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	c7 c0 04 00 19 f0    	mov    $0xf0190004,%eax$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	39 10                	cmp    %edx,(%eax)$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	76 0d                	jbe    f01012c2 <page_lookup+0x55>$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	8b 00                	mov    (%eax),%eax$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	eb e1                	jmp    f01012a3 <page_lookup+0x36>$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	8d 83 ac 62 f7 ff    	lea    -0x89d54(%ebx),%eax$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	50                   	push   %eax$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	6a 4f                	push   $0x4f$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	50                   	push   %eax$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	e8 49 ee ff ff       	call   f0100123 <_panic>$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	eb c2                	jmp    f01012a3 <page_lookup+0x36>$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1 <page_remove>:$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	55                   	push   %ebp$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	53                   	push   %ebx$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	50                   	push   %eax$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	53                   	push   %ebx$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	e8 75 ff ff ff       	call   f010126d <page_lookup>$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	85 c0                	test   %eax,%eax$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	74 18                	je     f0101317 <page_remove+0x36>$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	50                   	push   %eax$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	e8 04 fe ff ff       	call   f010110c <page_decref>$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	0f 01 3b             	invlpg (%ebx)$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	c9                   	leave  $/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	c3                   	ret    $/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c <page_insert>:$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	55                   	push   %ebp$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	89 e5                	mov    %esp,%ebp$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	57                   	push   %edi$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	56                   	push   %esi$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	53                   	push   %ebx$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	e8 d2 1c 00 00       	call   f0102ffc <__x86.get_pc_thunk.di>$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	81 c7 ca dd 08 00    	add    $0x8ddca,%edi$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	6a 01                	push   $0x1$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	e8 f5 fd ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	85 c0                	test   %eax,%eax$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	74 44                	je     f010138b <page_insert+0x6f>$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	89 c3                	mov    %eax,%ebx$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	75 25                	jne    f0101378 <page_insert+0x5c>$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	2b 30                	sub    (%eax),%esi$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	89 f0                	mov    %esi,%eax$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	89 03                	mov    %eax,(%ebx)$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	5b                   	pop    %ebx$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	5e                   	pop    %esi$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	5f                   	pop    %edi$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	5d                   	pop    %ebp$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	c3                   	ret    $/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	e8 5b ff ff ff       	call   f01012e1 <page_remove>$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	eb c8                	jmp    f0101353 <page_insert+0x37>$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	eb de                	jmp    f0101370 <page_insert+0x54>$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392 <mem_init>:$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	55                   	push   %ebp$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	89 e5                	mov    %esp,%ebp$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	57                   	push   %edi$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	56                   	push   %esi$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	53                   	push   %ebx$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	e8 39 ee ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	81 c3 54 dd 08 00    	add    $0x8dd54,%ebx$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	e8 37 f7 ff ff       	call   f0100ae7 <nvram_read>$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	89 c6                	mov    %eax,%esi$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	e8 2b f7 ff ff       	call   f0100ae7 <nvram_read>$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	89 c7                	mov    %eax,%edi$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	e8 1f f7 ff ff       	call   f0100ae7 <nvram_read>$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	0f 84 ec 00 00 00    	je     f01014bd <mem_init+0x12b>$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	89 c1                	mov    %eax,%ecx$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	89 0a                	mov    %ecx,(%edx)$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	89 f2                	mov    %esi,%edx$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	89 93 4c 02 00 00    	mov    %edx,0x24c(%ebx)$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	89 c2                	mov    %eax,%edx$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	29 f2                	sub    %esi,%edx$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	52                   	push   %edx$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	56                   	push   %esi$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	50                   	push   %eax$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	8d 83 cc 62 f7 ff    	lea    -0x89d34(%ebx),%eax$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	50                   	push   %eax$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	e8 36 24 00 00       	call   f0103837 <cprintf>$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	e8 93 f6 ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	c7 c6 08 00 19 f0    	mov    $0xf0190008,%esi$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	89 06                	mov    %eax,(%esi)$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	68 00 10 00 00       	push   $0x1000$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	6a 00                	push   $0x0$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	50                   	push   %eax$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	e8 b0 34 00 00       	call   f01048d3 <memset>$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	8b 06                	mov    (%esi),%eax$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	0f 86 9a 00 00 00    	jbe    f01014cd <mem_init+0x13b>$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	83 ca 05             	or     $0x5,%edx$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	c7 c7 04 00 19 f0    	mov    $0xf0190004,%edi$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	8b 07                	mov    (%edi),%eax$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	e8 4c f6 ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	c7 c6 0c 00 19 f0    	mov    $0xf019000c,%esi$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	89 06                	mov    %eax,(%esi)$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	8b 17                	mov    (%edi),%edx$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	52                   	push   %edx$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	6a 00                	push   $0x0$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	50                   	push   %eax$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	e8 68 34 00 00       	call   f01048d3 <memset>$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	b8 00 80 01 00       	mov    $0x18000,%eax$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	e8 29 f6 ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	c7 c2 48 f3 18 f0    	mov    $0xf018f348,%edx$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	89 02                	mov    %eax,(%edx)$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	68 00 80 01 00       	push   $0x18000$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	6a 00                	push   $0x0$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	50                   	push   %eax$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	e8 46 34 00 00       	call   f01048d3 <memset>$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	e8 82 fa ff ff       	call   f0100f14 <page_init>$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	e8 fe f6 ff ff       	call   f0100b9a <check_page_free_list>$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	74 42                	je     f01014e6 <mem_init+0x154>$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	8b 83 48 02 00 00    	mov    0x248(%ebx),%eax$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	85 c0                	test   %eax,%eax$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	74 4c                	je     f0101501 <mem_init+0x16f>$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	8b 00                	mov    (%eax),%eax$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	eb f4                	jmp    f01014b1 <mem_init+0x11f>$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	8d 87 00 04 00 00    	lea    0x400(%edi),%eax$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	85 ff                	test   %edi,%edi$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	e9 09 ff ff ff       	jmp    f01013d6 <mem_init+0x44>$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	50                   	push   %eax$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	50                   	push   %eax$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	68 a1 00 00 00       	push   $0xa1$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	50                   	push   %eax$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	e8 3d ec ff ff       	call   f0100123 <_panic>$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	8d 83 db 69 f7 ff    	lea    -0x89625(%ebx),%eax$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	50                   	push   %eax$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	68 b0 02 00 00       	push   $0x2b0$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	50                   	push   %eax$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	e8 22 ec ff ff       	call   f0100123 <_panic>$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	6a 00                	push   $0x0$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	e8 2a fb ff ff       	call   f0101035 <page_alloc>$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	89 c6                	mov    %eax,%esi$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	85 c0                	test   %eax,%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	0f 84 20 02 00 00    	je     f0101738 <mem_init+0x3a6>$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	6a 00                	push   $0x0$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	e8 13 fb ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	89 c7                	mov    %eax,%edi$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	85 c0                	test   %eax,%eax$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	0f 84 28 02 00 00    	je     f0101757 <mem_init+0x3c5>$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	6a 00                	push   $0x0$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	e8 fc fa ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	85 c0                	test   %eax,%eax$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	0f 84 2f 02 00 00    	je     f0101776 <mem_init+0x3e4>$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	39 fe                	cmp    %edi,%esi$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	0f 84 46 02 00 00    	je     f0101795 <mem_init+0x403>$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	39 c7                	cmp    %eax,%edi$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	0f 84 5a 02 00 00    	je     f01017b4 <mem_init+0x422>$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	39 c6                	cmp    %eax,%esi$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	0f 84 52 02 00 00    	je     f01017b4 <mem_init+0x422>$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	8b 08                	mov    (%eax),%ecx$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	c7 c0 04 00 19 f0    	mov    $0xf0190004,%eax$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	8b 10                	mov    (%eax),%edx$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	89 f0                	mov    %esi,%eax$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	29 c8                	sub    %ecx,%eax$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	39 d0                	cmp    %edx,%eax$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	0f 83 4c 02 00 00    	jae    f01017d3 <mem_init+0x441>$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	89 f8                	mov    %edi,%eax$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	29 c8                	sub    %ecx,%eax$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	39 c2                	cmp    %eax,%edx$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	0f 86 59 02 00 00    	jbe    f01017f2 <mem_init+0x460>$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	29 c8                	sub    %ecx,%eax$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	39 c2                	cmp    %eax,%edx$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	0f 86 65 02 00 00    	jbe    f0101811 <mem_init+0x47f>$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	8b 83 48 02 00 00    	mov    0x248(%ebx),%eax$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	c7 83 48 02 00 00 00 	movl   $0x0,0x248(%ebx)$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	00 00 00 $/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	6a 00                	push   $0x0$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	e8 6c fa ff ff       	call   f0101035 <page_alloc>$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	85 c0                	test   %eax,%eax$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	0f 85 5c 02 00 00    	jne    f0101830 <mem_init+0x49e>$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	56                   	push   %esi$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	e8 e0 fa ff ff       	call   f01010bd <page_free>$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	e8 d8 fa ff ff       	call   f01010bd <page_free>$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	83 c4 04             	add    $0x4,%esp$/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	e8 cd fa ff ff       	call   f01010bd <page_free>$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	e8 39 fa ff ff       	call   f0101035 <page_alloc>$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	89 c6                	mov    %eax,%esi$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	85 c0                	test   %eax,%eax$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	0f 84 46 02 00 00    	je     f010184f <mem_init+0x4bd>$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	6a 00                	push   $0x0$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	e8 22 fa ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	89 c7                	mov    %eax,%edi$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	85 c0                	test   %eax,%eax$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	0f 84 4e 02 00 00    	je     f010186e <mem_init+0x4dc>$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	6a 00                	push   $0x0$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	e8 0b fa ff ff       	call   f0101035 <page_alloc>$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	85 c0                	test   %eax,%eax$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	0f 84 55 02 00 00    	je     f010188d <mem_init+0x4fb>$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	39 fe                	cmp    %edi,%esi$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	0f 84 6c 02 00 00    	je     f01018ac <mem_init+0x51a>$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	39 c7                	cmp    %eax,%edi$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	0f 84 80 02 00 00    	je     f01018cb <mem_init+0x539>$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	39 c6                	cmp    %eax,%esi$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	0f 84 78 02 00 00    	je     f01018cb <mem_init+0x539>$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	6a 00                	push   $0x0$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	e8 d8 f9 ff ff       	call   f0101035 <page_alloc>$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	85 c0                	test   %eax,%eax$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	0f 85 82 02 00 00    	jne    f01018ea <mem_init+0x558>$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	89 f1                	mov    %esi,%ecx$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	2b 08                	sub    (%eax),%ecx$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	89 c8                	mov    %ecx,%eax$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	89 c1                	mov    %eax,%ecx$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	0f 83 7c 02 00 00    	jae    f0101909 <mem_init+0x577>$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	6a 01                	push   $0x1$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	50                   	push   %eax$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	e8 31 32 00 00       	call   f01048d3 <memset>$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	e8 13 fa ff ff       	call   f01010bd <page_free>$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	e8 7f f9 ff ff       	call   f0101035 <page_alloc>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	85 c0                	test   %eax,%eax$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	0f 84 5e 02 00 00    	je     f010191f <mem_init+0x58d>$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	39 c6                	cmp    %eax,%esi$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	0f 85 75 02 00 00    	jne    f010193e <mem_init+0x5ac>$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	2b 02                	sub    (%edx),%eax$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	89 c1                	mov    %eax,%ecx$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	0f 83 73 02 00 00    	jae    f010195d <mem_init+0x5cb>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	2d 00 f0 ff 0f       	sub    $0xffff000,%eax$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	0f 85 75 02 00 00    	jne    f0101973 <mem_init+0x5e1>$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	39 c2                	cmp    %eax,%edx$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	75 f0                	jne    f01016f5 <mem_init+0x363>$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	89 83 48 02 00 00    	mov    %eax,0x248(%ebx)$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	56                   	push   %esi$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	e8 a6 f9 ff ff       	call   f01010bd <page_free>$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	e8 9e f9 ff ff       	call   f01010bd <page_free>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	e8 93 f9 ff ff       	call   f01010bd <page_free>$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	8b 83 48 02 00 00    	mov    0x248(%ebx),%eax$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	e9 60 02 00 00       	jmp    f0101998 <mem_init+0x606>$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	8d 83 f6 69 f7 ff    	lea    -0x8960a(%ebx),%eax$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	50                   	push   %eax$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	50                   	push   %eax$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	68 b8 02 00 00       	push   $0x2b8$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	50                   	push   %eax$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	e8 cc e9 ff ff       	call   f0100123 <_panic>$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	8d 83 0c 6a f7 ff    	lea    -0x895f4(%ebx),%eax$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	50                   	push   %eax$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	50                   	push   %eax$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	68 b9 02 00 00       	push   $0x2b9$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	50                   	push   %eax$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	e8 ad e9 ff ff       	call   f0100123 <_panic>$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	8d 83 22 6a f7 ff    	lea    -0x895de(%ebx),%eax$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	50                   	push   %eax$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	50                   	push   %eax$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	68 ba 02 00 00       	push   $0x2ba$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	50                   	push   %eax$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	e8 8e e9 ff ff       	call   f0100123 <_panic>$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	8d 83 38 6a f7 ff    	lea    -0x895c8(%ebx),%eax$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	50                   	push   %eax$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	50                   	push   %eax$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	68 bd 02 00 00       	push   $0x2bd$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	50                   	push   %eax$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	e8 6f e9 ff ff       	call   f0100123 <_panic>$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	8d 83 08 63 f7 ff    	lea    -0x89cf8(%ebx),%eax$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	50                   	push   %eax$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	50                   	push   %eax$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	68 be 02 00 00       	push   $0x2be$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	50                   	push   %eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	e8 50 e9 ff ff       	call   f0100123 <_panic>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	8d 83 4a 6a f7 ff    	lea    -0x895b6(%ebx),%eax$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	50                   	push   %eax$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	50                   	push   %eax$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	68 bf 02 00 00       	push   $0x2bf$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	50                   	push   %eax$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	e8 31 e9 ff ff       	call   f0100123 <_panic>$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	8d 83 67 6a f7 ff    	lea    -0x89599(%ebx),%eax$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	50                   	push   %eax$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	50                   	push   %eax$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	68 c0 02 00 00       	push   $0x2c0$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	50                   	push   %eax$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	e8 12 e9 ff ff       	call   f0100123 <_panic>$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	8d 83 84 6a f7 ff    	lea    -0x8957c(%ebx),%eax$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	50                   	push   %eax$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	50                   	push   %eax$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	68 c1 02 00 00       	push   $0x2c1$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	50                   	push   %eax$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	e8 f3 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	8d 83 a1 6a f7 ff    	lea    -0x8955f(%ebx),%eax$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	50                   	push   %eax$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	50                   	push   %eax$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	68 c8 02 00 00       	push   $0x2c8$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	50                   	push   %eax$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	e8 d4 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	8d 83 f6 69 f7 ff    	lea    -0x8960a(%ebx),%eax$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	50                   	push   %eax$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	50                   	push   %eax$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	68 cf 02 00 00       	push   $0x2cf$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	50                   	push   %eax$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	e8 b5 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	8d 83 0c 6a f7 ff    	lea    -0x895f4(%ebx),%eax$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	50                   	push   %eax$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	50                   	push   %eax$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	68 d0 02 00 00       	push   $0x2d0$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	50                   	push   %eax$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	e8 96 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	8d 83 22 6a f7 ff    	lea    -0x895de(%ebx),%eax$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	50                   	push   %eax$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	50                   	push   %eax$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	68 d1 02 00 00       	push   $0x2d1$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	50                   	push   %eax$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	e8 77 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	8d 83 38 6a f7 ff    	lea    -0x895c8(%ebx),%eax$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	50                   	push   %eax$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	50                   	push   %eax$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	68 d3 02 00 00       	push   $0x2d3$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	50                   	push   %eax$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	e8 58 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	8d 83 08 63 f7 ff    	lea    -0x89cf8(%ebx),%eax$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	50                   	push   %eax$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	50                   	push   %eax$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	68 d4 02 00 00       	push   $0x2d4$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	50                   	push   %eax$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	e8 39 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	8d 83 a1 6a f7 ff    	lea    -0x8955f(%ebx),%eax$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	50                   	push   %eax$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	50                   	push   %eax$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	68 d5 02 00 00       	push   $0x2d5$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	50                   	push   %eax$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	e8 1a e8 ff ff       	call   f0100123 <_panic>$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	50                   	push   %eax$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	50                   	push   %eax$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	6a 56                	push   $0x56$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	50                   	push   %eax$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	e8 04 e8 ff ff       	call   f0100123 <_panic>$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	8d 83 b0 6a f7 ff    	lea    -0x89550(%ebx),%eax$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	50                   	push   %eax$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	50                   	push   %eax$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	68 da 02 00 00       	push   $0x2da$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	50                   	push   %eax$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	e8 e5 e7 ff ff       	call   f0100123 <_panic>$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	8d 83 ce 6a f7 ff    	lea    -0x89532(%ebx),%eax$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	50                   	push   %eax$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	50                   	push   %eax$/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	68 db 02 00 00       	push   $0x2db$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	50                   	push   %eax$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	e8 c6 e7 ff ff       	call   f0100123 <_panic>$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	50                   	push   %eax$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	50                   	push   %eax$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	6a 56                	push   $0x56$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	50                   	push   %eax$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	e8 b0 e7 ff ff       	call   f0100123 <_panic>$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	8d 83 de 6a f7 ff    	lea    -0x89522(%ebx),%eax$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	50                   	push   %eax$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	50                   	push   %eax$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	68 de 02 00 00       	push   $0x2de$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	50                   	push   %eax$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	e8 91 e7 ff ff       	call   f0100123 <_panic>$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	83 6d d0 01          	subl   $0x1,-0x30(%ebp)$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	8b 00                	mov    (%eax),%eax$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	85 c0                	test   %eax,%eax$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	75 f6                	jne    f0101992 <mem_init+0x600>$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	0f 85 53 08 00 00    	jne    f01021f9 <mem_init+0xe67>$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	8d 83 28 63 f7 ff    	lea    -0x89cd8(%ebx),%eax$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	50                   	push   %eax$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	e8 82 1e 00 00       	call   f0103837 <cprintf>$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	e8 74 f6 ff ff       	call   f0101035 <page_alloc>$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	85 c0                	test   %eax,%eax$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	0f 84 49 08 00 00    	je     f0102218 <mem_init+0xe86>$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	6a 00                	push   $0x0$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	e8 5c f6 ff ff       	call   f0101035 <page_alloc>$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	85 c0                	test   %eax,%eax$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	0f 84 50 08 00 00    	je     f0102237 <mem_init+0xea5>$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	6a 00                	push   $0x0$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	e8 44 f6 ff ff       	call   f0101035 <page_alloc>$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	89 c7                	mov    %eax,%edi$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	85 c0                	test   %eax,%eax$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	0f 84 58 08 00 00    	je     f0102256 <mem_init+0xec4>$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	39 4d d0             	cmp    %ecx,-0x30(%ebp)$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	0f 84 6b 08 00 00    	je     f0102275 <mem_init+0xee3>$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	0f 84 81 08 00 00    	je     f0102294 <mem_init+0xf02>$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	0f 84 78 08 00 00    	je     f0102294 <mem_init+0xf02>$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	8b 83 48 02 00 00    	mov    0x248(%ebx),%eax$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	c7 83 48 02 00 00 00 	movl   $0x0,0x248(%ebx)$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	00 00 00 $/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	6a 00                	push   $0x0$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	e8 fc f5 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	85 c0                	test   %eax,%eax$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	0f 85 6f 08 00 00    	jne    f01022b3 <mem_init+0xf21>$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	50                   	push   %eax$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	6a 00                	push   $0x0$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	ff 30                	pushl  (%eax)$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	e8 13 f8 ff ff       	call   f010126d <page_lookup>$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	85 c0                	test   %eax,%eax$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	0f 85 6d 08 00 00    	jne    f01022d2 <mem_init+0xf40>$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	6a 02                	push   $0x2$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	6a 00                	push   $0x0$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	ff 30                	pushl  (%eax)$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	e8 a3 f8 ff ff       	call   f010131c <page_insert>$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	85 c0                	test   %eax,%eax$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	0f 89 6d 08 00 00    	jns    f01022f1 <mem_init+0xf5f>$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	e8 2e f6 ff ff       	call   f01010bd <page_free>$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	6a 02                	push   $0x2$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	6a 00                	push   $0x0$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	ff 30                	pushl  (%eax)$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	e8 79 f8 ff ff       	call   f010131c <page_insert>$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	85 c0                	test   %eax,%eax$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	0f 85 62 08 00 00    	jne    f0102310 <mem_init+0xf7e>$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	8b 30                	mov    (%eax),%esi$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	8b 16                	mov    (%esi),%edx$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101acc	obj/kern/kernel.asm	/^f0101acc:	29 c8                	sub    %ecx,%eax$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	39 c2                	cmp    %eax,%edx$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	0f 85 53 08 00 00    	jne    f010232f <mem_init+0xf9d>$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	89 f0                	mov    %esi,%eax$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	e8 35 f0 ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101af1	obj/kern/kernel.asm	/^f0101af1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	39 d0                	cmp    %edx,%eax$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	0f 85 52 08 00 00    	jne    f010234e <mem_init+0xfbc>$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	0f 85 63 08 00 00    	jne    f010236d <mem_init+0xfdb>$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	0f 85 74 08 00 00    	jne    f010238c <mem_init+0xffa>$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	6a 02                	push   $0x2$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	57                   	push   %edi$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	56                   	push   %esi$/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	e8 f6 f7 ff ff       	call   f010131c <page_insert>$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	85 c0                	test   %eax,%eax$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	0f 85 7a 08 00 00    	jne    f01023ab <mem_init+0x1019>$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	e8 da ef ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	89 ca                	mov    %ecx,%edx$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	0f 85 6d 08 00 00    	jne    f01023ca <mem_init+0x1038>$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	0f 85 81 08 00 00    	jne    f01023e9 <mem_init+0x1057>$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	6a 00                	push   $0x0$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	e8 c3 f4 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101b72	obj/kern/kernel.asm	/^f0101b72:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	85 c0                	test   %eax,%eax$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	0f 85 8b 08 00 00    	jne    f0102408 <mem_init+0x1076>$/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	6a 02                	push   $0x2$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	57                   	push   %edi$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	ff 30                	pushl  (%eax)$/;"	l
f0101b8d	obj/kern/kernel.asm	/^f0101b8d:	e8 8a f7 ff ff       	call   f010131c <page_insert>$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	85 c0                	test   %eax,%eax$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	0f 85 8a 08 00 00    	jne    f0102427 <mem_init+0x1095>$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	8b 00                	mov    (%eax),%eax$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	e8 6e ef ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	89 f9                	mov    %edi,%ecx$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	89 ca                	mov    %ecx,%edx$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bc3	obj/kern/kernel.asm	/^f0101bc3:	0f 85 7d 08 00 00    	jne    f0102446 <mem_init+0x10b4>$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	0f 85 91 08 00 00    	jne    f0102465 <mem_init+0x10d3>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	6a 00                	push   $0x0$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	e8 57 f4 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	85 c0                	test   %eax,%eax$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	0f 85 9b 08 00 00    	jne    f0102484 <mem_init+0x10f2>$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	8b 10                	mov    (%eax),%edx$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	8b 02                	mov    (%edx),%eax$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	89 c6                	mov    %eax,%esi$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	c7 c1 04 00 19 f0    	mov    $0xf0190004,%ecx$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	3b 31                	cmp    (%ecx),%esi$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	0f 83 98 08 00 00    	jae    f01024a3 <mem_init+0x1111>$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	6a 00                	push   $0x0$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	52                   	push   %edx$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	e8 12 f5 ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	0f 85 88 08 00 00    	jne    f01024bc <mem_init+0x112a>$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	6a 06                	push   $0x6$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	57                   	push   %edi$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	ff 30                	pushl  (%eax)$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	e8 d3 f6 ff ff       	call   f010131c <page_insert>$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	85 c0                	test   %eax,%eax$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	0f 85 87 08 00 00    	jne    f01024db <mem_init+0x1149>$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	8b 30                	mov    (%eax),%esi$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	89 f0                	mov    %esi,%eax$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	e8 b5 ee ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	89 f9                	mov    %edi,%ecx$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	89 ca                	mov    %ecx,%edx$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	0f 85 78 08 00 00    	jne    f01024fa <mem_init+0x1168>$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	0f 85 8c 08 00 00    	jne    f0102519 <mem_init+0x1187>$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	6a 00                	push   $0x0$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	56                   	push   %esi$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	e8 98 f4 ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101ca3	obj/kern/kernel.asm	/^f0101ca3:	0f 84 8f 08 00 00    	je     f0102538 <mem_init+0x11a6>$/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	8b 00                	mov    (%eax),%eax$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	0f 84 9d 08 00 00    	je     f0102557 <mem_init+0x11c5>$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	6a 02                	push   $0x2$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	57                   	push   %edi$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	50                   	push   %eax$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	e8 54 f6 ff ff       	call   f010131c <page_insert>$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	85 c0                	test   %eax,%eax$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	0f 85 a3 08 00 00    	jne    f0102576 <mem_init+0x11e4>$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	6a 00                	push   $0x0$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	ff 30                	pushl  (%eax)$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	e8 4b f4 ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	0f 84 9f 08 00 00    	je     f0102595 <mem_init+0x1203>$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	6a 00                	push   $0x0$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	ff 30                	pushl  (%eax)$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	e8 28 f4 ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	0f 85 9b 08 00 00    	jne    f01025b4 <mem_init+0x1222>$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	6a 02                	push   $0x2$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	ff 30                	pushl  (%eax)$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	e8 ec f5 ff ff       	call   f010131c <page_insert>$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d33	obj/kern/kernel.asm	/^f0101d33:	85 c0                	test   %eax,%eax$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	0f 89 98 08 00 00    	jns    f01025d3 <mem_init+0x1241>$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	6a 02                	push   $0x2$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	ff 30                	pushl  (%eax)$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	e8 ca f5 ff ff       	call   f010131c <page_insert>$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	85 c0                	test   %eax,%eax$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	0f 85 95 08 00 00    	jne    f01025f2 <mem_init+0x1260>$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	6a 00                	push   $0x0$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	ff 30                	pushl  (%eax)$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	e8 c1 f3 ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	0f 85 91 08 00 00    	jne    f0102611 <mem_init+0x127f>$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	8b 00                	mov    (%eax),%eax$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	e8 88 ed ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	2b 32                	sub    (%edx),%esi$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	39 f0                	cmp    %esi,%eax$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	0f 85 82 08 00 00    	jne    f0102630 <mem_init+0x129e>$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	e8 62 ed ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	39 c6                	cmp    %eax,%esi$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	0f 85 8c 08 00 00    	jne    f010264f <mem_init+0x12bd>$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	66 83 78 04 02       	cmpw   $0x2,0x4(%eax)$/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	0f 85 9d 08 00 00    	jne    f010266e <mem_init+0x12dc>$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	0f 85 b1 08 00 00    	jne    f010268d <mem_init+0x12fb>$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	6a 00                	push   $0x0$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	e8 4f f2 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	39 c7                	cmp    %eax,%edi$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	0f 85 bb 08 00 00    	jne    f01026ac <mem_init+0x131a>$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	85 c0                	test   %eax,%eax$/;"	l
f0101df3	obj/kern/kernel.asm	/^f0101df3:	0f 84 b3 08 00 00    	je     f01026ac <mem_init+0x131a>$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	6a 00                	push   $0x0$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	c7 c6 08 00 19 f0    	mov    $0xf0190008,%esi$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	ff 36                	pushl  (%esi)$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	e8 d6 f4 ff ff       	call   f01012e1 <page_remove>$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	8b 36                	mov    (%esi),%esi$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	89 f0                	mov    %esi,%eax$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	e8 04 ed ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	0f 85 a6 08 00 00    	jne    f01026cb <mem_init+0x1339>$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	89 f0                	mov    %esi,%eax$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	e8 ec ec ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	89 ca                	mov    %ecx,%edx$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	0f 85 9e 08 00 00    	jne    f01026ea <mem_init+0x1358>$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	0f 85 af 08 00 00    	jne    f0102709 <mem_init+0x1377>$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	0f 85 c3 08 00 00    	jne    f0102728 <mem_init+0x1396>$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	6a 00                	push   $0x0$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	56                   	push   %esi$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	e8 a7 f4 ff ff       	call   f010131c <page_insert>$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	85 c0                	test   %eax,%eax$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	0f 85 c7 08 00 00    	jne    f0102747 <mem_init+0x13b5>$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	0f 84 d8 08 00 00    	je     f0102766 <mem_init+0x13d4>$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	0f 85 eb 08 00 00    	jne    f0102785 <mem_init+0x13f3>$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	c7 c6 08 00 19 f0    	mov    $0xf0190008,%esi$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	ff 36                	pushl  (%esi)$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	e8 32 f4 ff ff       	call   f01012e1 <page_remove>$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	8b 36                	mov    (%esi),%esi$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	89 f0                	mov    %esi,%eax$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	e8 60 ec ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101ebd	obj/kern/kernel.asm	/^f0101ebd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	0f 85 db 08 00 00    	jne    f01027a4 <mem_init+0x1412>$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	89 f0                	mov    %esi,%eax$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	e8 48 ec ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	0f 85 e5 08 00 00    	jne    f01027c3 <mem_init+0x1431>$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	0f 85 f6 08 00 00    	jne    f01027e2 <mem_init+0x1450>$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101ef1	obj/kern/kernel.asm	/^f0101ef1:	0f 85 0a 09 00 00    	jne    f0102801 <mem_init+0x146f>$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	6a 00                	push   $0x0$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	e8 34 f1 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	85 c0                	test   %eax,%eax$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	0f 84 14 09 00 00    	je     f0102820 <mem_init+0x148e>$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	0f 85 0b 09 00 00    	jne    f0102820 <mem_init+0x148e>$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	6a 00                	push   $0x0$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	e8 16 f1 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	85 c0                	test   %eax,%eax$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	0f 85 15 09 00 00    	jne    f010283f <mem_init+0x14ad>$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	2b 30                	sub    (%eax),%esi$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	89 f0                	mov    %esi,%eax$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	39 c2                	cmp    %eax,%edx$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	0f 85 09 09 00 00    	jne    f010285e <mem_init+0x14cc>$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101f63	obj/kern/kernel.asm	/^f0101f63:	0f 85 14 09 00 00    	jne    f010287d <mem_init+0x14eb>$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	50                   	push   %eax$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	e8 42 f1 ff ff       	call   f01010bd <page_free>$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	6a 01                	push   $0x1$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	68 00 10 40 00       	push   $0x401000$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	c7 c6 08 00 19 f0    	mov    $0xf0190008,%esi$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	ff 36                	pushl  (%esi)$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	e8 a3 f1 ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	8b 36                	mov    (%esi),%esi$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	8b 56 04             	mov    0x4(%esi),%edx$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	c7 c1 04 00 19 f0    	mov    $0xf0190004,%ecx$/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	8b 09                	mov    (%ecx),%ecx$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	89 d0                	mov    %edx,%eax$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	0f 83 e1 08 00 00    	jae    f010289c <mem_init+0x150a>$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	39 55 cc             	cmp    %edx,-0x34(%ebp)$/;"	l
f0101fc4	obj/kern/kernel.asm	/^f0101fc4:	0f 85 eb 08 00 00    	jne    f01028b5 <mem_init+0x1523>$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	2b 30                	sub    (%eax),%esi$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	89 f0                	mov    %esi,%eax$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	89 c2                	mov    %eax,%edx$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101fef	obj/kern/kernel.asm	/^f0101fef:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	0f 86 dd 08 00 00    	jbe    f01028d4 <mem_init+0x1542>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	50                   	push   %eax$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	e8 c4 28 00 00       	call   f01048d3 <memset>$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	e8 a3 f0 ff ff       	call   f01010bd <page_free>$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	6a 01                	push   $0x1$/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	6a 00                	push   $0x0$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	ff 30                	pushl  (%eax)$/;"	l
f0102029	obj/kern/kernel.asm	/^f0102029:	e8 07 f1 ff ff       	call   f0101135 <pgdir_walk>$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	2b 30                	sub    (%eax),%esi$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	89 f0                	mov    %esi,%eax$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	89 c1                	mov    %eax,%ecx$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	0f 83 96 08 00 00    	jae    f01028ea <mem_init+0x1558>$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	2d 00 f0 ff 0f       	sub    $0xffff000,%eax$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	f6 02 01             	testb  $0x1,(%edx)$/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	0f 85 95 08 00 00    	jne    f0102900 <mem_init+0x156e>$/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	83 c2 04             	add    $0x4,%edx$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	39 c2                	cmp    %eax,%edx$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	75 f0                	jne    f0102062 <mem_init+0xcd0>$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	8b 00                	mov    (%eax),%eax$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	89 8b 48 02 00 00    	mov    %ecx,0x248(%ebx)$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	50                   	push   %eax$/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	e8 22 f0 ff ff       	call   f01010bd <page_free>$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	83 c4 04             	add    $0x4,%esp$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	e8 17 f0 ff ff       	call   f01010bd <page_free>$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	e8 0f f0 ff ff       	call   f01010bd <page_free>$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	8d 83 bf 6b f7 ff    	lea    -0x89441(%ebx),%eax$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	e8 7b 17 00 00       	call   f0103837 <cprintf>$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	8b 00                	mov    (%eax),%eax$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	0f 86 4d 08 00 00    	jbe    f010291f <mem_init+0x158d>$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	8b 0a                	mov    (%edx),%ecx$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	c1 e1 03             	shl    $0x3,%ecx$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	6a 05                	push   $0x5$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	50                   	push   %eax$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	8b 00                	mov    (%eax),%eax$/;"	l
f01020f5	obj/kern/kernel.asm	/^f01020f5:	e8 1f f1 ff ff       	call   f0101219 <boot_map_region>$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	c7 c0 48 f3 18 f0    	mov    $0xf018f348,%eax$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	8b 00                	mov    (%eax),%eax$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	0f 86 28 08 00 00    	jbe    f0102938 <mem_init+0x15a6>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102113	obj/kern/kernel.asm	/^f0102113:	6a 05                	push   $0x5$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	50                   	push   %eax$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	b9 00 80 01 00       	mov    $0x18000,%ecx$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102125	obj/kern/kernel.asm	/^f0102125:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	8b 00                	mov    (%eax),%eax$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	e8 e7 f0 ff ff       	call   f0101219 <boot_map_region>$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	c7 c0 00 30 11 f0    	mov    $0xf0113000,%eax$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	0f 86 08 08 00 00    	jbe    f0102951 <mem_init+0x15bf>$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	c7 c6 08 00 19 f0    	mov    $0xf0190008,%esi$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	6a 03                	push   $0x3$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	50                   	push   %eax$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	8b 06                	mov    (%esi),%eax$/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	e8 ab f0 ff ff       	call   f0101219 <boot_map_region>$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102171	obj/kern/kernel.asm	/^f0102171:	6a 03                	push   $0x3$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	6a 00                	push   $0x0$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	8b 06                	mov    (%esi),%eax$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	e8 93 f0 ff ff       	call   f0101219 <boot_map_region>$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	8b 3e                	mov    (%esi),%edi$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	c7 c0 04 00 19 f0    	mov    $0xf0190004,%eax$/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	8b 00                	mov    (%eax),%eax$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	8b 00                	mov    (%eax),%eax$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	39 75 d0             	cmp    %esi,-0x30(%ebp)$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	0f 86 db 07 00 00    	jbe    f01029a4 <mem_init+0x1612>$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edx$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	89 f8                	mov    %edi,%eax$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	e8 47 e9 ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f01021dd	obj/kern/kernel.asm	/^f01021dd:	0f 86 87 07 00 00    	jbe    f010296a <mem_init+0x15d8>$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	39 d0                	cmp    %edx,%eax$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	0f 85 94 07 00 00    	jne    f0102985 <mem_init+0x15f3>$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	eb c7                	jmp    f01021c0 <mem_init+0xe2e>$/;"	l
f01021f9	obj/kern/kernel.asm	/^f01021f9:	8d 83 e8 6a f7 ff    	lea    -0x89518(%ebx),%eax$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	50                   	push   %eax$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	50                   	push   %eax$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	68 eb 02 00 00       	push   $0x2eb$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102212	obj/kern/kernel.asm	/^f0102212:	50                   	push   %eax$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	e8 0b df ff ff       	call   f0100123 <_panic>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	8d 83 f6 69 f7 ff    	lea    -0x8960a(%ebx),%eax$/;"	l
f010221e	obj/kern/kernel.asm	/^f010221e:	50                   	push   %eax$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	50                   	push   %eax$/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	68 50 03 00 00       	push   $0x350$/;"	l
f010222b	obj/kern/kernel.asm	/^f010222b:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	50                   	push   %eax$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	e8 ec de ff ff       	call   f0100123 <_panic>$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	8d 83 0c 6a f7 ff    	lea    -0x895f4(%ebx),%eax$/;"	l
f010223d	obj/kern/kernel.asm	/^f010223d:	50                   	push   %eax$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	50                   	push   %eax$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	68 51 03 00 00       	push   $0x351$/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	50                   	push   %eax$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	e8 cd de ff ff       	call   f0100123 <_panic>$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	8d 83 22 6a f7 ff    	lea    -0x895de(%ebx),%eax$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	50                   	push   %eax$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	50                   	push   %eax$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	68 52 03 00 00       	push   $0x352$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	50                   	push   %eax$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	e8 ae de ff ff       	call   f0100123 <_panic>$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	8d 83 38 6a f7 ff    	lea    -0x895c8(%ebx),%eax$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	50                   	push   %eax$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	50                   	push   %eax$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	68 55 03 00 00       	push   $0x355$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	50                   	push   %eax$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	e8 8f de ff ff       	call   f0100123 <_panic>$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	8d 83 08 63 f7 ff    	lea    -0x89cf8(%ebx),%eax$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	50                   	push   %eax$/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	50                   	push   %eax$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	68 56 03 00 00       	push   $0x356$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	50                   	push   %eax$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	e8 70 de ff ff       	call   f0100123 <_panic>$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	8d 83 a1 6a f7 ff    	lea    -0x8955f(%ebx),%eax$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	50                   	push   %eax$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	50                   	push   %eax$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	68 5d 03 00 00       	push   $0x35d$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	50                   	push   %eax$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	e8 51 de ff ff       	call   f0100123 <_panic>$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	8d 83 48 63 f7 ff    	lea    -0x89cb8(%ebx),%eax$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	50                   	push   %eax$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	50                   	push   %eax$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	68 60 03 00 00       	push   $0x360$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	50                   	push   %eax$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	e8 32 de ff ff       	call   f0100123 <_panic>$/;"	l
f01022f1	obj/kern/kernel.asm	/^f01022f1:	8d 83 80 63 f7 ff    	lea    -0x89c80(%ebx),%eax$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	50                   	push   %eax$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	50                   	push   %eax$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	68 63 03 00 00       	push   $0x363$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010230a	obj/kern/kernel.asm	/^f010230a:	50                   	push   %eax$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	e8 13 de ff ff       	call   f0100123 <_panic>$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	8d 83 b0 63 f7 ff    	lea    -0x89c50(%ebx),%eax$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	50                   	push   %eax$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	50                   	push   %eax$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	68 67 03 00 00       	push   $0x367$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	50                   	push   %eax$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	e8 f4 dd ff ff       	call   f0100123 <_panic>$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	8d 83 e0 63 f7 ff    	lea    -0x89c20(%ebx),%eax$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	50                   	push   %eax$/;"	l
f0102336	obj/kern/kernel.asm	/^f0102336:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	50                   	push   %eax$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	68 68 03 00 00       	push   $0x368$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	50                   	push   %eax$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	e8 d5 dd ff ff       	call   f0100123 <_panic>$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	8d 83 08 64 f7 ff    	lea    -0x89bf8(%ebx),%eax$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	50                   	push   %eax$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	50                   	push   %eax$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	68 69 03 00 00       	push   $0x369$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	50                   	push   %eax$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	e8 b6 dd ff ff       	call   f0100123 <_panic>$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	8d 83 f3 6a f7 ff    	lea    -0x8950d(%ebx),%eax$/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	50                   	push   %eax$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	50                   	push   %eax$/;"	l
f010237b	obj/kern/kernel.asm	/^f010237b:	68 6a 03 00 00       	push   $0x36a$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	50                   	push   %eax$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	e8 97 dd ff ff       	call   f0100123 <_panic>$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	8d 83 04 6b f7 ff    	lea    -0x894fc(%ebx),%eax$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	50                   	push   %eax$/;"	l
f0102393	obj/kern/kernel.asm	/^f0102393:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	50                   	push   %eax$/;"	l
f010239a	obj/kern/kernel.asm	/^f010239a:	68 6b 03 00 00       	push   $0x36b$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	50                   	push   %eax$/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	e8 78 dd ff ff       	call   f0100123 <_panic>$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	8d 83 38 64 f7 ff    	lea    -0x89bc8(%ebx),%eax$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	50                   	push   %eax$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	50                   	push   %eax$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	68 6e 03 00 00       	push   $0x36e$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	50                   	push   %eax$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	e8 59 dd ff ff       	call   f0100123 <_panic>$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	8d 83 74 64 f7 ff    	lea    -0x89b8c(%ebx),%eax$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	50                   	push   %eax$/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	50                   	push   %eax$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	68 6f 03 00 00       	push   $0x36f$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	50                   	push   %eax$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	e8 3a dd ff ff       	call   f0100123 <_panic>$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	8d 83 15 6b f7 ff    	lea    -0x894eb(%ebx),%eax$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	50                   	push   %eax$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	50                   	push   %eax$/;"	l
f01023f7	obj/kern/kernel.asm	/^f01023f7:	68 70 03 00 00       	push   $0x370$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	50                   	push   %eax$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	e8 1b dd ff ff       	call   f0100123 <_panic>$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	8d 83 a1 6a f7 ff    	lea    -0x8955f(%ebx),%eax$/;"	l
f010240e	obj/kern/kernel.asm	/^f010240e:	50                   	push   %eax$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	50                   	push   %eax$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	68 73 03 00 00       	push   $0x373$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	50                   	push   %eax$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	e8 fc dc ff ff       	call   f0100123 <_panic>$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	8d 83 38 64 f7 ff    	lea    -0x89bc8(%ebx),%eax$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	50                   	push   %eax$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	50                   	push   %eax$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	68 76 03 00 00       	push   $0x376$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	50                   	push   %eax$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	e8 dd dc ff ff       	call   f0100123 <_panic>$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	8d 83 74 64 f7 ff    	lea    -0x89b8c(%ebx),%eax$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	50                   	push   %eax$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	50                   	push   %eax$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	68 77 03 00 00       	push   $0x377$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	50                   	push   %eax$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	e8 be dc ff ff       	call   f0100123 <_panic>$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	8d 83 15 6b f7 ff    	lea    -0x894eb(%ebx),%eax$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	50                   	push   %eax$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	50                   	push   %eax$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	68 78 03 00 00       	push   $0x378$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	50                   	push   %eax$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	e8 9f dc ff ff       	call   f0100123 <_panic>$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	8d 83 a1 6a f7 ff    	lea    -0x8955f(%ebx),%eax$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	50                   	push   %eax$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	50                   	push   %eax$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	68 7c 03 00 00       	push   $0x37c$/;"	l
f0102497	obj/kern/kernel.asm	/^f0102497:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010249d	obj/kern/kernel.asm	/^f010249d:	50                   	push   %eax$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	e8 80 dc ff ff       	call   f0100123 <_panic>$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	50                   	push   %eax$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	50                   	push   %eax$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	68 7f 03 00 00       	push   $0x37f$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	50                   	push   %eax$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	e8 67 dc ff ff       	call   f0100123 <_panic>$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	8d 83 a4 64 f7 ff    	lea    -0x89b5c(%ebx),%eax$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	50                   	push   %eax$/;"	l
f01024c3	obj/kern/kernel.asm	/^f01024c3:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	50                   	push   %eax$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	68 80 03 00 00       	push   $0x380$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	50                   	push   %eax$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	e8 48 dc ff ff       	call   f0100123 <_panic>$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	8d 83 e4 64 f7 ff    	lea    -0x89b1c(%ebx),%eax$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	50                   	push   %eax$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	50                   	push   %eax$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	68 83 03 00 00       	push   $0x383$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	50                   	push   %eax$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	e8 29 dc ff ff       	call   f0100123 <_panic>$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	8d 83 74 64 f7 ff    	lea    -0x89b8c(%ebx),%eax$/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	50                   	push   %eax$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	50                   	push   %eax$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	68 84 03 00 00       	push   $0x384$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	50                   	push   %eax$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	e8 0a dc ff ff       	call   f0100123 <_panic>$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	8d 83 15 6b f7 ff    	lea    -0x894eb(%ebx),%eax$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	50                   	push   %eax$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	50                   	push   %eax$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	68 85 03 00 00       	push   $0x385$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	50                   	push   %eax$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	e8 eb db ff ff       	call   f0100123 <_panic>$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	8d 83 24 65 f7 ff    	lea    -0x89adc(%ebx),%eax$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	50                   	push   %eax$/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	50                   	push   %eax$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	68 86 03 00 00       	push   $0x386$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	50                   	push   %eax$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	e8 cc db ff ff       	call   f0100123 <_panic>$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	8d 83 26 6b f7 ff    	lea    -0x894da(%ebx),%eax$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	50                   	push   %eax$/;"	l
f010255e	obj/kern/kernel.asm	/^f010255e:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	50                   	push   %eax$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	68 87 03 00 00       	push   $0x387$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	50                   	push   %eax$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	e8 ad db ff ff       	call   f0100123 <_panic>$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	8d 83 38 64 f7 ff    	lea    -0x89bc8(%ebx),%eax$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	50                   	push   %eax$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	50                   	push   %eax$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	68 8a 03 00 00       	push   $0x38a$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	50                   	push   %eax$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	e8 8e db ff ff       	call   f0100123 <_panic>$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	8d 83 58 65 f7 ff    	lea    -0x89aa8(%ebx),%eax$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	50                   	push   %eax$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	50                   	push   %eax$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	68 8b 03 00 00       	push   $0x38b$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	50                   	push   %eax$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	e8 6f db ff ff       	call   f0100123 <_panic>$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	8d 83 8c 65 f7 ff    	lea    -0x89a74(%ebx),%eax$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	50                   	push   %eax$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	50                   	push   %eax$/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	68 8c 03 00 00       	push   $0x38c$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	50                   	push   %eax$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	e8 50 db ff ff       	call   f0100123 <_panic>$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	8d 83 c4 65 f7 ff    	lea    -0x89a3c(%ebx),%eax$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	50                   	push   %eax$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	50                   	push   %eax$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	68 8f 03 00 00       	push   $0x38f$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	50                   	push   %eax$/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	e8 31 db ff ff       	call   f0100123 <_panic>$/;"	l
f01025f2	obj/kern/kernel.asm	/^f01025f2:	8d 83 fc 65 f7 ff    	lea    -0x89a04(%ebx),%eax$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	50                   	push   %eax$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	50                   	push   %eax$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	68 92 03 00 00       	push   $0x392$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010260b	obj/kern/kernel.asm	/^f010260b:	50                   	push   %eax$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	e8 12 db ff ff       	call   f0100123 <_panic>$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	8d 83 8c 65 f7 ff    	lea    -0x89a74(%ebx),%eax$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	50                   	push   %eax$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010261e	obj/kern/kernel.asm	/^f010261e:	50                   	push   %eax$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	68 93 03 00 00       	push   $0x393$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	50                   	push   %eax$/;"	l
f010262b	obj/kern/kernel.asm	/^f010262b:	e8 f3 da ff ff       	call   f0100123 <_panic>$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	8d 83 38 66 f7 ff    	lea    -0x899c8(%ebx),%eax$/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	50                   	push   %eax$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	50                   	push   %eax$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	68 96 03 00 00       	push   $0x396$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102649	obj/kern/kernel.asm	/^f0102649:	50                   	push   %eax$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	e8 d4 da ff ff       	call   f0100123 <_panic>$/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	8d 83 64 66 f7 ff    	lea    -0x8999c(%ebx),%eax$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	50                   	push   %eax$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	50                   	push   %eax$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	68 97 03 00 00       	push   $0x397$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	50                   	push   %eax$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	e8 b5 da ff ff       	call   f0100123 <_panic>$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	8d 83 3c 6b f7 ff    	lea    -0x894c4(%ebx),%eax$/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	50                   	push   %eax$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	50                   	push   %eax$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	68 99 03 00 00       	push   $0x399$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	50                   	push   %eax$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	e8 96 da ff ff       	call   f0100123 <_panic>$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	8d 83 4d 6b f7 ff    	lea    -0x894b3(%ebx),%eax$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	50                   	push   %eax$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	50                   	push   %eax$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	68 9a 03 00 00       	push   $0x39a$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	50                   	push   %eax$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	e8 77 da ff ff       	call   f0100123 <_panic>$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	8d 83 94 66 f7 ff    	lea    -0x8996c(%ebx),%eax$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	50                   	push   %eax$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01026b9	obj/kern/kernel.asm	/^f01026b9:	50                   	push   %eax$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	68 9d 03 00 00       	push   $0x39d$/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	50                   	push   %eax$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	e8 58 da ff ff       	call   f0100123 <_panic>$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	8d 83 b8 66 f7 ff    	lea    -0x89948(%ebx),%eax$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	50                   	push   %eax$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	50                   	push   %eax$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	68 a1 03 00 00       	push   $0x3a1$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	50                   	push   %eax$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	e8 39 da ff ff       	call   f0100123 <_panic>$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	8d 83 64 66 f7 ff    	lea    -0x8999c(%ebx),%eax$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	50                   	push   %eax$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	50                   	push   %eax$/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	68 a2 03 00 00       	push   $0x3a2$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	50                   	push   %eax$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	e8 1a da ff ff       	call   f0100123 <_panic>$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	8d 83 f3 6a f7 ff    	lea    -0x8950d(%ebx),%eax$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	50                   	push   %eax$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	50                   	push   %eax$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	68 a3 03 00 00       	push   $0x3a3$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	50                   	push   %eax$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	e8 fb d9 ff ff       	call   f0100123 <_panic>$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	8d 83 4d 6b f7 ff    	lea    -0x894b3(%ebx),%eax$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	50                   	push   %eax$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	50                   	push   %eax$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	68 a4 03 00 00       	push   $0x3a4$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102741	obj/kern/kernel.asm	/^f0102741:	50                   	push   %eax$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	e8 dc d9 ff ff       	call   f0100123 <_panic>$/;"	l
f0102747	obj/kern/kernel.asm	/^f0102747:	8d 83 dc 66 f7 ff    	lea    -0x89924(%ebx),%eax$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	50                   	push   %eax$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	50                   	push   %eax$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	68 a7 03 00 00       	push   $0x3a7$/;"	l
f010275a	obj/kern/kernel.asm	/^f010275a:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	50                   	push   %eax$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	e8 bd d9 ff ff       	call   f0100123 <_panic>$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	8d 83 5e 6b f7 ff    	lea    -0x894a2(%ebx),%eax$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	50                   	push   %eax$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	50                   	push   %eax$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	68 a8 03 00 00       	push   $0x3a8$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	50                   	push   %eax$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	e8 9e d9 ff ff       	call   f0100123 <_panic>$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	8d 83 6a 6b f7 ff    	lea    -0x89496(%ebx),%eax$/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	50                   	push   %eax$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	50                   	push   %eax$/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	68 a9 03 00 00       	push   $0x3a9$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	50                   	push   %eax$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	e8 7f d9 ff ff       	call   f0100123 <_panic>$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	8d 83 b8 66 f7 ff    	lea    -0x89948(%ebx),%eax$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	50                   	push   %eax$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	50                   	push   %eax$/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	68 ad 03 00 00       	push   $0x3ad$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	50                   	push   %eax$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	e8 60 d9 ff ff       	call   f0100123 <_panic>$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	8d 83 14 67 f7 ff    	lea    -0x898ec(%ebx),%eax$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	50                   	push   %eax$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	50                   	push   %eax$/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	68 ae 03 00 00       	push   $0x3ae$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc:	50                   	push   %eax$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	e8 41 d9 ff ff       	call   f0100123 <_panic>$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	8d 83 7f 6b f7 ff    	lea    -0x89481(%ebx),%eax$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	50                   	push   %eax$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	50                   	push   %eax$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	68 af 03 00 00       	push   $0x3af$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	50                   	push   %eax$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	e8 22 d9 ff ff       	call   f0100123 <_panic>$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	8d 83 4d 6b f7 ff    	lea    -0x894b3(%ebx),%eax$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	50                   	push   %eax$/;"	l
f0102808	obj/kern/kernel.asm	/^f0102808:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	50                   	push   %eax$/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	68 b0 03 00 00       	push   $0x3b0$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	50                   	push   %eax$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	e8 03 d9 ff ff       	call   f0100123 <_panic>$/;"	l
f0102820	obj/kern/kernel.asm	/^f0102820:	8d 83 3c 67 f7 ff    	lea    -0x898c4(%ebx),%eax$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	50                   	push   %eax$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	50                   	push   %eax$/;"	l
f010282e	obj/kern/kernel.asm	/^f010282e:	68 b3 03 00 00       	push   $0x3b3$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	50                   	push   %eax$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	e8 e4 d8 ff ff       	call   f0100123 <_panic>$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	8d 83 a1 6a f7 ff    	lea    -0x8955f(%ebx),%eax$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	50                   	push   %eax$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	50                   	push   %eax$/;"	l
f010284d	obj/kern/kernel.asm	/^f010284d:	68 b6 03 00 00       	push   $0x3b6$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	50                   	push   %eax$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	e8 c5 d8 ff ff       	call   f0100123 <_panic>$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	8d 83 e0 63 f7 ff    	lea    -0x89c20(%ebx),%eax$/;"	l
f0102864	obj/kern/kernel.asm	/^f0102864:	50                   	push   %eax$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	50                   	push   %eax$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	68 b9 03 00 00       	push   $0x3b9$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	50                   	push   %eax$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	e8 a6 d8 ff ff       	call   f0100123 <_panic>$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	8d 83 04 6b f7 ff    	lea    -0x894fc(%ebx),%eax$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	50                   	push   %eax$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	50                   	push   %eax$/;"	l
f010288b	obj/kern/kernel.asm	/^f010288b:	68 bb 03 00 00       	push   $0x3bb$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	50                   	push   %eax$/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	e8 87 d8 ff ff       	call   f0100123 <_panic>$/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	52                   	push   %edx$/;"	l
f010289d	obj/kern/kernel.asm	/^f010289d:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	50                   	push   %eax$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	68 c2 03 00 00       	push   $0x3c2$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	50                   	push   %eax$/;"	l
f01028b0	obj/kern/kernel.asm	/^f01028b0:	e8 6e d8 ff ff       	call   f0100123 <_panic>$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	8d 83 90 6b f7 ff    	lea    -0x89470(%ebx),%eax$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	50                   	push   %eax$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	50                   	push   %eax$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	68 c3 03 00 00       	push   $0x3c3$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	50                   	push   %eax$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	e8 4f d8 ff ff       	call   f0100123 <_panic>$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	50                   	push   %eax$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	50                   	push   %eax$/;"	l
f01028dc	obj/kern/kernel.asm	/^f01028dc:	6a 56                	push   $0x56$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	50                   	push   %eax$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	e8 39 d8 ff ff       	call   f0100123 <_panic>$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	50                   	push   %eax$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	50                   	push   %eax$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	6a 56                	push   $0x56$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	50                   	push   %eax$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	e8 23 d8 ff ff       	call   f0100123 <_panic>$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	8d 83 a8 6b f7 ff    	lea    -0x89458(%ebx),%eax$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	50                   	push   %eax$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	50                   	push   %eax$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	68 cd 03 00 00       	push   $0x3cd$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	50                   	push   %eax$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	e8 04 d8 ff ff       	call   f0100123 <_panic>$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	50                   	push   %eax$/;"	l
f0102920	obj/kern/kernel.asm	/^f0102920:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	50                   	push   %eax$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	68 cf 00 00 00       	push   $0xcf$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	50                   	push   %eax$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	e8 eb d7 ff ff       	call   f0100123 <_panic>$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	50                   	push   %eax$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	50                   	push   %eax$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	68 d8 00 00 00       	push   $0xd8$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	50                   	push   %eax$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	e8 d2 d7 ff ff       	call   f0100123 <_panic>$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	50                   	push   %eax$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f0102958	obj/kern/kernel.asm	/^f0102958:	50                   	push   %eax$/;"	l
f0102959	obj/kern/kernel.asm	/^f0102959:	68 e5 00 00 00       	push   $0xe5$/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	50                   	push   %eax$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	e8 b9 d7 ff ff       	call   f0100123 <_panic>$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	50                   	push   %eax$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	68 04 03 00 00       	push   $0x304$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	50                   	push   %eax$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	e8 9e d7 ff ff       	call   f0100123 <_panic>$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	8d 83 60 67 f7 ff    	lea    -0x898a0(%ebx),%eax$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	50                   	push   %eax$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	50                   	push   %eax$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	68 04 03 00 00       	push   $0x304$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	50                   	push   %eax$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	e8 7f d7 ff ff       	call   f0100123 <_panic>$/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	c7 c0 48 f3 18 f0    	mov    $0xf018f348,%eax$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	8b 00                	mov    (%eax),%eax$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01029b2	obj/kern/kernel.asm	/^f01029b2:	be 00 00 c0 ee       	mov    $0xeec00000,%esi$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	05 00 00 40 21       	add    $0x21400000,%eax$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	89 f2                	mov    %esi,%edx$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	89 f8                	mov    %edi,%eax$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	e8 55 e1 ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	76 28                	jbe    f01029f9 <mem_init+0x1667>$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	8d 14 31             	lea    (%ecx,%esi,1),%edx$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	39 d0                	cmp    %edx,%eax$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	75 39                	jne    f0102a14 <mem_init+0x1682>$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	81 fe 00 80 c1 ee    	cmp    $0xeec18000,%esi$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	75 d6                	jne    f01029bf <mem_init+0x162d>$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01029f7	obj/kern/kernel.asm	/^f01029f7:	eb 40                	jmp    f0102a39 <mem_init+0x16a7>$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	50                   	push   %eax$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	68 0b 03 00 00       	push   $0x30b$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	50                   	push   %eax$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	e8 0f d7 ff ff       	call   f0100123 <_panic>$/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	8d 83 94 67 f7 ff    	lea    -0x8986c(%ebx),%eax$/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	50                   	push   %eax$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	50                   	push   %eax$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	68 0b 03 00 00       	push   $0x30b$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	50                   	push   %eax$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	e8 f0 d6 ff ff       	call   f0100123 <_panic>$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	3b 75 d0             	cmp    -0x30(%ebp),%esi$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	73 30                	jae    f0102a6e <mem_init+0x16dc>$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edx$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	89 f8                	mov    %edi,%eax$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	e8 d2 e0 ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	39 c6                	cmp    %eax,%esi$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	74 e4                	je     f0102a33 <mem_init+0x16a1>$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	8d 83 c8 67 f7 ff    	lea    -0x89838(%ebx),%eax$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	50                   	push   %eax$/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	50                   	push   %eax$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	68 12 03 00 00       	push   $0x312$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	50                   	push   %eax$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	e8 b5 d6 ff ff       	call   f0100123 <_panic>$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	89 f2                	mov    %esi,%edx$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	89 f8                	mov    %edi,%eax$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	e8 96 e0 ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	8d 14 31             	lea    (%ecx,%esi,1),%edx$/;"	l
f0102a8d	obj/kern/kernel.asm	/^f0102a8d:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	0f 85 85 00 00 00    	jne    f0102b1a <mem_init+0x1788>$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102a9b	obj/kern/kernel.asm	/^f0102a9b:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esi$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	75 db                	jne    f0102a7e <mem_init+0x16ec>$/;"	l
f0102aa3	obj/kern/kernel.asm	/^f0102aa3:	ba 00 00 c0 ef       	mov    $0xefc00000,%edx$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	89 f8                	mov    %edi,%eax$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	e8 6e e0 ff ff       	call   f0100b1d <check_va2pa>$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	0f 85 81 00 00 00    	jne    f0102b39 <mem_init+0x17a7>$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	0f 87 90 00 00 00    	ja     f0102b58 <mem_init+0x17c6>$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	0f 85 d5 00 00 00    	jne    f0102ba7 <mem_init+0x1815>$/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	0f 87 e6 00 00 00    	ja     f0102bc6 <mem_init+0x1834>$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	72 d6                	jb     f0102abd <mem_init+0x172b>$/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	3d bd 03 00 00       	cmp    $0x3bd,%eax$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	76 07                	jbe    f0102af5 <mem_init+0x1763>$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	75 c8                	jne    f0102abd <mem_init+0x172b>$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	75 d7                	jne    f0102ad2 <mem_init+0x1740>$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	8d 83 d8 6b f7 ff    	lea    -0x89428(%ebx),%eax$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	50                   	push   %eax$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	50                   	push   %eax$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	68 22 03 00 00       	push   $0x322$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	50                   	push   %eax$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	e8 09 d6 ff ff       	call   f0100123 <_panic>$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	8d 83 f0 67 f7 ff    	lea    -0x89810(%ebx),%eax$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	50                   	push   %eax$/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	50                   	push   %eax$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	68 17 03 00 00       	push   $0x317$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	50                   	push   %eax$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	e8 ea d5 ff ff       	call   f0100123 <_panic>$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	8d 83 38 68 f7 ff    	lea    -0x897c8(%ebx),%eax$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	50                   	push   %eax$/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	50                   	push   %eax$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	68 18 03 00 00       	push   $0x318$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	50                   	push   %eax$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	e8 cb d5 ff ff       	call   f0100123 <_panic>$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	74 28                	je     f0102b88 <mem_init+0x17f6>$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	0f 85 69 ff ff ff    	jne    f0102ad2 <mem_init+0x1740>$/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	8d 83 e9 6b f7 ff    	lea    -0x89417(%ebx),%eax$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	50                   	push   %eax$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102b76	obj/kern/kernel.asm	/^f0102b76:	50                   	push   %eax$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	68 27 03 00 00       	push   $0x327$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102b82	obj/kern/kernel.asm	/^f0102b82:	50                   	push   %eax$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	e8 9b d5 ff ff       	call   f0100123 <_panic>$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	8d 83 d8 6b f7 ff    	lea    -0x89428(%ebx),%eax$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	50                   	push   %eax$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	50                   	push   %eax$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	68 26 03 00 00       	push   $0x326$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	50                   	push   %eax$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	e8 7c d5 ff ff       	call   f0100123 <_panic>$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	8d 83 fa 6b f7 ff    	lea    -0x89406(%ebx),%eax$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	50                   	push   %eax$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	50                   	push   %eax$/;"	l
f0102bb5	obj/kern/kernel.asm	/^f0102bb5:	68 29 03 00 00       	push   $0x329$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	50                   	push   %eax$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	e8 5d d5 ff ff       	call   f0100123 <_panic>$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	8d 83 68 68 f7 ff    	lea    -0x89798(%ebx),%eax$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	50                   	push   %eax$/;"	l
f0102bd0	obj/kern/kernel.asm	/^f0102bd0:	e8 62 0c 00 00       	call   f0103837 <cprintf>$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	8b 00                	mov    (%eax),%eax$/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	0f 86 28 02 00 00    	jbe    f0102e13 <mem_init+0x1a81>$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	e8 9d df ff ff       	call   f0100b9a <check_page_free_list>$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	6a 00                	push   $0x0$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	e8 20 e4 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	89 c7                	mov    %eax,%edi$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	85 c0                	test   %eax,%eax$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	0f 84 0a 02 00 00    	je     f0102e2c <mem_init+0x1a9a>$/;"	l
f0102c22	obj/kern/kernel.asm	/^f0102c22:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	6a 00                	push   $0x0$/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	e8 09 e4 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	85 c0                	test   %eax,%eax$/;"	l
f0102c34	obj/kern/kernel.asm	/^f0102c34:	0f 84 11 02 00 00    	je     f0102e4b <mem_init+0x1ab9>$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	6a 00                	push   $0x0$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	e8 f1 e3 ff ff       	call   f0101035 <page_alloc>$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	89 c6                	mov    %eax,%esi$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	85 c0                	test   %eax,%eax$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	0f 84 19 02 00 00    	je     f0102e6a <mem_init+0x1ad8>$/;"	l
f0102c51	obj/kern/kernel.asm	/^f0102c51:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	57                   	push   %edi$/;"	l
f0102c55	obj/kern/kernel.asm	/^f0102c55:	e8 63 e4 ff ff       	call   f01010bd <page_free>$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	2b 08                	sub    (%eax),%ecx$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	89 c8                	mov    %ecx,%eax$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c6d	obj/kern/kernel.asm	/^f0102c6d:	89 c1                	mov    %eax,%ecx$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	0f 83 06 02 00 00    	jae    f0102e89 <mem_init+0x1af7>$/;"	l
f0102c83	obj/kern/kernel.asm	/^f0102c83:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c86	obj/kern/kernel.asm	/^f0102c86:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	6a 01                	push   $0x1$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	50                   	push   %eax$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	e8 3b 1c 00 00       	call   f01048d3 <memset>$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e:	89 f1                	mov    %esi,%ecx$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	2b 08                	sub    (%eax),%ecx$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	89 c8                	mov    %ecx,%eax$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	89 c1                	mov    %eax,%ecx$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	0f 83 df 01 00 00    	jae    f0102e9f <mem_init+0x1b0d>$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	6a 02                	push   $0x2$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	50                   	push   %eax$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	e8 fe 1b 00 00       	call   f01048d3 <memset>$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	6a 02                	push   $0x2$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	ff 30                	pushl  (%eax)$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	e8 30 e6 ff ff       	call   f010131c <page_insert>$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	0f 85 b8 01 00 00    	jne    f0102eb5 <mem_init+0x1b23>$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102d04	obj/kern/kernel.asm	/^f0102d04:	01 01 01 $/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	0f 85 c7 01 00 00    	jne    f0102ed4 <mem_init+0x1b42>$/;"	l
f0102d0d	obj/kern/kernel.asm	/^f0102d0d:	6a 02                	push   $0x2$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	56                   	push   %esi$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	ff 30                	pushl  (%eax)$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	e8 fa e5 ff ff       	call   f010131c <page_insert>$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	02 02 02 $/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	0f 85 be 01 00 00    	jne    f0102ef3 <mem_init+0x1b61>$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	0f 85 d2 01 00 00    	jne    f0102f12 <mem_init+0x1b80>$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	0f 85 e3 01 00 00    	jne    f0102f31 <mem_init+0x1b9f>$/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	03 03 03 $/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	89 f1                	mov    %esi,%ecx$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	2b 08                	sub    (%eax),%ecx$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	89 c8                	mov    %ecx,%eax$/;"	l
f0102d64	obj/kern/kernel.asm	/^f0102d64:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102d6a	obj/kern/kernel.asm	/^f0102d6a:	89 c1                	mov    %eax,%ecx$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0102d77	obj/kern/kernel.asm	/^f0102d77:	0f 83 d3 01 00 00    	jae    f0102f50 <mem_init+0x1bbe>$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	03 03 03 $/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	0f 85 d9 01 00 00    	jne    f0102f66 <mem_init+0x1bd4>$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	ff 30                	pushl  (%eax)$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	e8 3f e5 ff ff       	call   f01012e1 <page_remove>$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	0f 85 d5 01 00 00    	jne    f0102f85 <mem_init+0x1bf3>$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	89 fe                	mov    %edi,%esi$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	2b 30                	sub    (%eax),%esi$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	89 f0                	mov    %esi,%eax$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	39 c2                	cmp    %eax,%edx$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	0f 85 ca 01 00 00    	jne    f0102fa4 <mem_init+0x1c12>$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102de5	obj/kern/kernel.asm	/^f0102de5:	0f 85 d8 01 00 00    	jne    f0102fc3 <mem_init+0x1c31>$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	57                   	push   %edi$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	e8 c3 e2 ff ff       	call   f01010bd <page_free>$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	8d 83 fc 68 f7 ff    	lea    -0x89704(%ebx),%eax$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	e8 2f 0a 00 00       	call   f0103837 <cprintf>$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	5b                   	pop    %ebx$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	5e                   	pop    %esi$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	5f                   	pop    %edi$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	5d                   	pop    %ebp$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	c3                   	ret    $/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	50                   	push   %eax$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	50                   	push   %eax$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	68 fe 00 00 00       	push   $0xfe$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	50                   	push   %eax$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	e8 f7 d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	8d 83 f6 69 f7 ff    	lea    -0x8960a(%ebx),%eax$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	50                   	push   %eax$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	50                   	push   %eax$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102e45	obj/kern/kernel.asm	/^f0102e45:	50                   	push   %eax$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	e8 d8 d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	8d 83 0c 6a f7 ff    	lea    -0x895f4(%ebx),%eax$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	50                   	push   %eax$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	50                   	push   %eax$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	50                   	push   %eax$/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	e8 b9 d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102e6a	obj/kern/kernel.asm	/^f0102e6a:	8d 83 22 6a f7 ff    	lea    -0x895de(%ebx),%eax$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	50                   	push   %eax$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	50                   	push   %eax$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	68 ea 03 00 00       	push   $0x3ea$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	50                   	push   %eax$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	e8 9a d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102e89	obj/kern/kernel.asm	/^f0102e89:	50                   	push   %eax$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	50                   	push   %eax$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	6a 56                	push   $0x56$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	50                   	push   %eax$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	e8 84 d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	50                   	push   %eax$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	50                   	push   %eax$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	6a 56                	push   $0x56$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	50                   	push   %eax$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	e8 6e d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	8d 83 f3 6a f7 ff    	lea    -0x8950d(%ebx),%eax$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	50                   	push   %eax$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	50                   	push   %eax$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	50                   	push   %eax$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	e8 4f d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	8d 83 88 68 f7 ff    	lea    -0x89778(%ebx),%eax$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	50                   	push   %eax$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	50                   	push   %eax$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	50                   	push   %eax$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	e8 30 d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	8d 83 ac 68 f7 ff    	lea    -0x89754(%ebx),%eax$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	50                   	push   %eax$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	50                   	push   %eax$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	50                   	push   %eax$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	e8 11 d2 ff ff       	call   f0100123 <_panic>$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	8d 83 15 6b f7 ff    	lea    -0x894eb(%ebx),%eax$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	50                   	push   %eax$/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	50                   	push   %eax$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	68 f3 03 00 00       	push   $0x3f3$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	50                   	push   %eax$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	e8 f2 d1 ff ff       	call   f0100123 <_panic>$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	8d 83 7f 6b f7 ff    	lea    -0x89481(%ebx),%eax$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	50                   	push   %eax$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	50                   	push   %eax$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	50                   	push   %eax$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	e8 d3 d1 ff ff       	call   f0100123 <_panic>$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	50                   	push   %eax$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	50                   	push   %eax$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	6a 56                	push   $0x56$/;"	l
f0102f5a	obj/kern/kernel.asm	/^f0102f5a:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	50                   	push   %eax$/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	e8 bd d1 ff ff       	call   f0100123 <_panic>$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	8d 83 d0 68 f7 ff    	lea    -0x89730(%ebx),%eax$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	50                   	push   %eax$/;"	l
f0102f6d	obj/kern/kernel.asm	/^f0102f6d:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	50                   	push   %eax$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	50                   	push   %eax$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	e8 9e d1 ff ff       	call   f0100123 <_panic>$/;"	l
f0102f85	obj/kern/kernel.asm	/^f0102f85:	8d 83 4d 6b f7 ff    	lea    -0x894b3(%ebx),%eax$/;"	l
f0102f8b	obj/kern/kernel.asm	/^f0102f8b:	50                   	push   %eax$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	50                   	push   %eax$/;"	l
f0102f93	obj/kern/kernel.asm	/^f0102f93:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	50                   	push   %eax$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	e8 7f d1 ff ff       	call   f0100123 <_panic>$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	8d 83 e0 63 f7 ff    	lea    -0x89c20(%ebx),%eax$/;"	l
f0102faa	obj/kern/kernel.asm	/^f0102faa:	50                   	push   %eax$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102fb1	obj/kern/kernel.asm	/^f0102fb1:	50                   	push   %eax$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	68 fb 03 00 00       	push   $0x3fb$/;"	l
f0102fb7	obj/kern/kernel.asm	/^f0102fb7:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	50                   	push   %eax$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	e8 60 d1 ff ff       	call   f0100123 <_panic>$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	8d 83 04 6b f7 ff    	lea    -0x894fc(%ebx),%eax$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	50                   	push   %eax$/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	50                   	push   %eax$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	8d 83 25 69 f7 ff    	lea    -0x896db(%ebx),%eax$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	50                   	push   %eax$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	e8 41 d1 ff ff       	call   f0100123 <_panic>$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2 <tlb_invalidate>:$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	55                   	push   %ebp$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	0f 01 38             	invlpg (%eax)$/;"	l
f0102feb	obj/kern/kernel.asm	/^f0102feb:	5d                   	pop    %ebp$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	c3                   	ret    $/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed <user_mem_check>:$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	c3                   	ret    $/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3 <user_mem_assert>:$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	c3                   	ret    $/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4 <__x86.get_pc_thunk.cx>:$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	c3                   	ret    $/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8 <__x86.get_pc_thunk.si>:$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	c3                   	ret    $/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc <__x86.get_pc_thunk.di>:$/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	c3                   	ret    $/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000 <region_alloc>:$/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000:	55                   	push   %ebp$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	89 e5                	mov    %esp,%ebp$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	57                   	push   %edi$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	56                   	push   %esi$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	53                   	push   %ebx$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	e8 cb d1 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	81 c3 e6 c0 08 00    	add    $0x8c0e6,%ebx$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	89 c7                	mov    %eax,%edi$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	89 d6                	mov    %edx,%esi$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	8d 84 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%eax$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010302d	obj/kern/kernel.asm	/^f010302d:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	73 64                	jae    f0103096 <region_alloc+0x96>$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	6a 00                	push   $0x0$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	e8 f9 df ff ff       	call   f0101035 <page_alloc>$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	85 c0                	test   %eax,%eax$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	74 20                	je     f0103063 <region_alloc+0x63>$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103048	obj/kern/kernel.asm	/^f0103048:	6a 07                	push   $0x7$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	56                   	push   %esi$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	50                   	push   %eax$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	ff 77 5c             	pushl  0x5c(%edi)$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	e8 c8 e2 ff ff       	call   f010131c <page_insert>$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	85 c0                	test   %eax,%eax$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	78 22                	js     f010307d <region_alloc+0x7d>$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	eb ca                	jmp    f010302d <region_alloc+0x2d>$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	6a fc                	push   $0xfffffffc$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	8d 83 08 6c f7 ff    	lea    -0x893f8(%ebx),%eax$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	50                   	push   %eax$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	68 16 01 00 00       	push   $0x116$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	50                   	push   %eax$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	e8 a6 d0 ff ff       	call   f0100123 <_panic>$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	50                   	push   %eax$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	8d 83 08 6c f7 ff    	lea    -0x893f8(%ebx),%eax$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	50                   	push   %eax$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	68 1b 01 00 00       	push   $0x11b$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	50                   	push   %eax$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	e8 8d d0 ff ff       	call   f0100123 <_panic>$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	5b                   	pop    %ebx$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	5e                   	pop    %esi$/;"	l
f010309b	obj/kern/kernel.asm	/^f010309b:	5f                   	pop    %edi$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	5d                   	pop    %ebp$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	c3                   	ret    $/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e <envid2env>:$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	55                   	push   %ebp$/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	89 e5                	mov    %esp,%ebp$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	53                   	push   %ebx$/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	e8 4d ff ff ff       	call   f0102ff4 <__x86.get_pc_thunk.cx>$/;"	l
f01030a7	obj/kern/kernel.asm	/^f01030a7:	81 c1 4d c0 08 00    	add    $0x8c04d,%ecx$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01030b3	obj/kern/kernel.asm	/^f01030b3:	85 d2                	test   %edx,%edx$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	74 41                	je     f01030f8 <envid2env+0x5a>$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	89 d0                	mov    %edx,%eax$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01030be	obj/kern/kernel.asm	/^f01030be:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	03 81 54 02 00 00    	add    0x254(%ecx),%eax$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	83 78 54 00          	cmpl   $0x0,0x54(%eax)$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	74 3a                	je     f010310a <envid2env+0x6c>$/;"	l
f01030d0	obj/kern/kernel.asm	/^f01030d0:	39 50 48             	cmp    %edx,0x48(%eax)$/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	75 35                	jne    f010310a <envid2env+0x6c>$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	84 db                	test   %bl,%bl$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	74 12                	je     f01030eb <envid2env+0x4d>$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	8b 91 50 02 00 00    	mov    0x250(%ecx),%edx$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	39 c2                	cmp    %eax,%edx$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	74 08                	je     f01030eb <envid2env+0x4d>$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	39 58 4c             	cmp    %ebx,0x4c(%eax)$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	75 2f                	jne    f010311a <envid2env+0x7c>$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	89 03                	mov    %eax,(%ebx)$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	5b                   	pop    %ebx$/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	5d                   	pop    %ebp$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	c3                   	ret    $/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	8b 81 50 02 00 00    	mov    0x250(%ecx),%eax$/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	eb eb                	jmp    f01030f5 <envid2env+0x57>$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	eb db                	jmp    f01030f5 <envid2env+0x57>$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	eb cb                	jmp    f01030f5 <envid2env+0x57>$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a <env_init_percpu>:$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	e8 1b d6 ff ff       	call   f010074a <__x86.get_pc_thunk.ax>$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	05 c5 bf 08 00       	add    $0x8bfc5,%eax$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	8d 80 0c ff ff ff    	lea    -0xf4(%eax),%eax$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	0f 01 10             	lgdtl  (%eax)$/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	8e e8                	mov    %eax,%gs$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	8e e0                	mov    %eax,%fs$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	8e c0                	mov    %eax,%es$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	8e d8                	mov    %eax,%ds$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	8e d0                	mov    %eax,%ss$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	ea 58 31 10 f0 08 00 	ljmp   $0x8,$0xf0103158$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	0f 00 d0             	lldt   %ax$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	c3                   	ret    $/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161 <env_init>:$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	55                   	push   %ebp$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	89 e5                	mov    %esp,%ebp$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	57                   	push   %edi$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	56                   	push   %esi$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	53                   	push   %ebx$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	e8 89 fe ff ff       	call   f0102ff8 <__x86.get_pc_thunk.si>$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	81 c6 85 bf 08 00    	add    $0x8bf85,%esi$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	8b be 54 02 00 00    	mov    0x254(%esi),%edi$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	8b 96 58 02 00 00    	mov    0x258(%esi),%edx$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	8d 87 a0 7f 01 00    	lea    0x17fa0(%edi),%eax$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	89 fb                	mov    %edi,%ebx$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	eb 02                	jmp    f010318d <env_init+0x2c>$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	89 c8                	mov    %ecx,%eax$/;"	l
f010318d	obj/kern/kernel.asm	/^f010318d:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	8d 48 a0             	lea    -0x60(%eax),%ecx$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	89 c2                	mov    %eax,%edx$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	75 eb                	jne    f010318b <env_init+0x2a>$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	89 be 58 02 00 00    	mov    %edi,0x258(%esi)$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	e8 7f ff ff ff       	call   f010312a <env_init_percpu>$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	5b                   	pop    %ebx$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	5e                   	pop    %esi$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	5f                   	pop    %edi$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	5d                   	pop    %ebp$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	c3                   	ret    $/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3 <env_alloc>:$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	55                   	push   %ebp$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	57                   	push   %edi$/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	56                   	push   %esi$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	53                   	push   %ebx$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	e8 18 d0 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	81 c3 33 bf 08 00    	add    $0x8bf33,%ebx$/;"	l
f01031c7	obj/kern/kernel.asm	/^f01031c7:	8b b3 58 02 00 00    	mov    0x258(%ebx),%esi$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	85 f6                	test   %esi,%esi$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	0f 84 67 01 00 00    	je     f010333c <env_alloc+0x189>$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	6a 01                	push   $0x1$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	e8 56 de ff ff       	call   f0101035 <page_alloc>$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	89 c7                	mov    %eax,%edi$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	85 c0                	test   %eax,%eax$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	0f 84 57 01 00 00    	je     f0103343 <env_alloc+0x190>$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	89 f9                	mov    %edi,%ecx$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	2b 08                	sub    (%eax),%ecx$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	89 c8                	mov    %ecx,%eax$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	89 c1                	mov    %eax,%ecx$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	0f 83 fc 00 00 00    	jae    f010330d <env_alloc+0x15a>$/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	89 46 5c             	mov    %eax,0x5c(%esi)$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	c7 c2 08 00 19 f0    	mov    $0xf0190008,%edx$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	ff 32                	pushl  (%edx)$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	50                   	push   %eax$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	e8 4e 17 00 00       	call   f010497d <memcpy>$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	66 83 47 04 01       	addw   $0x1,0x4(%edi)$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	8b 46 5c             	mov    0x5c(%esi),%eax$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	83 c4 10             	add    $0x10,%esp$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	0f 86 de 00 00 00    	jbe    f0103323 <env_alloc+0x170>$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	83 ca 05             	or     $0x5,%edx$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	8b 46 48             	mov    0x48(%esi),%eax$/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103269	obj/kern/kernel.asm	/^f0103269:	89 f2                	mov    %esi,%edx$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	2b 93 54 02 00 00    	sub    0x254(%ebx),%edx$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	c1 fa 05             	sar    $0x5,%edx$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	09 d0                	or     %edx,%eax$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	89 46 48             	mov    %eax,0x48(%esi)$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	89 46 4c             	mov    %eax,0x4c(%esi)$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	c7 46 50 00 00 00 00 	movl   $0x0,0x50(%esi)$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	c7 46 58 00 00 00 00 	movl   $0x0,0x58(%esi)$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	6a 44                	push   $0x44$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	6a 00                	push   $0x0$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	56                   	push   %esi$/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	e8 2c 16 00 00       	call   f01048d3 <memset>$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	66 c7 46 24 23 00    	movw   $0x23,0x24(%esi)$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	66 c7 46 20 23 00    	movw   $0x23,0x20(%esi)$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	66 c7 46 40 23 00    	movw   $0x23,0x40(%esi)$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	c7 46 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%esi)$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	66 c7 46 34 1b 00    	movw   $0x1b,0x34(%esi)$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	8b 46 44             	mov    0x44(%esi),%eax$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	89 83 58 02 00 00    	mov    %eax,0x258(%ebx)$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	89 30                	mov    %esi,(%eax)$/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	8b 4e 48             	mov    0x48(%esi),%ecx$/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	8b 83 50 02 00 00    	mov    0x250(%ebx),%eax$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	85 c0                	test   %eax,%eax$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	74 03                	je     f01032ec <env_alloc+0x139>$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	51                   	push   %ecx$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	52                   	push   %edx$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	8d 83 23 6c f7 ff    	lea    -0x893dd(%ebx),%eax$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	50                   	push   %eax$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	e8 3a 05 00 00       	call   f0103837 <cprintf>$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	5b                   	pop    %ebx$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	5e                   	pop    %esi$/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	5f                   	pop    %edi$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	5d                   	pop    %ebp$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	c3                   	ret    $/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	50                   	push   %eax$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	50                   	push   %eax$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	6a 56                	push   $0x56$/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	50                   	push   %eax$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	e8 00 ce ff ff       	call   f0100123 <_panic>$/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	50                   	push   %eax$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	50                   	push   %eax$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	68 c3 00 00 00       	push   $0xc3$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	50                   	push   %eax$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	e8 e7 cd ff ff       	call   f0100123 <_panic>$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	eb c2                	jmp    f0103305 <env_alloc+0x152>$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	eb bb                	jmp    f0103305 <env_alloc+0x152>$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a <env_create>:$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	55                   	push   %ebp$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	89 e5                	mov    %esp,%ebp$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	57                   	push   %edi$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	56                   	push   %esi$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	53                   	push   %ebx$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	e8 81 ce ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	81 c3 9c bd 08 00    	add    $0x8bd9c,%ebx$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	6a 00                	push   $0x0$/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	50                   	push   %eax$/;"	l
f0103367	obj/kern/kernel.asm	/^f0103367:	e8 47 fe ff ff       	call   f01031b3 <env_alloc>$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	85 c0                	test   %eax,%eax$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	78 3e                	js     f01033b1 <env_create+0x67>$/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	89 c1                	mov    %eax,%ecx$/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	89 41 50             	mov    %eax,0x50(%ecx)$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	75 41                	jne    f01033ca <env_create+0x80>$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	89 fe                	mov    %edi,%esi$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	03 77 1c             	add    0x1c(%edi),%esi$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	0f b7 47 2c          	movzwl 0x2c(%edi),%eax$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	01 f0                	add    %esi,%eax$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01033a0	obj/kern/kernel.asm	/^f01033a0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	76 3e                	jbe    f01033e5 <env_create+0x9b>$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	eb 6b                	jmp    f010341c <env_create+0xd2>$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	50                   	push   %eax$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	8d 83 38 6c f7 ff    	lea    -0x893c8(%ebx),%eax$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	50                   	push   %eax$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	68 88 01 00 00       	push   $0x188$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	50                   	push   %eax$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	e8 59 cd ff ff       	call   f0100123 <_panic>$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	8d 83 47 6c f7 ff    	lea    -0x893b9(%ebx),%eax$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	50                   	push   %eax$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	68 60 01 00 00       	push   $0x160$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	50                   	push   %eax$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	e8 3e cd ff ff       	call   f0100123 <_panic>$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	50                   	push   %eax$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	50                   	push   %eax$/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	68 65 01 00 00       	push   $0x165$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	50                   	push   %eax$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	e8 25 cd ff ff       	call   f0100123 <_panic>$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	8d 83 88 6c f7 ff    	lea    -0x89378(%ebx),%eax$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	50                   	push   %eax$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	68 69 01 00 00       	push   $0x169$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	50                   	push   %eax$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	e8 0a cd ff ff       	call   f0100123 <_panic>$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	83 c6 20             	add    $0x20,%esi$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	39 75 d0             	cmp    %esi,-0x30(%ebp)$/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	76 48                	jbe    f0103469 <env_create+0x11f>$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	83 3e 01             	cmpl   $0x1,(%esi)$/;"	l
f0103424	obj/kern/kernel.asm	/^f0103424:	75 f3                	jne    f0103419 <env_create+0xcf>$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	8b 4e 14             	mov    0x14(%esi),%ecx$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	39 4e 10             	cmp    %ecx,0x10(%esi)$/;"	l
f010342c	obj/kern/kernel.asm	/^f010342c:	77 d0                	ja     f01033fe <env_create+0xb4>$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	8b 56 08             	mov    0x8(%esi),%edx$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103434	obj/kern/kernel.asm	/^f0103434:	e8 c7 fb ff ff       	call   f0103000 <region_alloc>$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	89 f8                	mov    %edi,%eax$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	03 46 04             	add    0x4(%esi),%eax$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	50                   	push   %eax$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	e8 30 15 00 00       	call   f010497d <memcpy>$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	8b 56 14             	mov    0x14(%esi),%edx$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	29 c2                	sub    %eax,%edx$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	52                   	push   %edx$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	6a 00                	push   $0x0$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	03 46 08             	add    0x8(%esi),%eax$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	50                   	push   %eax$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	e8 6f 14 00 00       	call   f01048d3 <memset>$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	eb b0                	jmp    f0103419 <env_create+0xcf>$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	89 f8                	mov    %edi,%eax$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	e8 7d fb ff ff       	call   f0103000 <region_alloc>$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	8b 00                	mov    (%eax),%eax$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	76 10                	jbe    f01034a2 <env_create+0x158>$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	5b                   	pop    %ebx$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	5e                   	pop    %esi$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	5f                   	pop    %edi$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	5d                   	pop    %ebp$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	c3                   	ret    $/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	50                   	push   %eax$/;"	l
f01034a3	obj/kern/kernel.asm	/^f01034a3:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	50                   	push   %eax$/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	68 77 01 00 00       	push   $0x177$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	50                   	push   %eax$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	e8 68 cc ff ff       	call   f0100123 <_panic>$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb <env_free>:$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	55                   	push   %ebp$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	57                   	push   %edi$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	56                   	push   %esi$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	53                   	push   %ebx$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	e8 10 cd ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	81 c3 2b bc 08 00    	add    $0x8bc2b,%ebx$/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	8b 93 50 02 00 00    	mov    0x250(%ebx),%edx$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	3b 55 08             	cmp    0x8(%ebp),%edx$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	74 3e                	je     f0103518 <env_free+0x5d>$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	8b 48 48             	mov    0x48(%eax),%ecx$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	85 d2                	test   %edx,%edx$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	74 03                	je     f01034ec <env_free+0x31>$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	8b 42 48             	mov    0x48(%edx),%eax$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	51                   	push   %ecx$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	50                   	push   %eax$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	8d 83 63 6c f7 ff    	lea    -0x8939d(%ebx),%eax$/;"	l
f01034f7	obj/kern/kernel.asm	/^f01034f7:	50                   	push   %eax$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	e8 3a 03 00 00       	call   f0103837 <cprintf>$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	c7 c0 04 00 19 f0    	mov    $0xf0190004,%eax$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	e9 c2 00 00 00       	jmp    f01035da <env_free+0x11f>$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	c7 c0 08 00 19 f0    	mov    $0xf0190008,%eax$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	8b 00                	mov    (%eax),%eax$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	76 10                	jbe    f0103537 <env_free+0x7c>$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	8b 48 48             	mov    0x48(%eax),%ecx$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	eb b2                	jmp    f01034e9 <env_free+0x2e>$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	50                   	push   %eax$/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	50                   	push   %eax$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	68 9c 01 00 00       	push   $0x19c$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	50                   	push   %eax$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	e8 d3 cb ff ff       	call   f0100123 <_panic>$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	57                   	push   %edi$/;"	l
f0103551	obj/kern/kernel.asm	/^f0103551:	8d 83 44 61 f7 ff    	lea    -0x89ebc(%ebx),%eax$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	50                   	push   %eax$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	68 ab 01 00 00       	push   $0x1ab$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	50                   	push   %eax$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	e8 ba cb ff ff       	call   f0100123 <_panic>$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	89 f0                	mov    %esi,%eax$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	50                   	push   %eax$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	e8 61 dd ff ff       	call   f01012e1 <page_remove>$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	83 c6 01             	add    $0x1,%esi$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	83 c7 04             	add    $0x4,%edi$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	81 fe 00 04 00 00    	cmp    $0x400,%esi$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	74 07                	je     f0103598 <env_free+0xdd>$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	f6 07 01             	testb  $0x1,(%edi)$/;"	l
f0103594	obj/kern/kernel.asm	/^f0103594:	74 ed                	je     f0103583 <env_free+0xc8>$/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	eb d1                	jmp    f0103569 <env_free+0xae>$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	3b 10                	cmp    (%eax),%edx$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	73 6e                	jae    f0103620 <env_free+0x165>$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	c7 c0 0c 00 19 f0    	mov    $0xf019000c,%eax$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	8b 00                	mov    (%eax),%eax$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	50                   	push   %eax$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	e8 43 db ff ff       	call   f010110c <page_decref>$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	83 45 e0 04          	addl   $0x4,-0x20(%ebp)$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	3d ec 0e 00 00       	cmp    $0xeec,%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	74 5e                	je     f0103638 <env_free+0x17d>$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	8b 3c 10             	mov    (%eax,%edx,1),%edi$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	74 de                	je     f01035cc <env_free+0x111>$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	89 f8                	mov    %edi,%eax$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	39 02                	cmp    %eax,(%edx)$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	0f 86 49 ff ff ff    	jbe    f0103550 <env_free+0x95>$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	c1 e0 14             	shl    $0x14,%eax$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	e9 71 ff ff ff       	jmp    f0103591 <env_free+0xd6>$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	8d 83 ac 62 f7 ff    	lea    -0x89d54(%ebx),%eax$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	50                   	push   %eax$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	6a 4f                	push   $0x4f$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	50                   	push   %eax$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	e8 eb ca ff ff       	call   f0100123 <_panic>$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	76 57                	jbe    f010369c <env_free+0x1e1>$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	c7 42 5c 00 00 00 00 	movl   $0x0,0x5c(%edx)$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	c7 c2 04 00 19 f0    	mov    $0xf0190004,%edx$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	3b 02                	cmp    (%edx),%eax$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	73 54                	jae    f01036b5 <env_free+0x1fa>$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	c7 c2 0c 00 19 f0    	mov    $0xf019000c,%edx$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	8b 12                	mov    (%edx),%edx$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	50                   	push   %eax$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	e8 97 da ff ff       	call   f010110c <page_decref>$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	8b 83 58 02 00 00    	mov    0x258(%ebx),%eax$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	89 42 44             	mov    %eax,0x44(%edx)$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	89 93 58 02 00 00    	mov    %edx,0x258(%ebx)$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	5b                   	pop    %ebx$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	5e                   	pop    %esi$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	5f                   	pop    %edi$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	5d                   	pop    %ebp$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	c3                   	ret    $/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	50                   	push   %eax$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	50                   	push   %eax$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	68 b9 01 00 00       	push   $0x1b9$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	50                   	push   %eax$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	e8 6e ca ff ff       	call   f0100123 <_panic>$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	8d 83 ac 62 f7 ff    	lea    -0x89d54(%ebx),%eax$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	50                   	push   %eax$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	6a 4f                	push   $0x4f$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	8d 83 31 69 f7 ff    	lea    -0x896cf(%ebx),%eax$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	50                   	push   %eax$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	e8 56 ca ff ff       	call   f0100123 <_panic>$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd <env_destroy>:$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd:	55                   	push   %ebp$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	53                   	push   %ebx$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01036d4	obj/kern/kernel.asm	/^f01036d4:	e8 00 cb ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	81 c3 1b ba 08 00    	add    $0x8ba1b,%ebx$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	e8 d4 fd ff ff       	call   f01034bb <env_free>$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	8d 83 bc 6c f7 ff    	lea    -0x89344(%ebx),%eax$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	e8 42 01 00 00       	call   f0103837 <cprintf>$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	6a 00                	push   $0x0$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	e8 26 d2 ff ff       	call   f0100928 <monitor>$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	eb f1                	jmp    f01036f8 <env_destroy+0x2b>$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707 <env_pop_tf>:$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	55                   	push   %ebp$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	89 e5                	mov    %esp,%ebp$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	53                   	push   %ebx$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	e8 c6 ca ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	81 c3 e1 b9 08 00    	add    $0x8b9e1,%ebx$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	61                   	popa   $/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	07                   	pop    %es$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	1f                   	pop    %ds$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	cf                   	iret   $/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	8d 83 79 6c f7 ff    	lea    -0x89387(%ebx),%eax$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	50                   	push   %eax$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	68 e2 01 00 00       	push   $0x1e2$/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	50                   	push   %eax$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	e8 e8 c9 ff ff       	call   f0100123 <_panic>$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b <env_run>:$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	55                   	push   %ebp$/;"	l
f010373c	obj/kern/kernel.asm	/^f010373c:	89 e5                	mov    %esp,%ebp$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	53                   	push   %ebx$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	e8 92 ca ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	81 c3 ad b9 08 00    	add    $0x8b9ad,%ebx$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	8b 93 50 02 00 00    	mov    0x250(%ebx),%edx$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	85 d2                	test   %edx,%edx$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	74 06                	je     f0103760 <env_run+0x25>$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	83 7a 54 03          	cmpl   $0x3,0x54(%edx)$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	74 2e                	je     f010378e <env_run+0x53>$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	89 83 50 02 00 00    	mov    %eax,0x250(%ebx)$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	8b 50 5c             	mov    0x5c(%eax),%edx$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	76 1b                	jbe    f0103797 <env_run+0x5c>$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	0f 22 da             	mov    %edx,%cr3$/;"	l
f0103785	obj/kern/kernel.asm	/^f0103785:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	50                   	push   %eax$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	e8 79 ff ff ff       	call   f0103707 <env_pop_tf>$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	c7 42 54 02 00 00 00 	movl   $0x2,0x54(%edx)$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	eb c9                	jmp    f0103760 <env_run+0x25>$/;"	l
f0103797	obj/kern/kernel.asm	/^f0103797:	52                   	push   %edx$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	8d 83 50 62 f7 ff    	lea    -0x89db0(%ebx),%eax$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	50                   	push   %eax$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	68 06 02 00 00       	push   $0x206$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	8d 83 18 6c f7 ff    	lea    -0x893e8(%ebx),%eax$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	50                   	push   %eax$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	e8 73 c9 ff ff       	call   f0100123 <_panic>$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0 <mc146818_read>:$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	55                   	push   %ebp$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	ee                   	out    %al,(%dx)$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	ec                   	in     (%dx),%al$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	5d                   	pop    %ebp$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	c3                   	ret    $/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7 <mc146818_write>:$/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7:	55                   	push   %ebp$/;"	l
f01037c8	obj/kern/kernel.asm	/^f01037c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	ee                   	out    %al,(%dx)$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	ee                   	out    %al,(%dx)$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	5d                   	pop    %ebp$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	c3                   	ret    $/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de <putch>:$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	55                   	push   %ebp$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	89 e5                	mov    %esp,%ebp$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	53                   	push   %ebx$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01037e5	obj/kern/kernel.asm	/^f01037e5:	e8 ef c9 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	81 c3 0a b9 08 00    	add    $0x8b90a,%ebx$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	e8 2b cf ff ff       	call   f0100723 <cputchar>$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01037fe	obj/kern/kernel.asm	/^f01037fe:	c9                   	leave  $/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	c3                   	ret    $/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800 <vcprintf>:$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	55                   	push   %ebp$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	89 e5                	mov    %esp,%ebp$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	53                   	push   %ebx$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	e8 cd c9 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	81 c3 e8 b8 08 00    	add    $0x8b8e8,%ebx$/;"	l
f0103812	obj/kern/kernel.asm	/^f0103812:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	50                   	push   %eax$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	8d 83 ea 46 f7 ff    	lea    -0x8b916(%ebx),%eax$/;"	l
f0103829	obj/kern/kernel.asm	/^f0103829:	50                   	push   %eax$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	e8 11 09 00 00       	call   f0104140 <vprintfmt>$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	c9                   	leave  $/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	c3                   	ret    $/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837 <cprintf>:$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	55                   	push   %ebp$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	89 e5                	mov    %esp,%ebp$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	50                   	push   %eax$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	e8 b7 ff ff ff       	call   f0103800 <vcprintf>$/;"	l
f0103849	obj/kern/kernel.asm	/^f0103849:	c9                   	leave  $/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	c3                   	ret    $/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b <trap_init_percpu>:$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	55                   	push   %ebp$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	89 e5                	mov    %esp,%ebp$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	57                   	push   %edi$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	56                   	push   %esi$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	53                   	push   %ebx$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	e8 80 c9 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	81 c3 9b b8 08 00    	add    $0x8b89b,%ebx$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	c7 83 90 0a 00 00 00 	movl   $0xf0000000,0xa90(%ebx)$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	00 00 f0 $/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	66 c7 83 94 0a 00 00 	movw   $0x10,0xa94(%ebx)$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	10 00 $/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	66 c7 83 f2 0a 00 00 	movw   $0x68,0xaf2(%ebx)$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	68 00 $/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	c7 c0 00 c3 11 f0    	mov    $0xf011c300,%eax$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	66 c7 40 28 67 00    	movw   $0x67,0x28(%eax)$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	8d b3 8c 0a 00 00    	lea    0xa8c(%ebx),%esi$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	66 89 70 2a          	mov    %si,0x2a(%eax)$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	89 f2                	mov    %esi,%edx$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	88 50 2c             	mov    %dl,0x2c(%eax)$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	0f b6 50 2d          	movzbl 0x2d(%eax),%edx$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	83 ca 09             	or     $0x9,%edx$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	88 55 f3             	mov    %dl,-0xd(%ebp)$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	88 50 2d             	mov    %dl,0x2d(%eax)$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	0f b6 48 2e          	movzbl 0x2e(%eax),%ecx$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	83 e1 c0             	and    $0xffffffc0,%ecx$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	83 c9 40             	or     $0x40,%ecx$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	83 e1 7f             	and    $0x7f,%ecx$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	88 48 2e             	mov    %cl,0x2e(%eax)$/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	c1 ee 18             	shr    $0x18,%esi$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	89 f1                	mov    %esi,%ecx$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	88 48 2f             	mov    %cl,0x2f(%eax)$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	0f b6 55 f3          	movzbl -0xd(%ebp),%edx$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	88 50 2d             	mov    %dl,0x2d(%eax)$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	0f 00 d8             	ltr    %ax$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	8d 83 14 ff ff ff    	lea    -0xec(%ebx),%eax$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	0f 01 18             	lidtl  (%eax)$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	83 c4 04             	add    $0x4,%esp$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	5b                   	pop    %ebx$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	5e                   	pop    %esi$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	5f                   	pop    %edi$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	5d                   	pop    %ebp$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	c3                   	ret    $/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea <trap_init>:$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	55                   	push   %ebp$/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	e8 59 ff ff ff       	call   f010384b <trap_init_percpu>$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	5d                   	pop    %ebp$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	c3                   	ret    $/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4 <print_regs>:$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	55                   	push   %ebp$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	56                   	push   %esi$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	53                   	push   %ebx$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	e8 db c8 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	81 c3 f6 b7 08 00    	add    $0x8b7f6,%ebx$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	ff 36                	pushl  (%esi)$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	8d 83 f2 6c f7 ff    	lea    -0x8930e(%ebx),%eax$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	50                   	push   %eax$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	e8 1f ff ff ff       	call   f0103837 <cprintf>$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	83 c4 08             	add    $0x8,%esp$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	8d 83 01 6d f7 ff    	lea    -0x892ff(%ebx),%eax$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	50                   	push   %eax$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	e8 0d ff ff ff       	call   f0103837 <cprintf>$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	8d 83 10 6d f7 ff    	lea    -0x892f0(%ebx),%eax$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	50                   	push   %eax$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	e8 fb fe ff ff       	call   f0103837 <cprintf>$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	ff 76 0c             	pushl  0xc(%esi)$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	8d 83 1f 6d f7 ff    	lea    -0x892e1(%ebx),%eax$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	50                   	push   %eax$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	e8 e9 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	8d 83 2e 6d f7 ff    	lea    -0x892d2(%ebx),%eax$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	50                   	push   %eax$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	e8 d7 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	8d 83 3d 6d f7 ff    	lea    -0x892c3(%ebx),%eax$/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	50                   	push   %eax$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	e8 c5 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	8d 83 4c 6d f7 ff    	lea    -0x892b4(%ebx),%eax$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	50                   	push   %eax$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	e8 b3 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	8d 83 5b 6d f7 ff    	lea    -0x892a5(%ebx),%eax$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	50                   	push   %eax$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	e8 a1 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f0103996	obj/kern/kernel.asm	/^f0103996:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	5b                   	pop    %ebx$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	5e                   	pop    %esi$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	5d                   	pop    %ebp$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	c3                   	ret    $/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0 <print_trapframe>:$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	55                   	push   %ebp$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	57                   	push   %edi$/;"	l
f01039a4	obj/kern/kernel.asm	/^f01039a4:	56                   	push   %esi$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	53                   	push   %ebx$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	e8 2b c8 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	81 c3 46 b7 08 00    	add    $0x8b746,%ebx$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	56                   	push   %esi$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	8d 83 91 6e f7 ff    	lea    -0x8916f(%ebx),%eax$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	50                   	push   %eax$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	e8 73 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	e8 28 ff ff ff       	call   f01038f4 <print_regs>$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	0f b7 46 20          	movzwl 0x20(%esi),%eax$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	50                   	push   %eax$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	8d 83 ac 6d f7 ff    	lea    -0x89254(%ebx),%eax$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	50                   	push   %eax$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	e8 57 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	0f b7 46 24          	movzwl 0x24(%esi),%eax$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	50                   	push   %eax$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	8d 83 bf 6d f7 ff    	lea    -0x89241(%ebx),%eax$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	50                   	push   %eax$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	e8 43 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	8b 56 28             	mov    0x28(%esi),%edx$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039fa	obj/kern/kernel.asm	/^f01039fa:	83 fa 13             	cmp    $0x13,%edx$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	0f 86 e9 00 00 00    	jbe    f0103aec <print_trapframe+0x14c>$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	83 fa 30             	cmp    $0x30,%edx$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	8d 83 6a 6d f7 ff    	lea    -0x89296(%ebx),%eax$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	8d 8b 79 6d f7 ff    	lea    -0x89287(%ebx),%ecx$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	0f 44 c1             	cmove  %ecx,%eax$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	50                   	push   %eax$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	52                   	push   %edx$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	8d 83 d2 6d f7 ff    	lea    -0x8922e(%ebx),%eax$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	50                   	push   %eax$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	e8 11 fe ff ff       	call   f0103837 <cprintf>$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	39 b3 6c 0a 00 00    	cmp    %esi,0xa6c(%ebx)$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	0f 84 c3 00 00 00    	je     f0103af8 <print_trapframe+0x158>$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	ff 76 2c             	pushl  0x2c(%esi)$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	8d 83 f3 6d f7 ff    	lea    -0x8920d(%ebx),%eax$/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	50                   	push   %eax$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	e8 f0 fd ff ff       	call   f0103837 <cprintf>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	0f 85 c9 00 00 00    	jne    f0103b1d <print_trapframe+0x17d>$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	8b 46 2c             	mov    0x2c(%esi),%eax$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	89 c2                	mov    %eax,%edx$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	8d 8b 85 6d f7 ff    	lea    -0x8927b(%ebx),%ecx$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	8d 93 90 6d f7 ff    	lea    -0x89270(%ebx),%edx$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	89 c2                	mov    %eax,%edx$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	8d 93 9c 6d f7 ff    	lea    -0x89264(%ebx),%edx$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	8d bb a2 6d f7 ff    	lea    -0x8925e(%ebx),%edi$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	0f 44 d7             	cmove  %edi,%edx$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	8d 83 a7 6d f7 ff    	lea    -0x89259(%ebx),%eax$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	8d bb bc 6e f7 ff    	lea    -0x89144(%ebx),%edi$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	0f 44 c7             	cmove  %edi,%eax$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	51                   	push   %ecx$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	52                   	push   %edx$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	50                   	push   %eax$/;"	l
f0103a94	obj/kern/kernel.asm	/^f0103a94:	8d 83 01 6e f7 ff    	lea    -0x891ff(%ebx),%eax$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	50                   	push   %eax$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	e8 97 fd ff ff       	call   f0103837 <cprintf>$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	ff 76 30             	pushl  0x30(%esi)$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	8d 83 10 6e f7 ff    	lea    -0x891f0(%ebx),%eax$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	50                   	push   %eax$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	e8 82 fd ff ff       	call   f0103837 <cprintf>$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103abc	obj/kern/kernel.asm	/^f0103abc:	50                   	push   %eax$/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd:	8d 83 1f 6e f7 ff    	lea    -0x891e1(%ebx),%eax$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	50                   	push   %eax$/;"	l
f0103ac4	obj/kern/kernel.asm	/^f0103ac4:	e8 6e fd ff ff       	call   f0103837 <cprintf>$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103acc	obj/kern/kernel.asm	/^f0103acc:	ff 76 38             	pushl  0x38(%esi)$/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	8d 83 32 6e f7 ff    	lea    -0x891ce(%ebx),%eax$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	50                   	push   %eax$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	e8 5c fd ff ff       	call   f0103837 <cprintf>$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	75 50                	jne    f0103b34 <print_trapframe+0x194>$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	5b                   	pop    %ebx$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	5e                   	pop    %esi$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	5f                   	pop    %edi$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	5d                   	pop    %ebp$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	c3                   	ret    $/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	8b 84 93 8c ff ff ff 	mov    -0x74(%ebx,%edx,4),%eax$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	e9 1d ff ff ff       	jmp    f0103a15 <print_trapframe+0x75>$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	0f 85 33 ff ff ff    	jne    f0103a35 <print_trapframe+0x95>$/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	50                   	push   %eax$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	8d 83 e4 6d f7 ff    	lea    -0x8921c(%ebx),%eax$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	50                   	push   %eax$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	e8 22 fd ff ff       	call   f0103837 <cprintf>$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	e9 18 ff ff ff       	jmp    f0103a35 <print_trapframe+0x95>$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	8d 83 d6 6b f7 ff    	lea    -0x8942a(%ebx),%eax$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	50                   	push   %eax$/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	e8 0b fd ff ff       	call   f0103837 <cprintf>$/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	e9 6f ff ff ff       	jmp    f0103aa3 <print_trapframe+0x103>$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	ff 76 3c             	pushl  0x3c(%esi)$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	8d 83 41 6e f7 ff    	lea    -0x891bf(%ebx),%eax$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	50                   	push   %eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	e8 f1 fc ff ff       	call   f0103837 <cprintf>$/;"	l
f0103b46	obj/kern/kernel.asm	/^f0103b46:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	0f b7 46 40          	movzwl 0x40(%esi),%eax$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	50                   	push   %eax$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	8d 83 50 6e f7 ff    	lea    -0x891b0(%ebx),%eax$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	50                   	push   %eax$/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	e8 dd fc ff ff       	call   f0103837 <cprintf>$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	eb 85                	jmp    f0103ae4 <print_trapframe+0x144>$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f <trap>:$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	55                   	push   %ebp$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	57                   	push   %edi$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	56                   	push   %esi$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	53                   	push   %ebx$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	e8 6c c6 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	81 c3 87 b5 08 00    	add    $0x8b587,%ebx$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	fc                   	cld    $/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	9c                   	pushf  $/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	58                   	pop    %eax$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	74 1f                	je     f0103b9d <trap+0x3e>$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	8d 83 63 6e f7 ff    	lea    -0x8919d(%ebx),%eax$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	50                   	push   %eax$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	50                   	push   %eax$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	68 a8 00 00 00       	push   $0xa8$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	8d 83 7c 6e f7 ff    	lea    -0x89184(%ebx),%eax$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	50                   	push   %eax$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	e8 86 c5 ff ff       	call   f0100123 <_panic>$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	56                   	push   %esi$/;"	l
f0103ba1	obj/kern/kernel.asm	/^f0103ba1:	8d 83 88 6e f7 ff    	lea    -0x89178(%ebx),%eax$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	50                   	push   %eax$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	e8 8a fc ff ff       	call   f0103837 <cprintf>$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	75 1d                	jne    f0103bda <trap+0x7b>$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	c7 c0 44 f3 18 f0    	mov    $0xf018f344,%eax$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	8b 00                	mov    (%eax),%eax$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	85 c0                	test   %eax,%eax$/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	74 68                	je     f0103c31 <trap+0xd2>$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103bce	obj/kern/kernel.asm	/^f0103bce:	89 c7                	mov    %eax,%edi$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	c7 c0 44 f3 18 f0    	mov    $0xf018f344,%eax$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	8b 30                	mov    (%eax),%esi$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	89 b3 6c 0a 00 00    	mov    %esi,0xa6c(%ebx)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	56                   	push   %esi$/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	e8 b7 fd ff ff       	call   f01039a0 <print_trapframe>$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	74 5d                	je     f0103c50 <trap+0xf1>$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	c7 c6 44 f3 18 f0    	mov    $0xf018f344,%esi$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	ff 36                	pushl  (%esi)$/;"	l
f0103bfe	obj/kern/kernel.asm	/^f0103bfe:	e8 ca fa ff ff       	call   f01036cd <env_destroy>$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	8b 06                	mov    (%esi),%eax$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	85 c0                	test   %eax,%eax$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	74 06                	je     f0103c12 <trap+0xb3>$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	74 59                	je     f0103c6b <trap+0x10c>$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	8d 83 08 70 f7 ff    	lea    -0x88ff8(%ebx),%eax$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	50                   	push   %eax$/;"	l
f0103c19	obj/kern/kernel.asm	/^f0103c19:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	50                   	push   %eax$/;"	l
f0103c20	obj/kern/kernel.asm	/^f0103c20:	68 c0 00 00 00       	push   $0xc0$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	8d 83 7c 6e f7 ff    	lea    -0x89184(%ebx),%eax$/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b:	50                   	push   %eax$/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	e8 f2 c4 ff ff       	call   f0100123 <_panic>$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	8d 83 a3 6e f7 ff    	lea    -0x8915d(%ebx),%eax$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	50                   	push   %eax$/;"	l
f0103c38	obj/kern/kernel.asm	/^f0103c38:	8d 83 4b 69 f7 ff    	lea    -0x896b5(%ebx),%eax$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	50                   	push   %eax$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	68 ae 00 00 00       	push   $0xae$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	8d 83 7c 6e f7 ff    	lea    -0x89184(%ebx),%eax$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	50                   	push   %eax$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	e8 d3 c4 ff ff       	call   f0100123 <_panic>$/;"	l
f0103c50	obj/kern/kernel.asm	/^f0103c50:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	8d 83 aa 6e f7 ff    	lea    -0x89156(%ebx),%eax$/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59:	50                   	push   %eax$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	68 97 00 00 00       	push   $0x97$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	8d 83 7c 6e f7 ff    	lea    -0x89184(%ebx),%eax$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	50                   	push   %eax$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	e8 b8 c4 ff ff       	call   f0100123 <_panic>$/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	50                   	push   %eax$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	e8 c7 fa ff ff       	call   f010373b <env_run>$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74 <page_fault_handler>:$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	55                   	push   %ebp$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	57                   	push   %edi$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	56                   	push   %esi$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	53                   	push   %ebx$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	e8 57 c5 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	81 c3 72 b4 08 00    	add    $0x8b472,%ebx$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	ff 77 30             	pushl  0x30(%edi)$/;"	l
f0103c91	obj/kern/kernel.asm	/^f0103c91:	50                   	push   %eax$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	c7 c6 44 f3 18 f0    	mov    $0xf018f344,%esi$/;"	l
f0103c98	obj/kern/kernel.asm	/^f0103c98:	8b 06                	mov    (%esi),%eax$/;"	l
f0103c9a	obj/kern/kernel.asm	/^f0103c9a:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103c9d	obj/kern/kernel.asm	/^f0103c9d:	8d 83 34 70 f7 ff    	lea    -0x88fcc(%ebx),%eax$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	50                   	push   %eax$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	e8 8e fb ff ff       	call   f0103837 <cprintf>$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	e8 ef fc ff ff       	call   f01039a0 <print_trapframe>$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	ff 36                	pushl  (%esi)$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	e8 12 fa ff ff       	call   f01036cd <env_destroy>$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	5b                   	pop    %ebx$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	5e                   	pop    %esi$/;"	l
f0103cc3	obj/kern/kernel.asm	/^f0103cc3:	5f                   	pop    %edi$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	5d                   	pop    %ebp$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	c3                   	ret    $/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6 <syscall>:$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	55                   	push   %ebp$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	53                   	push   %ebx$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	e8 07 c5 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	81 c3 22 b4 08 00    	add    $0x8b422,%ebx$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	8d 83 58 70 f7 ff    	lea    -0x88fa8(%ebx),%eax$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	50                   	push   %eax$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	6a 49                	push   $0x49$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	8d 83 70 70 f7 ff    	lea    -0x88f90(%ebx),%eax$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	50                   	push   %eax$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	e8 36 c4 ff ff       	call   f0100123 <_panic>$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced <stab_binsearch>:$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	55                   	push   %ebp$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	57                   	push   %edi$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	56                   	push   %esi$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	53                   	push   %ebx$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	8b 01                	mov    (%ecx),%eax$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	eb 23                	jmp    f0103d35 <stab_binsearch+0x48>$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	eb 1e                	jmp    f0103d35 <stab_binsearch+0x48>$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	73 41                	jae    f0103d67 <stab_binsearch+0x7a>$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	89 03                	mov    %eax,(%ebx)$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	7f 5a                	jg     f0103d94 <stab_binsearch+0xa7>$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	01 d8                	add    %ebx,%eax$/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	89 c7                	mov    %eax,%edi$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	01 c7                	add    %eax,%edi$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	d1 ff                	sar    %edi$/;"	d
f0103d48	obj/kern/kernel.asm	/^f0103d48:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	89 f8                	mov    %edi,%eax$/;"	l
f0103d54	obj/kern/kernel.asm	/^f0103d54:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	7f ba                	jg     f0103d12 <stab_binsearch+0x25>$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	39 f1                	cmp    %esi,%ecx$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	74 b5                	je     f0103d17 <stab_binsearch+0x2a>$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	eb ed                	jmp    f0103d54 <stab_binsearch+0x67>$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	76 14                	jbe    f0103d80 <stab_binsearch+0x93>$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	89 07                	mov    %eax,(%edi)$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	eb b5                	jmp    f0103d35 <stab_binsearch+0x48>$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	89 07                	mov    %eax,(%edi)$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	89 c3                	mov    %eax,%ebx$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	eb a1                	jmp    f0103d35 <stab_binsearch+0x48>$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	75 15                	jne    f0103daf <stab_binsearch+0xc2>$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	8b 00                	mov    (%eax),%eax$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	89 06                	mov    %eax,(%esi)$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	5b                   	pop    %ebx$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	5e                   	pop    %esi$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	5f                   	pop    %edi$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	5d                   	pop    %ebp$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	c3                   	ret    $/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	8b 00                	mov    (%eax),%eax$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	eb 03                	jmp    f0103dc8 <stab_binsearch+0xdb>$/;"	l
f0103dc5	obj/kern/kernel.asm	/^f0103dc5:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	39 c1                	cmp    %eax,%ecx$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	7d 0a                	jge    f0103dd6 <stab_binsearch+0xe9>$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	75 ef                	jne    f0103dc5 <stab_binsearch+0xd8>$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	89 06                	mov    %eax,(%esi)$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	eb ca                	jmp    f0103da7 <stab_binsearch+0xba>$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd <debuginfo_eip>:$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	55                   	push   %ebp$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	89 e5                	mov    %esp,%ebp$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	57                   	push   %edi$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	56                   	push   %esi$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	53                   	push   %ebx$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	e8 ee c3 ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	81 c3 09 b3 08 00    	add    $0x8b309,%ebx$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	8d 83 7f 70 f7 ff    	lea    -0x88f81(%ebx),%eax$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	89 06                	mov    %eax,(%esi)$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	0f 87 20 01 00 00    	ja     f0103f45 <debuginfo_eip+0x168>$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	8b 3d 08 00 20 00    	mov    0x200008,%edi$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	8b 3d 0c 00 20 00    	mov    0x20000c,%edi$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	89 7d bc             	mov    %edi,-0x44(%ebp)$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a:	0f 83 c8 01 00 00    	jae    f0104018 <debuginfo_eip+0x23b>$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	0f 85 c5 01 00 00    	jne    f010401f <debuginfo_eip+0x242>$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	29 f8                	sub    %edi,%eax$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	6a 64                	push   $0x64$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	89 f8                	mov    %edi,%eax$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	e8 66 fe ff ff       	call   f0103ced <stab_binsearch>$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	85 c0                	test   %eax,%eax$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	0f 84 91 01 00 00    	je     f0104026 <debuginfo_eip+0x249>$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	6a 24                	push   $0x24$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	89 f8                	mov    %edi,%eax$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	e8 3d fe ff ff       	call   f0103ced <stab_binsearch>$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	39 d0                	cmp    %edx,%eax$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	0f 8f aa 00 00 00    	jg     f0103f6b <debuginfo_eip+0x18e>$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	8b 09                	mov    (%ecx),%ecx$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	2b 7d b4             	sub    -0x4c(%ebp),%edi$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	39 f9                	cmp    %edi,%ecx$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	73 06                	jae    f0103edc <debuginfo_eip+0xff>$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	03 4d b4             	add    -0x4c(%ebp),%ecx$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	89 4e 08             	mov    %ecx,0x8(%esi)$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	8b 4f 08             	mov    0x8(%edi),%ecx$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	89 4e 10             	mov    %ecx,0x10(%esi)$/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	29 4d 08             	sub    %ecx,0x8(%ebp)$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	6a 3a                	push   $0x3a$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	e8 bc 09 00 00       	call   f01048b7 <strfind>$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	6a 44                	push   $0x44$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	89 d8                	mov    %ebx,%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	e8 d4 fd ff ff       	call   f0103ced <stab_binsearch>$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	0f 8f 05 01 00 00    	jg     f010402d <debuginfo_eip+0x250>$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	89 d0                	mov    %edx,%eax$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	0f b7 4c 13 06       	movzwl 0x6(%ebx,%edx,1),%ecx$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	89 4e 04             	mov    %ecx,0x4(%esi)$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	8d 54 13 04          	lea    0x4(%ebx,%edx,1),%edx$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	eb 47                	jmp    f0103f8c <debuginfo_eip+0x1af>$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	c7 c0 aa 20 11 f0    	mov    $0xf01120aa,%eax$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	c7 c0 c9 f5 10 f0    	mov    $0xf010f5c9,%eax$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	c7 c0 c8 f5 10 f0    	mov    $0xf010f5c8,%eax$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	c7 c7 70 63 10 f0    	mov    $0xf0106370,%edi$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	89 7d b8             	mov    %edi,-0x48(%ebp)$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	e9 d9 fe ff ff       	jmp    f0103e44 <debuginfo_eip+0x67>$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	e9 6c ff ff ff       	jmp    f0103eee <debuginfo_eip+0x111>$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	39 c7                	cmp    %eax,%edi$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	7f 45                	jg     f0103fd8 <debuginfo_eip+0x1fb>$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	74 19                	je     f0103fb4 <debuginfo_eip+0x1d7>$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	75 e2                	jne    f0103f82 <debuginfo_eip+0x1a5>$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	83 7a 04 00          	cmpl   $0x0,0x4(%edx)$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	74 dc                	je     f0103f82 <debuginfo_eip+0x1a5>$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	74 11                	je     f0103fbd <debuginfo_eip+0x1e0>$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	eb 09                	jmp    f0103fbd <debuginfo_eip+0x1e0>$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	74 03                	je     f0103fbd <debuginfo_eip+0x1e0>$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	29 f8                	sub    %edi,%eax$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	39 c2                	cmp    %eax,%edx$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	73 06                	jae    f0103fd8 <debuginfo_eip+0x1fb>$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	89 f8                	mov    %edi,%eax$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	01 d0                	add    %edx,%eax$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	89 06                	mov    %eax,(%esi)$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	39 da                	cmp    %ebx,%edx$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	7d 52                	jge    f0104039 <debuginfo_eip+0x25c>$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	83 c2 01             	add    $0x1,%edx$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	89 d0                	mov    %edx,%eax$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	eb 04                	jmp    f0103fff <debuginfo_eip+0x222>$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	7e 31                	jle    f0104034 <debuginfo_eip+0x257>$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	83 c2 0c             	add    $0xc,%edx$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	74 ea                	je     f0103ffb <debuginfo_eip+0x21e>$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104016	obj/kern/kernel.asm	/^f0104016:	eb 21                	jmp    f0104039 <debuginfo_eip+0x25c>$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	eb 1a                	jmp    f0104039 <debuginfo_eip+0x25c>$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	eb 13                	jmp    f0104039 <debuginfo_eip+0x25c>$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	eb 0c                	jmp    f0104039 <debuginfo_eip+0x25c>$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	eb 05                	jmp    f0104039 <debuginfo_eip+0x25c>$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	5b                   	pop    %ebx$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	5e                   	pop    %esi$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	5f                   	pop    %edi$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	5d                   	pop    %ebp$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	c3                   	ret    $/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041 <printnum>:$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	55                   	push   %ebp$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	89 e5                	mov    %esp,%ebp$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	57                   	push   %edi$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	56                   	push   %esi$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	53                   	push   %ebx$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a:	e8 a5 ef ff ff       	call   f0102ff4 <__x86.get_pc_thunk.cx>$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	81 c1 a5 b0 08 00    	add    $0x8b0a5,%ecx$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	89 c7                	mov    %eax,%edi$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	89 d6                	mov    %edx,%esi$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104073	obj/kern/kernel.asm	/^f0104073:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	89 d0                	mov    %edx,%eax$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	1b 45 e4             	sbb    -0x1c(%ebp),%eax$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	73 15                	jae    f0104098 <printnum+0x57>$/;"	l
f0104083	obj/kern/kernel.asm	/^f0104083:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	85 db                	test   %ebx,%ebx$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	7e 46                	jle    f01040d0 <printnum+0x8f>$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	56                   	push   %esi$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	ff d7                	call   *%edi$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	eb eb                	jmp    f0104083 <printnum+0x42>$/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	53                   	push   %ebx$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01040b1	obj/kern/kernel.asm	/^f01040b1:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	e8 11 0a 00 00       	call   f0104ad0 <__udivdi3>$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	83 c4 18             	add    $0x18,%esp$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	52                   	push   %edx$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	50                   	push   %eax$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	89 f2                	mov    %esi,%edx$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	89 f8                	mov    %edi,%eax$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	e8 74 ff ff ff       	call   f0104041 <printnum>$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	83 c4 20             	add    $0x20,%esp$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	56                   	push   %esi$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	89 f3                	mov    %esi,%ebx$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	e8 f3 0a 00 00       	call   f0104be0 <__umoddi3>$/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	83 c4 14             	add    $0x14,%esp$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	0f be 84 06 89 70 f7 	movsbl -0x88f77(%esi,%eax,1),%eax$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	ff $/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	50                   	push   %eax$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	ff d7                	call   *%edi$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	5b                   	pop    %ebx$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	5e                   	pop    %esi$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	5f                   	pop    %edi$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	5d                   	pop    %ebp$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	c3                   	ret    $/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106 <sprintputch>:$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	55                   	push   %ebp$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	89 e5                	mov    %esp,%ebp$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	8b 10                	mov    (%eax),%edx$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	73 0a                	jae    f0104121 <sprintputch+0x1b>$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	89 08                	mov    %ecx,(%eax)$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	88 02                	mov    %al,(%edx)$/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121:	5d                   	pop    %ebp$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	c3                   	ret    $/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123 <printfmt>:$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	55                   	push   %ebp$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	89 e5                	mov    %esp,%ebp$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	50                   	push   %eax$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	e8 05 00 00 00       	call   f0104140 <vprintfmt>$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	c9                   	leave  $/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	c3                   	ret    $/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140 <vprintfmt>:$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	55                   	push   %ebp$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	89 e5                	mov    %esp,%ebp$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	57                   	push   %edi$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	56                   	push   %esi$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	53                   	push   %ebx$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	e8 fc c5 ff ff       	call   f010074a <__x86.get_pc_thunk.ax>$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	05 a6 af 08 00       	add    $0x8afa6,%eax$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	eb 0a                	jmp    f010416b <vprintfmt+0x2b>$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	57                   	push   %edi$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	50                   	push   %eax$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	ff d6                	call   *%esi$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	83 c4 10             	add    $0x10,%esp$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	74 0c                	je     f0104183 <vprintfmt+0x43>$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	85 c0                	test   %eax,%eax$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	75 e6                	jne    f0104161 <vprintfmt+0x21>$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	5b                   	pop    %ebx$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	5e                   	pop    %esi$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	5f                   	pop    %edi$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	5d                   	pop    %ebp$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	c3                   	ret    $/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	c6 45 cf 20          	movb   $0x20,-0x31(%ebp)$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	3c 55                	cmp    $0x55,%al$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	0f 87 00 04 00 00    	ja     f01045bb <.L21>$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	89 ce                	mov    %ecx,%esi$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	03 b4 81 14 71 f7 ff 	add    -0x88eec(%ecx,%eax,4),%esi$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	ff e6                	jmp    *%esi$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc <.L68>:$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	c6 45 cf 2d          	movb   $0x2d,-0x31(%ebp)$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	eb d2                	jmp    f01041a7 <vprintfmt+0x67>$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5 <.L33>:$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	c6 45 cf 30          	movb   $0x30,-0x31(%ebp)$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	eb c9                	jmp    f01041a7 <vprintfmt+0x67>$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de <.L32>:$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	0f be 13             	movsbl (%ebx),%edx$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	77 58                	ja     f0104256 <.L37+0xf>$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	eb e9                	jmp    f01041ec <.L32+0xe>$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203 <.L35>:$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	8b 00                	mov    (%eax),%eax$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	79 8a                	jns    f01041a7 <vprintfmt+0x67>$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	e9 78 ff ff ff       	jmp    f01041a7 <vprintfmt+0x67>$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f <.L34>:$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	85 c0                	test   %eax,%eax$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010423f	obj/kern/kernel.asm	/^f010423f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	e9 60 ff ff ff       	jmp    f01041a7 <vprintfmt+0x67>$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247 <.L37>:$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	e9 51 ff ff ff       	jmp    f01041a7 <vprintfmt+0x67>$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	eb b9                	jmp    f0104217 <.L35+0x14>$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e <.L28>:$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104265	obj/kern/kernel.asm	/^f0104265:	e9 3d ff ff ff       	jmp    f01041a7 <vprintfmt+0x67>$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a <.L31>:$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	8d 58 04             	lea    0x4(%eax),%ebx$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	57                   	push   %edi$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	ff 30                	pushl  (%eax)$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	ff d6                	call   *%esi$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	e9 cb 02 00 00       	jmp    f0104551 <.L26+0x45>$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286 <.L29>:$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	8d 58 04             	lea    0x4(%eax),%ebx$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	99                   	cltd   $/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	31 d0                	xor    %edx,%eax$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	29 d0                	sub    %edx,%eax$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	7f 2b                	jg     f01042c6 <.L29+0x40>$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	8b 94 82 dc ff ff ff 	mov    -0x24(%edx,%eax,4),%edx$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	85 d2                	test   %edx,%edx$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	74 1d                	je     f01042c6 <.L29+0x40>$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	52                   	push   %edx$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	8d 80 5d 69 f7 ff    	lea    -0x896a3(%eax),%eax$/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	50                   	push   %eax$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	57                   	push   %edi$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	56                   	push   %esi$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	e8 68 fe ff ff       	call   f0104123 <printfmt>$/;"	l
f01042bb	obj/kern/kernel.asm	/^f01042bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1:	e9 8b 02 00 00       	jmp    f0104551 <.L26+0x45>$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	50                   	push   %eax$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	8d 80 a1 70 f7 ff    	lea    -0x88f5f(%eax),%eax$/;"	l
f01042d0	obj/kern/kernel.asm	/^f01042d0:	50                   	push   %eax$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	57                   	push   %edi$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	56                   	push   %esi$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	e8 4b fe ff ff       	call   f0104123 <printfmt>$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	e9 6e 02 00 00       	jmp    f0104551 <.L26+0x45>$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3 <.L25>:$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	83 c0 04             	add    $0x4,%eax$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	8b 10                	mov    (%eax),%edx$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	85 d2                	test   %edx,%edx$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	8d 80 9a 70 f7 ff    	lea    -0x88f66(%eax),%eax$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	7e 06                	jle    f0104311 <.L25+0x2e>$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	80 7d cf 2d          	cmpb   $0x2d,-0x31(%ebp)$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	75 0d                	jne    f010431e <.L25+0x3b>$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	89 c3                	mov    %eax,%ebx$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	03 45 d4             	add    -0x2c(%ebp),%eax$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	eb 42                	jmp    f0104360 <.L25+0x7d>$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	50                   	push   %eax$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	e8 3f 04 00 00       	call   f010476c <strnlen>$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	29 c2                	sub    %eax,%edx$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	89 d3                	mov    %edx,%ebx$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	0f be 45 cf          	movsbl -0x31(%ebp),%eax$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	85 db                	test   %ebx,%ebx$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	7e 58                	jle    f010439d <.L25+0xba>$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	57                   	push   %edi$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	ff d6                	call   *%esi$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	eb eb                	jmp    f0104341 <.L25+0x5e>$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	57                   	push   %edi$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	52                   	push   %edx$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	ff d6                	call   *%esi$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	29 d9                	sub    %ebx,%ecx$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	0f be d0             	movsbl %al,%edx$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	85 d2                	test   %edx,%edx$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	74 45                	je     f01043b8 <.L25+0xd5>$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	78 06                	js     f010437f <.L25+0x9c>$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	83 6d d8 01          	subl   $0x1,-0x28(%ebp)$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	78 35                	js     f01043b4 <.L25+0xd1>$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	74 d1                	je     f0104356 <.L25+0x73>$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	0f be c0             	movsbl %al,%eax$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	83 e8 20             	sub    $0x20,%eax$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	76 c6                	jbe    f0104356 <.L25+0x73>$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	57                   	push   %edi$/;"	l
f0104394	obj/kern/kernel.asm	/^f0104394:	6a 3f                	push   $0x3f$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	ff d6                	call   *%esi$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	83 c4 10             	add    $0x10,%esp$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	eb c3                	jmp    f0104360 <.L25+0x7d>$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	85 d2                	test   %edx,%edx$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	29 c2                	sub    %eax,%edx$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	e9 5d ff ff ff       	jmp    f0104311 <.L25+0x2e>$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	89 cb                	mov    %ecx,%ebx$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	eb 02                	jmp    f01043ba <.L25+0xd7>$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	89 cb                	mov    %ecx,%ebx$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	85 db                	test   %ebx,%ebx$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	7e 10                	jle    f01043ce <.L25+0xeb>$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	57                   	push   %edi$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	6a 20                	push   $0x20$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	ff d6                	call   *%esi$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	eb ec                	jmp    f01043ba <.L25+0xd7>$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	e9 78 01 00 00       	jmp    f0104551 <.L26+0x45>$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9 <.L30>:$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	7f 1b                	jg     f01043ff <.L30+0x26>$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	85 c9                	test   %ecx,%ecx$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	74 63                	je     f010444b <.L30+0x72>$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	8b 00                	mov    (%eax),%eax$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	99                   	cltd   $/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	eb 17                	jmp    f0104416 <.L30+0x3d>$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	8b 00                	mov    (%eax),%eax$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010440d	obj/kern/kernel.asm	/^f010440d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104419	obj/kern/kernel.asm	/^f0104419:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	85 c9                	test   %ecx,%ecx$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	0f 89 0e 01 00 00    	jns    f0104537 <.L26+0x2b>$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	57                   	push   %edi$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	6a 2d                	push   $0x2d$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	ff d6                	call   *%esi$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	f7 da                	neg    %edx$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	f7 d9                	neg    %ecx$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	e9 ec 00 00 00       	jmp    f0104537 <.L26+0x2b>$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	8b 00                	mov    (%eax),%eax$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	99                   	cltd   $/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	eb b4                	jmp    f0104416 <.L30+0x3d>$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462 <.L24>:$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	7f 1e                	jg     f010448b <.L24+0x29>$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	85 c9                	test   %ecx,%ecx$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	74 32                	je     f01044a3 <.L24+0x41>$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	8b 10                	mov    (%eax),%edx$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	e9 ac 00 00 00       	jmp    f0104537 <.L26+0x2b>$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	8b 10                	mov    (%eax),%edx$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	e9 94 00 00 00       	jmp    f0104537 <.L26+0x2b>$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	8b 10                	mov    (%eax),%edx$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01044b0	obj/kern/kernel.asm	/^f01044b0:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	eb 7d                	jmp    f0104537 <.L26+0x2b>$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba <.L27>:$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	7f 1b                	jg     f01044e0 <.L27+0x26>$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	85 c9                	test   %ecx,%ecx$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	74 2c                	je     f01044f5 <.L27+0x3b>$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	8b 10                	mov    (%eax),%edx$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	eb 57                	jmp    f0104537 <.L26+0x2b>$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	8b 10                	mov    (%eax),%edx$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	eb 42                	jmp    f0104537 <.L26+0x2b>$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	8b 10                	mov    (%eax),%edx$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	eb 2b                	jmp    f0104537 <.L26+0x2b>$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c <.L26>:$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	57                   	push   %edi$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	6a 30                	push   $0x30$/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	ff d6                	call   *%esi$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	83 c4 08             	add    $0x8,%esp$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	57                   	push   %edi$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	6a 78                	push   $0x78$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	ff d6                	call   *%esi$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	8b 10                	mov    (%eax),%edx$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	83 c4 10             	add    $0x10,%esp$/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	0f be 5d cf          	movsbl -0x31(%ebp),%ebx$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	53                   	push   %ebx$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0104542	obj/kern/kernel.asm	/^f0104542:	50                   	push   %eax$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	51                   	push   %ecx$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	52                   	push   %edx$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	89 fa                	mov    %edi,%edx$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	89 f0                	mov    %esi,%eax$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	e8 f3 fa ff ff       	call   f0104041 <printnum>$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	e9 12 fc ff ff       	jmp    f010416b <vprintfmt+0x2b>$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559 <.L22>:$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	7f 1b                	jg     f010457f <.L22+0x26>$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	85 c9                	test   %ecx,%ecx$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	74 2c                	je     f0104594 <.L22+0x3b>$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	8b 10                	mov    (%eax),%edx$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	eb b8                	jmp    f0104537 <.L26+0x2b>$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	8b 10                	mov    (%eax),%edx$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	eb a3                	jmp    f0104537 <.L26+0x2b>$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	8b 10                	mov    (%eax),%edx$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	eb 8c                	jmp    f0104537 <.L26+0x2b>$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab <.L36>:$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	57                   	push   %edi$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	6a 25                	push   $0x25$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	ff d6                	call   *%esi$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	eb 96                	jmp    f0104551 <.L26+0x45>$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb <.L21>:$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	57                   	push   %edi$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	6a 25                	push   $0x25$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	ff d6                	call   *%esi$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	89 d8                	mov    %ebx,%eax$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	eb 03                	jmp    f01045d0 <.L21+0x15>$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	75 f7                	jne    f01045cd <.L21+0x12>$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	e9 73 ff ff ff       	jmp    f0104551 <.L26+0x45>$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de <vsnprintf>:$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	55                   	push   %ebp$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	89 e5                	mov    %esp,%ebp$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	53                   	push   %ebx$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	e8 ef bb ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	81 c3 0a ab 08 00    	add    $0x8ab0a,%ebx$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045f3	obj/kern/kernel.asm	/^f01045f3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01045f6	obj/kern/kernel.asm	/^f01045f6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	85 c0                	test   %eax,%eax$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	74 2b                	je     f0104636 <vsnprintf+0x58>$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	85 d2                	test   %edx,%edx$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	7e 27                	jle    f0104636 <vsnprintf+0x58>$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	50                   	push   %eax$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	8d 83 12 50 f7 ff    	lea    -0x8afee(%ebx),%eax$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	50                   	push   %eax$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	e8 1b fb ff ff       	call   f0104140 <vprintfmt>$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	c9                   	leave  $/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	c3                   	ret    $/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	eb f4                	jmp    f0104631 <vsnprintf+0x53>$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d <snprintf>:$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	55                   	push   %ebp$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	50                   	push   %eax$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	e8 89 ff ff ff       	call   f01045de <vsnprintf>$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	c9                   	leave  $/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	c3                   	ret    $/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657 <readline>:$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	55                   	push   %ebp$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	89 e5                	mov    %esp,%ebp$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	57                   	push   %edi$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	56                   	push   %esi$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	53                   	push   %ebx$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	e8 74 bb ff ff       	call   f01001d9 <__x86.get_pc_thunk.bx>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	81 c3 8f aa 08 00    	add    $0x8aa8f,%ebx$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	85 c0                	test   %eax,%eax$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	74 13                	je     f0104685 <readline+0x2e>$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	50                   	push   %eax$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	8d 83 5d 69 f7 ff    	lea    -0x896a3(%ebx),%eax$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	50                   	push   %eax$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	e8 b5 f1 ff ff       	call   f0103837 <cprintf>$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	6a 00                	push   $0x0$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	e8 b5 c0 ff ff       	call   f0100744 <iscons>$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	eb 52                	jmp    f01046ee <readline+0x97>$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	50                   	push   %eax$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	8d 83 6c 72 f7 ff    	lea    -0x88d94(%ebx),%eax$/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	50                   	push   %eax$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	e8 8b f1 ff ff       	call   f0103837 <cprintf>$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	5b                   	pop    %ebx$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	5e                   	pop    %esi$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	5f                   	pop    %edi$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	5d                   	pop    %ebp$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	c3                   	ret    $/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	75 05                	jne    f01046c7 <readline+0x70>$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	eb 27                	jmp    f01046ee <readline+0x97>$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	6a 08                	push   $0x8$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	e8 52 c0 ff ff       	call   f0100723 <cputchar>$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046d4	obj/kern/kernel.asm	/^f01046d4:	eb ec                	jmp    f01046c2 <readline+0x6b>$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	56                   	push   %esi$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	e8 44 c0 ff ff       	call   f0100723 <cputchar>$/;"	l
f01046df	obj/kern/kernel.asm	/^f01046df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	89 f0                	mov    %esi,%eax$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	88 84 3b 0c 0b 00 00 	mov    %al,0xb0c(%ebx,%edi,1)$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	8d 7f 01             	lea    0x1(%edi),%edi$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	e8 40 c0 ff ff       	call   f0100733 <getchar>$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	89 c6                	mov    %eax,%esi$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	85 c0                	test   %eax,%eax$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	78 a3                	js     f010469c <readline+0x45>$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	0f 94 c2             	sete   %dl$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702:	0f 94 c0             	sete   %al$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	08 c2                	or     %al,%dl$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	74 04                	je     f010470d <readline+0xb6>$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	85 ff                	test   %edi,%edi$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	7f af                	jg     f01046bc <readline+0x65>$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	83 fe 1f             	cmp    $0x1f,%esi$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	7e 10                	jle    f0104722 <readline+0xcb>$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	81 ff fe 03 00 00    	cmp    $0x3fe,%edi$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	7f 08                	jg     f0104722 <readline+0xcb>$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	74 c2                	je     f01046e2 <readline+0x8b>$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	eb b4                	jmp    f01046d6 <readline+0x7f>$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	74 05                	je     f010472c <readline+0xd5>$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	83 fe 0d             	cmp    $0xd,%esi$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	75 c2                	jne    f01046ee <readline+0x97>$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	75 13                	jne    f0104745 <readline+0xee>$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	c6 84 3b 0c 0b 00 00 	movb   $0x0,0xb0c(%ebx,%edi,1)$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	00 $/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	8d 83 0c 0b 00 00    	lea    0xb0c(%ebx),%eax$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	e9 6f ff ff ff       	jmp    f01046b4 <readline+0x5d>$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	6a 0a                	push   $0xa$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	e8 d4 bf ff ff       	call   f0100723 <cputchar>$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	eb de                	jmp    f0104732 <readline+0xdb>$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754 <strlen>:$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	55                   	push   %ebp$/;"	l
f0104755	obj/kern/kernel.asm	/^f0104755:	89 e5                	mov    %esp,%ebp$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	74 05                	je     f010476a <strlen+0x16>$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	eb f5                	jmp    f010475f <strlen+0xb>$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	5d                   	pop    %ebp$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	c3                   	ret    $/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c <strnlen>:$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	55                   	push   %ebp$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	89 e5                	mov    %esp,%ebp$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	39 c2                	cmp    %eax,%edx$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	74 0d                	je     f010478b <strnlen+0x1f>$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	74 05                	je     f0104789 <strnlen+0x1d>$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	eb f1                	jmp    f010477a <strnlen+0xe>$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	89 d0                	mov    %edx,%eax$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	5d                   	pop    %ebp$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	c3                   	ret    $/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d <strcpy>:$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	55                   	push   %ebp$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	53                   	push   %ebx$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	84 c9                	test   %cl,%cl$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	75 f2                	jne    f010479c <strcpy+0xf>$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	5b                   	pop    %ebx$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	5d                   	pop    %ebp$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	c3                   	ret    $/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad <strcat>:$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	55                   	push   %ebp$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	53                   	push   %ebx$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	53                   	push   %ebx$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	e8 97 ff ff ff       	call   f0104754 <strlen>$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01047c3	obj/kern/kernel.asm	/^f01047c3:	01 d8                	add    %ebx,%eax$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	50                   	push   %eax$/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	e8 c2 ff ff ff       	call   f010478d <strcpy>$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	89 d8                	mov    %ebx,%eax$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	c9                   	leave  $/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	c3                   	ret    $/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2 <strncpy>:$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	55                   	push   %ebp$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	56                   	push   %esi$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	53                   	push   %ebx$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	89 c6                	mov    %eax,%esi$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	89 c2                	mov    %eax,%edx$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	39 f2                	cmp    %esi,%edx$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	74 11                	je     f01047f9 <strncpy+0x27>$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	80 fb 01             	cmp    $0x1,%bl$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	eb eb                	jmp    f01047e4 <strncpy+0x12>$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	5b                   	pop    %ebx$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	5e                   	pop    %esi$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	5d                   	pop    %ebp$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	c3                   	ret    $/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd <strlcpy>:$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	55                   	push   %ebp$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	56                   	push   %esi$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	53                   	push   %ebx$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	89 f0                	mov    %esi,%eax$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	85 d2                	test   %edx,%edx$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	74 21                	je     f0104832 <strlcpy+0x35>$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	89 f2                	mov    %esi,%edx$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	39 c2                	cmp    %eax,%edx$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	74 14                	je     f010482f <strlcpy+0x32>$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	84 db                	test   %bl,%bl$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	74 0b                	je     f010482d <strlcpy+0x30>$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	eb ea                	jmp    f0104817 <strlcpy+0x1a>$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	89 d0                	mov    %edx,%eax$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	29 f0                	sub    %esi,%eax$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	5b                   	pop    %ebx$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	5e                   	pop    %esi$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	5d                   	pop    %ebp$/;"	l
f0104837	obj/kern/kernel.asm	/^f0104837:	c3                   	ret    $/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838 <strcmp>:$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	55                   	push   %ebp$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	89 e5                	mov    %esp,%ebp$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	84 c0                	test   %al,%al$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	74 0c                	je     f0104854 <strcmp+0x1c>$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	3a 02                	cmp    (%edx),%al$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	75 08                	jne    f0104854 <strcmp+0x1c>$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	eb ed                	jmp    f0104841 <strcmp+0x9>$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104857	obj/kern/kernel.asm	/^f0104857:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	29 d0                	sub    %edx,%eax$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	5d                   	pop    %ebp$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	c3                   	ret    $/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e <strncmp>:$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	55                   	push   %ebp$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	53                   	push   %ebx$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	89 c3                	mov    %eax,%ebx$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	eb 06                	jmp    f0104875 <strncmp+0x17>$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	74 16                	je     f010488f <strncmp+0x31>$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	84 c9                	test   %cl,%cl$/;"	l
f010487e	obj/kern/kernel.asm	/^f010487e:	74 04                	je     f0104884 <strncmp+0x26>$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	74 eb                	je     f010486f <strncmp+0x11>$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	29 d0                	sub    %edx,%eax$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	5b                   	pop    %ebx$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	5d                   	pop    %ebp$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	c3                   	ret    $/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	eb f6                	jmp    f010488c <strncmp+0x2e>$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896 <strchr>:$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	55                   	push   %ebp$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	89 e5                	mov    %esp,%ebp$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	84 d2                	test   %dl,%dl$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	74 09                	je     f01048b0 <strchr+0x1a>$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	38 ca                	cmp    %cl,%dl$/;"	l
f01048a9	obj/kern/kernel.asm	/^f01048a9:	74 0a                	je     f01048b5 <strchr+0x1f>$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	83 c0 01             	add    $0x1,%eax$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	eb f0                	jmp    f01048a0 <strchr+0xa>$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01048b5	obj/kern/kernel.asm	/^f01048b5:	5d                   	pop    %ebp$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	c3                   	ret    $/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7 <strfind>:$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	55                   	push   %ebp$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	38 ca                	cmp    %cl,%dl$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	74 09                	je     f01048d1 <strfind+0x1a>$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	84 d2                	test   %dl,%dl$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	74 05                	je     f01048d1 <strfind+0x1a>$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	83 c0 01             	add    $0x1,%eax$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	eb f0                	jmp    f01048c1 <strfind+0xa>$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	5d                   	pop    %ebp$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	c3                   	ret    $/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3 <memset>:$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	55                   	push   %ebp$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	89 e5                	mov    %esp,%ebp$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	57                   	push   %edi$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	56                   	push   %esi$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	53                   	push   %ebx$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	85 c9                	test   %ecx,%ecx$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	74 31                	je     f0104914 <memset+0x41>$/;"	l
f01048e3	obj/kern/kernel.asm	/^f01048e3:	89 f8                	mov    %edi,%eax$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	09 c8                	or     %ecx,%eax$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	a8 03                	test   $0x3,%al$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	75 23                	jne    f010490e <memset+0x3b>$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	89 d3                	mov    %edx,%ebx$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	89 d0                	mov    %edx,%eax$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	89 d6                	mov    %edx,%esi$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	09 f0                	or     %esi,%eax$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	09 c2                	or     %eax,%edx$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	09 da                	or     %ebx,%edx$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	89 d0                	mov    %edx,%eax$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	fc                   	cld    $/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	eb 06                	jmp    f0104914 <memset+0x41>$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	fc                   	cld    $/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	89 f8                	mov    %edi,%eax$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	5b                   	pop    %ebx$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	5e                   	pop    %esi$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	5f                   	pop    %edi$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	5d                   	pop    %ebp$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	c3                   	ret    $/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b <memmove>:$/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b:	55                   	push   %ebp$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	89 e5                	mov    %esp,%ebp$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	57                   	push   %edi$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	56                   	push   %esi$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	39 c6                	cmp    %eax,%esi$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	73 32                	jae    f010495f <memmove+0x44>$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	39 c2                	cmp    %eax,%edx$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	76 2b                	jbe    f010495f <memmove+0x44>$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0104937	obj/kern/kernel.asm	/^f0104937:	89 fe                	mov    %edi,%esi$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	09 ce                	or     %ecx,%esi$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	09 d6                	or     %edx,%esi$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	75 0e                	jne    f0104953 <memmove+0x38>$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	fd                   	std    $/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	eb 09                	jmp    f010495c <memmove+0x41>$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	fd                   	std    $/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	fc                   	cld    $/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	eb 1a                	jmp    f0104979 <memmove+0x5e>$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	89 c2                	mov    %eax,%edx$/;"	l
f0104961	obj/kern/kernel.asm	/^f0104961:	09 ca                	or     %ecx,%edx$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	09 f2                	or     %esi,%edx$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	75 0a                	jne    f0104974 <memmove+0x59>$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	89 c7                	mov    %eax,%edi$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	fc                   	cld    $/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	eb 05                	jmp    f0104979 <memmove+0x5e>$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	89 c7                	mov    %eax,%edi$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	fc                   	cld    $/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	5e                   	pop    %esi$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	5f                   	pop    %edi$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	5d                   	pop    %ebp$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	c3                   	ret    $/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d <memcpy>:$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	55                   	push   %ebp$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	e8 8a ff ff ff       	call   f010491b <memmove>$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	c9                   	leave  $/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	c3                   	ret    $/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993 <memcmp>:$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	55                   	push   %ebp$/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994:	89 e5                	mov    %esp,%ebp$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	56                   	push   %esi$/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	53                   	push   %ebx$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	89 c6                	mov    %eax,%esi$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	39 f0                	cmp    %esi,%eax$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	74 1c                	je     f01049c3 <memcmp+0x30>$/;"	l
f01049a7	obj/kern/kernel.asm	/^f01049a7:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	38 d9                	cmp    %bl,%cl$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	75 08                	jne    f01049b9 <memcmp+0x26>$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	eb ea                	jmp    f01049a3 <memcmp+0x10>$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	29 d8                	sub    %ebx,%eax$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	eb 05                	jmp    f01049c8 <memcmp+0x35>$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	5b                   	pop    %ebx$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	5e                   	pop    %esi$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	5d                   	pop    %ebp$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	c3                   	ret    $/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc <memfind>:$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	55                   	push   %ebp$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	89 e5                	mov    %esp,%ebp$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	89 c2                	mov    %eax,%edx$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	39 d0                	cmp    %edx,%eax$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	73 09                	jae    f01049e7 <memfind+0x1b>$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	38 08                	cmp    %cl,(%eax)$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	74 05                	je     f01049e7 <memfind+0x1b>$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	83 c0 01             	add    $0x1,%eax$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	eb f3                	jmp    f01049da <memfind+0xe>$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	5d                   	pop    %ebp$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	c3                   	ret    $/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9 <strtol>:$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	55                   	push   %ebp$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	57                   	push   %edi$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	56                   	push   %esi$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	53                   	push   %ebx$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	eb 03                	jmp    f01049fa <strtol+0x11>$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	3c 20                	cmp    $0x20,%al$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	74 f6                	je     f01049f7 <strtol+0xe>$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	3c 09                	cmp    $0x9,%al$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	74 f2                	je     f01049f7 <strtol+0xe>$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	74 2a                	je     f0104a33 <strtol+0x4a>$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	74 2b                	je     f0104a3d <strtol+0x54>$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	75 0f                	jne    f0104a29 <strtol+0x40>$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	74 28                	je     f0104a47 <strtol+0x5e>$/;"	l
f0104a1f	obj/kern/kernel.asm	/^f0104a1f:	85 db                	test   %ebx,%ebx$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	0f 44 d8             	cmove  %eax,%ebx$/;"	l
f0104a29	obj/kern/kernel.asm	/^f0104a29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	eb 50                	jmp    f0104a83 <strtol+0x9a>$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	eb d5                	jmp    f0104a12 <strtol+0x29>$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	eb cb                	jmp    f0104a12 <strtol+0x29>$/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	74 0e                	je     f0104a5b <strtol+0x72>$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	85 db                	test   %ebx,%ebx$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	75 d8                	jne    f0104a29 <strtol+0x40>$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	eb ce                	jmp    f0104a29 <strtol+0x40>$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0104a63	obj/kern/kernel.asm	/^f0104a63:	eb c4                	jmp    f0104a29 <strtol+0x40>$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	89 f3                	mov    %esi,%ebx$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	77 29                	ja     f0104a98 <strtol+0xaf>$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	7d 30                	jge    f0104aaa <strtol+0xc1>$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	01 d0                	add    %edx,%eax$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	89 f3                	mov    %esi,%ebx$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	77 d5                	ja     f0104a65 <strtol+0x7c>$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	eb dd                	jmp    f0104a75 <strtol+0x8c>$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	89 f3                	mov    %esi,%ebx$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	77 08                	ja     f0104aaa <strtol+0xc1>$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	eb cb                	jmp    f0104a75 <strtol+0x8c>$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	74 05                	je     f0104ab5 <strtol+0xcc>$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	89 c2                	mov    %eax,%edx$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	f7 da                	neg    %edx$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	85 ff                	test   %edi,%edi$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	5b                   	pop    %ebx$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	5e                   	pop    %esi$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	5f                   	pop    %edi$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	5d                   	pop    %ebp$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	c3                   	ret    $/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	66 90                	xchg   %ax,%ax$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	66 90                	xchg   %ax,%ax$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	66 90                	xchg   %ax,%ax$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	66 90                	xchg   %ax,%ax$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	66 90                	xchg   %ax,%ax$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	66 90                	xchg   %ax,%ax$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	90                   	nop$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0 <__udivdi3>:$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	f3 0f 1e fb          	endbr32 $/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	55                   	push   %ebp$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	57                   	push   %edi$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	56                   	push   %esi$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	53                   	push   %ebx$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f0104aeb	obj/kern/kernel.asm	/^f0104aeb:	85 d2                	test   %edx,%edx$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	75 49                	jne    f0104b38 <__udivdi3+0x68>$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	76 15                	jbe    f0104b08 <__udivdi3+0x38>$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	31 ff                	xor    %edi,%edi$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	89 e8                	mov    %ebp,%eax$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	89 f2                	mov    %esi,%edx$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	f7 f3                	div    %ebx$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	89 fa                	mov    %edi,%edx$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	5b                   	pop    %ebx$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	5e                   	pop    %esi$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	5f                   	pop    %edi$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	5d                   	pop    %ebp$/;"	l
f0104b04	obj/kern/kernel.asm	/^f0104b04:	c3                   	ret    $/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	89 d9                	mov    %ebx,%ecx$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	85 db                	test   %ebx,%ebx$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	75 0b                	jne    f0104b19 <__udivdi3+0x49>$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	31 d2                	xor    %edx,%edx$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	f7 f3                	div    %ebx$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	89 c1                	mov    %eax,%ecx$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	31 d2                	xor    %edx,%edx$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	89 f0                	mov    %esi,%eax$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	f7 f1                	div    %ecx$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	89 c6                	mov    %eax,%esi$/;"	l
f0104b21	obj/kern/kernel.asm	/^f0104b21:	89 e8                	mov    %ebp,%eax$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	89 f7                	mov    %esi,%edi$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	f7 f1                	div    %ecx$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	89 fa                	mov    %edi,%edx$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	5b                   	pop    %ebx$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	5e                   	pop    %esi$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	5f                   	pop    %edi$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	5d                   	pop    %ebp$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	c3                   	ret    $/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	39 f2                	cmp    %esi,%edx$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	77 1c                	ja     f0104b58 <__udivdi3+0x88>$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	0f bd fa             	bsr    %edx,%edi$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	75 2c                	jne    f0104b70 <__udivdi3+0xa0>$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	39 f2                	cmp    %esi,%edx$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	72 06                	jb     f0104b4e <__udivdi3+0x7e>$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	31 c0                	xor    %eax,%eax$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	39 eb                	cmp    %ebp,%ebx$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	77 ad                	ja     f0104afb <__udivdi3+0x2b>$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	eb a6                	jmp    f0104afb <__udivdi3+0x2b>$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	31 ff                	xor    %edi,%edi$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	31 c0                	xor    %eax,%eax$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	89 fa                	mov    %edi,%edx$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	5b                   	pop    %ebx$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	5e                   	pop    %esi$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	5f                   	pop    %edi$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	5d                   	pop    %ebp$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	c3                   	ret    $/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	89 f9                	mov    %edi,%ecx$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104b77	obj/kern/kernel.asm	/^f0104b77:	29 f8                	sub    %edi,%eax$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	d3 e2                	shl    %cl,%edx$/;"	d
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	89 c1                	mov    %eax,%ecx$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	89 da                	mov    %ebx,%edx$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	d3 ea                	shr    %cl,%edx$/;"	d
f0104b85	obj/kern/kernel.asm	/^f0104b85:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	09 d1                	or     %edx,%ecx$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	89 f2                	mov    %esi,%edx$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	89 f9                	mov    %edi,%ecx$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	d3 e3                	shl    %cl,%ebx$/;"	d
f0104b95	obj/kern/kernel.asm	/^f0104b95:	89 c1                	mov    %eax,%ecx$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	d3 ea                	shr    %cl,%edx$/;"	d
f0104b99	obj/kern/kernel.asm	/^f0104b99:	89 f9                	mov    %edi,%ecx$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	89 eb                	mov    %ebp,%ebx$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	d3 e6                	shl    %cl,%esi$/;"	d
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	89 c1                	mov    %eax,%ecx$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	d3 eb                	shr    %cl,%ebx$/;"	d
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	09 de                	or     %ebx,%esi$/;"	l
f0104ba9	obj/kern/kernel.asm	/^f0104ba9:	89 f0                	mov    %esi,%eax$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	89 d6                	mov    %edx,%esi$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	89 c3                	mov    %eax,%ebx$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	39 d6                	cmp    %edx,%esi$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	72 15                	jb     f0104bd0 <__udivdi3+0x100>$/;"	l
f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	89 f9                	mov    %edi,%ecx$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	d3 e5                	shl    %cl,%ebp$/;"	d
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	39 c5                	cmp    %eax,%ebp$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	73 04                	jae    f0104bc7 <__udivdi3+0xf7>$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	39 d6                	cmp    %edx,%esi$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	74 09                	je     f0104bd0 <__udivdi3+0x100>$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	89 d8                	mov    %ebx,%eax$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	31 ff                	xor    %edi,%edi$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	e9 2b ff ff ff       	jmp    f0104afb <__udivdi3+0x2b>$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	31 ff                	xor    %edi,%edi$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	e9 21 ff ff ff       	jmp    f0104afb <__udivdi3+0x2b>$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	66 90                	xchg   %ax,%ax$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	66 90                	xchg   %ax,%ax$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	66 90                	xchg   %ax,%ax$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0 <__umoddi3>:$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	f3 0f 1e fb          	endbr32 $/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	55                   	push   %ebp$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	57                   	push   %edi$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	56                   	push   %esi$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	53                   	push   %ebx$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	8b 44 24 3c          	mov    0x3c(%esp),%eax$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	89 da                	mov    %ebx,%edx$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	85 c0                	test   %eax,%eax$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	75 3f                	jne    f0104c40 <__umoddi3+0x60>$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	39 df                	cmp    %ebx,%edi$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	76 13                	jbe    f0104c18 <__umoddi3+0x38>$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	89 f0                	mov    %esi,%eax$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	f7 f7                	div    %edi$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	89 d0                	mov    %edx,%eax$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	31 d2                	xor    %edx,%edx$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	5b                   	pop    %ebx$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	5e                   	pop    %esi$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	5f                   	pop    %edi$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	5d                   	pop    %ebp$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	c3                   	ret    $/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	89 fd                	mov    %edi,%ebp$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	85 ff                	test   %edi,%edi$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	75 0b                	jne    f0104c29 <__umoddi3+0x49>$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	31 d2                	xor    %edx,%edx$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	f7 f7                	div    %edi$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	89 c5                	mov    %eax,%ebp$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	89 d8                	mov    %ebx,%eax$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	31 d2                	xor    %edx,%edx$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	f7 f5                	div    %ebp$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	89 f0                	mov    %esi,%eax$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	f7 f5                	div    %ebp$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	89 d0                	mov    %edx,%eax$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	eb d4                	jmp    f0104c0b <__umoddi3+0x2b>$/;"	l
f0104c37	obj/kern/kernel.asm	/^f0104c37:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	66 90                	xchg   %ax,%ax$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	89 f1                	mov    %esi,%ecx$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	76 0a                	jbe    f0104c50 <__umoddi3+0x70>$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	89 f0                	mov    %esi,%eax$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	5b                   	pop    %ebx$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	5e                   	pop    %esi$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	5f                   	pop    %edi$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	5d                   	pop    %ebp$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	c3                   	ret    $/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	75 20                	jne    f0104c78 <__umoddi3+0x98>$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	0f 82 b0 00 00 00    	jb     f0104d10 <__umoddi3+0x130>$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	39 f7                	cmp    %esi,%edi$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	0f 86 a8 00 00 00    	jbe    f0104d10 <__umoddi3+0x130>$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	89 c8                	mov    %ecx,%eax$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	5b                   	pop    %ebx$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	5e                   	pop    %esi$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	5f                   	pop    %edi$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	5d                   	pop    %ebp$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	c3                   	ret    $/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	29 ea                	sub    %ebp,%edx$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	d3 e0                	shl    %cl,%eax$/;"	d
f0104c83	obj/kern/kernel.asm	/^f0104c83:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	89 d1                	mov    %edx,%ecx$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	89 f8                	mov    %edi,%eax$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	d3 e8                	shr    %cl,%eax$/;"	d
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	09 c1                	or     %eax,%ecx$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	89 d8                	mov    %ebx,%eax$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	d3 e7                	shl    %cl,%edi$/;"	d
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	89 d1                	mov    %edx,%ecx$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	d3 e8                	shr    %cl,%eax$/;"	d
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	d3 e3                	shl    %cl,%ebx$/;"	d
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	89 c7                	mov    %eax,%edi$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	89 d1                	mov    %edx,%ecx$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	89 f0                	mov    %esi,%eax$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	d3 e8                	shr    %cl,%eax$/;"	d
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	89 fa                	mov    %edi,%edx$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	d3 e6                	shl    %cl,%esi$/;"	d
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	09 d8                	or     %ebx,%eax$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	89 d1                	mov    %edx,%ecx$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	89 f3                	mov    %esi,%ebx$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	89 c6                	mov    %eax,%esi$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	89 d7                	mov    %edx,%edi$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	39 d1                	cmp    %edx,%ecx$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	72 06                	jb     f0104cdb <__umoddi3+0xfb>$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	75 10                	jne    f0104ce7 <__umoddi3+0x107>$/;"	l
f0104cd7	obj/kern/kernel.asm	/^f0104cd7:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	73 0c                	jae    f0104ce7 <__umoddi3+0x107>$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	2b 44 24 0c          	sub    0xc(%esp),%eax$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	1b 54 24 08          	sbb    0x8(%esp),%edx$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	89 d7                	mov    %edx,%edi$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	89 c6                	mov    %eax,%esi$/;"	l
f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	89 ca                	mov    %ecx,%edx$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	29 f3                	sub    %esi,%ebx$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	19 fa                	sbb    %edi,%edx$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	89 d0                	mov    %edx,%eax$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	d3 e0                	shl    %cl,%eax$/;"	d
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	d3 eb                	shr    %cl,%ebx$/;"	d
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	d3 ea                	shr    %cl,%edx$/;"	d
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	09 d8                	or     %ebx,%eax$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	5b                   	pop    %ebx$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	5e                   	pop    %esi$/;"	l
f0104d03	obj/kern/kernel.asm	/^f0104d03:	5f                   	pop    %edi$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	5d                   	pop    %ebp$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	c3                   	ret    $/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	89 da                	mov    %ebx,%edx$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	29 fe                	sub    %edi,%esi$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	19 c2                	sbb    %eax,%edx$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	89 f1                	mov    %esi,%ecx$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	89 c8                	mov    %ecx,%eax$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	e9 4b ff ff ff       	jmp    f0104c6a <__umoddi3+0x8a>$/;"	l
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	typeref:typename:uint32_t	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
fork	lib/fork.c	/^fork(void)$/;"	f	typeref:typename:envid_t
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	typeref:typename:void
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	typeref:typename:void
fs_test	fs/test.c	/^fs_test(void)$/;"	f	typeref:typename:void
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	typeref:typename:int (*)(int argc,char ** argv,struct Trapframe * tf)	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	typeref:typename:unsigned:5
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	typeref:typename:unsigned:2
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:3
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	typeref:typename:unsigned:4
gdb	GNUmakefile	/^gdb:$/;"	t
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc[]
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	typeref:typename:void	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getchar	kern/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getchar	lib/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	typeref:typename:long long	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)\/\/ap = arg pointer$/;"	f	typeref:typename:unsigned long long	file:
git-handin	GNUmakefile	/^git-handin: handin-check$/;"	t
grade	GNUmakefile	/^grade:$/;"	t
handin	GNUmakefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	GNUmakefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v	typeref:typename:const char *
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	typeref:typename:int	file:
hook-stop	.gdbinit	/^define hook-stop$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	typeref:typename:void	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f	typeref:typename:void
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc[256]
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	typeref:typename:int	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	typeref:typename:uint8_t	file:
inb	inc/x86.h	/^inb(int port)$/;"	f	typeref:typename:uint8_t
inl	inc/x86.h	/^inl(int port)$/;"	f	typeref:typename:uint32_t
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	typeref:typename:short
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	typeref:typename:int
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	typeref:typename:long long
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	typeref:typename:__signed char
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	typeref:typename:void
inw	inc/x86.h	/^inw(int port)$/;"	f	typeref:typename:uint16_t
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	typeref:typename:envid_t
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	typeref:typename:int32_t
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	typeref:typename:void
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v	typeref:typename:uint16_t
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	typeref:typename:void
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
ismp	kern/mpconfig.c	/^int ismp;$/;"	v	typeref:typename:int
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	typeref:typename:void	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	typeref:typename:void
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	typeref:typename:int	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v	typeref:typename:pde_t *
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v	typeref:typename:volatile uint32_t *
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	typeref:typename:void
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	typeref:typename:void
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	typeref:typename:void
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	typeref:typename:void
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v	typeref:typename:physaddr_t
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	typeref:typename:physaddr_t	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	typeref:typename:void	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe *	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lastcs	.gdbinit	/^set $lastcs = -1$/;"	t
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	typeref:typename:void
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	typeref:typename:void
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	typeref:typename:void
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	typeref:typename:uint8_t	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	typeref:typename:void
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	typeref:typename:void
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	typeref:typename:void
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	typeref:typename:void
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	typeref:typename:void	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	typeref:typename:void
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	typeref:typename:unsigned
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	typeref:typename:void	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	typeref:typename:void
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	typeref:typename:unsigned
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	typeref:typename:void
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	typeref:typename:void
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	typeref:typename:void	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	typeref:typename:int
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	typeref:typename:void *
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	typeref:typename:void	file:
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	typeref:typename:void *
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	typeref:typename:void
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	typeref:typename:void
mp_main	kern/init.c	/^mp_main(void)$/;"	f	typeref:typename:void
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	typeref:struct:mpconf *	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v	typeref:typename:void *
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	typeref:struct:mp *	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	typeref:struct:mp *	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:char *	file:
myapi.key	GNUmakefile	/^myapi.key:$/;"	t
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	typeref:typename:uint16_t
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	typeref:typename:uint8_t
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	typeref:typename:uint32_t
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	typeref:typename:uint8_t
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	typeref:typename:uintptr_t
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	typeref:typename:const char *	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	typeref:typename:char *
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v	typeref:typename:int
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end + 16, PGSIZE);		$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v	typeref:typename:size_t
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	typeref:typename:size_t	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	typeref:typename:int	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	typeref:typename:physaddr_t	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	typeref:typename:void
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	typeref:typename:void
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	typeref:typename:void
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	typeref:struct:PageInfo *
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^		padc = ' ';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^		padc = ' ';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	typeref:typename:void *
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	typeref:typename:physaddr_t
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	typeref:struct:PageInfo *
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	typeref:typename:void
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	typeref:typename:void
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	typeref:typename:void
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list ;	\/\/ Free list of physical $/;"	v	typeref:struct:PageInfo *	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^        page_free_list = &pages[i];$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	typeref:typename:void
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	typeref:typename:int
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	typeref:struct:PageInfo *
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo *
pages	lib/entry.S	/^	.set pages, UPAGES$/;"	d
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v	typeref:typename:const char *
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	typeref:typename:uintptr_t[10]
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	typeref:typename:uint32_t
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	typeref:typename:uint16_t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	typeref:typename:uint32_t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v	typeref:typename:unsigned char[][]
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	typeref:typename:pte_t *
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	typeref:typename:void	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	typeref:typename:void	file:
pgtab	obj/kern/kernel.asm	/^		pgtab = KADDR(PTE_ADDR(pgdir[pdx]));$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) (binary + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	typeref:typename:physaddr_t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	typeref:typename:void
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo *
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	typeref:typename:uint16_t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	typeref:typename:uint32_t
pre-qemu	GNUmakefile	/^pre-qemu: .gdbinit$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;\/\/精度$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;\/\/精度$/;"	d
prep-%	GNUmakefile	/^prep-%:$/;"	t
primeproc	user/primes.c	/^primeproc(void)$/;"	f	typeref:typename:unsigned
print-gdbport	GNUmakefile	/^print-gdbport:$/;"	t
print-qemu	GNUmakefile	/^print-qemu:$/;"	t
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	typeref:typename:void
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	typeref:typename:void
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	typeref:typename:void
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	typeref:typename:void	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	typeref:typename:uint8_t[20]	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, (void *)va, 1);		 $/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	typeref:typename:uint32_t
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr_ebp	obj/kern/kernel.asm	/^		ptr_ebp = (uint32_t *)ebp;$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	typeref:typename:void	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	typeref:typename:void	file:
qemu	GNUmakefile	/^qemu: $(IMAGES) pre-qemu$/;"	t
qemu-gdb	GNUmakefile	/^qemu-gdb: $(IMAGES) pre-qemu$/;"	t
qemu-nox	GNUmakefile	/^qemu-nox: $(IMAGES) pre-qemu$/;"	t
qemu-nox-gdb	GNUmakefile	/^qemu-nox-gdb: $(IMAGES) pre-qemu$/;"	t
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	typeref:typename:uint32_t
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	typeref:typename:uint32_t
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	typeref:typename:uint32_t
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	typeref:typename:uint32_t
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	typeref:typename:uint32_t
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	typeref:typename:uint32_t
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	typeref:typename:uint32_t
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	typeref:typename:uint64_t
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	typeref:typename:char *
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	typeref:typename:void
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	typeref:typename:void
realclean	GNUmakefile	/^realclean: clean$/;"	t
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	typeref:typename:uint32_t
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	typeref:typename:void	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	typeref:typename:uint8_t[3]	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	typeref:typename:uint8_t[8]	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
run-%	GNUmakefile	/^run-%: prep-% pre-qemu$/;"	t
run-%-gdb	GNUmakefile	/^run-%-gdb: prep-% pre-qemu$/;"	t
run-%-nox	GNUmakefile	/^run-%-nox: prep-% pre-qemu$/;"	t
run-%-nox-gdb	GNUmakefile	/^run-%-nox-gdb: prep-% pre-qemu$/;"	t
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	typeref:typename:void
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	typeref:typename:void
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	typeref:typename:unsigned:2
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	typeref:typename:bool	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	typeref:typename:void	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	typeref:typename:void
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	typeref:typename:int	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	typeref:typename:void	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	typeref:typename:void
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f	typeref:typename:int
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	typeref:typename:uint8_t[4]	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	typeref:typename:uint8_t[4]	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	typeref:typename:uint8_t[4]	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	typeref:typename:uint32_t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	typeref:typename:int
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	typeref:typename:uint8_t	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin_initlock	kern/spinlock.h	/^#define spin_initlock(/;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	typeref:typename:void
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	typeref:typename:void
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	typeref:typename:void	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	typeref:typename:int32_t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	typeref:typename:void	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:typename:const struct Stab *	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:typename:const struct Stab *	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	typeref:typename:const char *	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	typeref:typename:const char *	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v	typeref:typename:const char *
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v	typeref:typename:const char *
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	typeref:typename:char *
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	typeref:typename:char *
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	typeref:typename:int
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	typeref:typename:char *
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	typeref:typename:int
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	typeref:typename:long
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	typeref:typename:uint8_t	file:
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	typeref:typename:int	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	typeref:typename:int
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	typeref:typename:void	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	typeref:typename:void
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	typeref:typename:int	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	typeref:typename:int
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	typeref:typename:int	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	typeref:typename:int
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	typeref:typename:int	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	typeref:typename:int
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	typeref:typename:envid_t
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	typeref:typename:envid_t	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	typeref:typename:envid_t	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	typeref:typename:envid_t
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	typeref:typename:int	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	typeref:typename:int
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	typeref:typename:int	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	typeref:typename:int
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	typeref:typename:int	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	typeref:typename:int
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	typeref:typename:int	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	typeref:typename:int
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	typeref:typename:int	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	typeref:typename:int
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	typeref:typename:void	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	typeref:typename:void
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	typeref:typename:int32_t
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	typeref:typename:int32_t	file:
tarball-pref	GNUmakefile	/^tarball-pref: handin-check$/;"	t
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f	typeref:typename:void
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	typeref:typename:uintptr_t
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	typeref:typename:uintptr_t
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
thiscpu	kern/cpu.h	/^#define thiscpu /;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:typename:const volatile struct Env *
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	typeref:typename:void
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	typeref:typename:void
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	typeref:typename:void	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	typeref:typename:void
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	typeref:typename:void
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	typeref:typename:const char *	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	typeref:typename:physaddr_t
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	typeref:typename:uint16_t
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	typeref:typename:uint8_t	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	typeref:typename:void
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	typeref:typename:void
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	typeref:typename:int
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	typeref:typename:uintptr_t	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	typeref:typename:uintptr_t
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	typeref:typename:uintptr_t
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:PushRegs
uvpd	lib/entry.S	/^	.set uvpd, (UVPT+(UVPT>>12)*4)$/;"	d
uvpt	lib/entry.S	/^	.set uvpt, UVPT$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	inc/stdarg.h	/^#define va_start(/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v	typeref:typename:uint32_t
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	typeref:typename:void
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;\/\/总宽度$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;\/\/总宽度$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	typeref:typename:void
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	typeref:typename:uint32_t
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v	typeref:typename:int
